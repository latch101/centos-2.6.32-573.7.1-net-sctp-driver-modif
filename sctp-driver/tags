!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDIP_SERIAL_SIGN_BIT	sm.h	/^	ADDIP_SERIAL_SIGN_BIT = (1<<31)$/;"	e	enum:__anon36
ADDIP_SERIAL_gte	sm.h	/^static inline int ADDIP_SERIAL_gte(__u16 s, __u16 t)$/;"	f
ASCONF	primitive.c	/^DECLARE_PRIMITIVE(ASCONF);$/;"	v
ASOC_CLIENT_MSG	socket.c	96;"	d	file:
ASOC_MSG	socket.c	94;"	d	file:
CONFIG_IP_SCTP_MODULE	sctp.h	74;"	d
DEBUG_POST	sm_sideeffect.c	1077;"	d	file:
DEBUG_POST	sm_sideeffect.c	1132;"	d	file:
DEBUG_POST_SFX	sm_sideeffect.c	1082;"	d	file:
DEBUG_PRE	sm_sideeffect.c	1070;"	d	file:
DEBUG_PRE	sm_sideeffect.c	1131;"	d	file:
DECLARE_PRIMITIVE	primitive.c	/^DECLARE_PRIMITIVE(ABORT);$/;"	v
DECLARE_PRIMITIVE	primitive.c	57;"	d	file:
DO_LOOKUP	sm_statetable.c	69;"	d	file:
IS_IPV4_UNUSABLE_ADDRESS	constants.h	360;"	d
LOOPBACK_IFINDEX	net_namespace.h	127;"	d
MAX_KMALLOC_SIZE	ssnmap.c	43;"	d	file:
MSG_NOTIFICATION	user.h	/^	MSG_NOTIFICATION = 0x8000,$/;"	e	enum:sctp_msg_flags
MSG_NOTIFICATION	user.h	777;"	d
NETDEV_HASHBITS	net_namespace.h	36;"	d
NETDEV_HASHENTRIES	net_namespace.h	37;"	d
PWD	Makefile	/^PWD=`pwd`$/;"	m
REQUESTHEARTBEAT	primitive.c	/^DECLARE_PRIMITIVE(REQUESTHEARTBEAT);$/;"	v
SCTP_ABORT	user.h	/^	SCTP_ABORT=4,        \/* Send an ABORT message to the peer. *\/$/;"	e	enum:sctp_sinfo_flags
SCTP_ACTIVE	user.h	/^	SCTP_ACTIVE,$/;"	e	enum:sctp_spinfo_state
SCTP_ADAPTATION_INDICATION	user.h	/^	SCTP_ADAPTATION_INDICATION,$/;"	e	enum:sctp_sn_type
SCTP_ADAPTATION_LAYER	user.h	/^	SCTP_ADAPTATION_LAYER,$/;"	e	enum:sctp_optname
SCTP_ADAPTATION_LAYER	user.h	79;"	d
SCTP_ADDR4_PEERSUPP	constants.h	370;"	d
SCTP_ADDR6_ALLOWED	constants.h	368;"	d
SCTP_ADDR6_PEERSUPP	constants.h	372;"	d
SCTP_ADDR_ADDED	user.h	/^	SCTP_ADDR_ADDED,$/;"	e	enum:sctp_spc_state
SCTP_ADDR_AVAILABLE	user.h	/^	SCTP_ADDR_AVAILABLE,$/;"	e	enum:sctp_spc_state
SCTP_ADDR_CONFIRMED	user.h	/^	SCTP_ADDR_CONFIRMED,$/;"	e	enum:sctp_spc_state
SCTP_ADDR_DEL	structs.h	/^	SCTP_ADDR_DEL,		\/* address about to be deleted *\/$/;"	e	enum:__anon39
SCTP_ADDR_MADE_PRIM	user.h	/^	SCTP_ADDR_MADE_PRIM,$/;"	e	enum:sctp_spc_state
SCTP_ADDR_NEW	structs.h	/^	SCTP_ADDR_NEW,		\/* new address added to assoc\/ep *\/$/;"	e	enum:__anon39
SCTP_ADDR_OVER	user.h	/^	SCTP_ADDR_OVER = 2,  \/* Override the primary destination. *\/$/;"	e	enum:sctp_sinfo_flags
SCTP_ADDR_REMOVED	user.h	/^	SCTP_ADDR_REMOVED,$/;"	e	enum:sctp_spc_state
SCTP_ADDR_SRC	structs.h	/^	SCTP_ADDR_SRC,		\/* address can be used as source *\/$/;"	e	enum:__anon39
SCTP_ADDR_UNREACHABLE	user.h	/^	SCTP_ADDR_UNREACHABLE,$/;"	e	enum:sctp_spc_state
SCTP_ARBITRARY_COOKIE_ECHO_LEN	constants.h	/^enum { SCTP_ARBITRARY_COOKIE_ECHO_LEN = 200 };$/;"	e	enum:__anon17
SCTP_ARG_CONSTRUCTOR	command.h	156;"	d
SCTP_ASSERT	sctp.h	327;"	d
SCTP_ASSERT	sctp.h	341;"	d
SCTP_ASSOCINFO	user.h	/^	SCTP_ASSOCINFO,$/;"	e	enum:sctp_optname
SCTP_ASSOCINFO	user.h	67;"	d
SCTP_ASSOC_CHANGE	user.h	/^	SCTP_ASSOC_CHANGE,$/;"	e	enum:sctp_sn_type
SCTP_ASSOC_EYECATCHER	structs.h	/^	SCTP_ASSOC_EYECATCHER = 0xa550c123,$/;"	e	enum:__anon43
SCTP_AUTHENTICATION_INDICATION	user.h	/^	SCTP_AUTHENTICATION_INDICATION,$/;"	e	enum:sctp_sn_type
SCTP_AUTH_ACTIVE_KEY	user.h	/^	SCTP_AUTH_ACTIVE_KEY,$/;"	e	enum:sctp_optname
SCTP_AUTH_ACTIVE_KEY	user.h	115;"	d
SCTP_AUTH_CHUNK	user.h	/^	SCTP_AUTH_CHUNK,	\/* Set only: add a chunk type to authenticat *\/$/;"	e	enum:sctp_optname
SCTP_AUTH_CHUNK	user.h	109;"	d
SCTP_AUTH_DELETE_KEY	user.h	/^	SCTP_AUTH_DELETE_KEY,$/;"	e	enum:sctp_optname
SCTP_AUTH_DELETE_KEY	user.h	117;"	d
SCTP_AUTH_HMAC_ID_MAX	constants.h	418;"	d
SCTP_AUTH_HMAC_ID_RESERVED_0	constants.h	/^	SCTP_AUTH_HMAC_ID_RESERVED_0,$/;"	e	enum:__anon27
SCTP_AUTH_HMAC_ID_RESERVED_2	constants.h	/^	SCTP_AUTH_HMAC_ID_RESERVED_2,$/;"	e	enum:__anon27
SCTP_AUTH_HMAC_ID_SHA1	constants.h	/^	SCTP_AUTH_HMAC_ID_SHA1,$/;"	e	enum:__anon27
SCTP_AUTH_HMAC_ID_SHA256	constants.h	/^	SCTP_AUTH_HMAC_ID_SHA256,$/;"	e	enum:__anon27
SCTP_AUTH_KEY	user.h	/^	SCTP_AUTH_KEY,$/;"	e	enum:sctp_optname
SCTP_AUTH_KEY	user.h	113;"	d
SCTP_AUTH_MAX_CHUNKS	constants.h	428;"	d
SCTP_AUTH_NEWKEY	user.h	/^enum { SCTP_AUTH_NEWKEY = 0, };$/;"	e	enum:__anon46
SCTP_AUTH_NUM_HMACS	constants.h	419;"	d
SCTP_AUTH_RANDOM_LENGTH	constants.h	433;"	d
SCTP_AUTOCLOSE	user.h	/^	SCTP_AUTOCLOSE,$/;"	e	enum:sctp_optname
SCTP_AUTOCLOSE	user.h	73;"	d
SCTP_BINDX_ADD_ADDR	user.h	786;"	d
SCTP_BINDX_REM_ADDR	user.h	787;"	d
SCTP_CANT_STR_ASSOC	user.h	/^	SCTP_CANT_STR_ASSOC,$/;"	e	enum:sctp_sac_state
SCTP_CAN_FRTX	structs.h	762;"	d
SCTP_CID_BASE_MAX	constants.h	63;"	d
SCTP_CLOCK_GRANULARITY	constants.h	292;"	d
SCTP_CMD_ADAPTATION_IND	command.h	/^	SCTP_CMD_ADAPTATION_IND, \/* generate and send adaptation event *\/$/;"	e	enum:__anon1
SCTP_CMD_ASSOC_CHANGE	command.h	/^	SCTP_CMD_ASSOC_CHANGE,	 \/* generate and send assoc_change event *\/$/;"	e	enum:__anon1
SCTP_CMD_ASSOC_FAILED	command.h	/^	SCTP_CMD_ASSOC_FAILED,	 \/* Handle association failure. *\/$/;"	e	enum:__anon1
SCTP_CMD_ASSOC_SHKEY	command.h	/^	SCTP_CMD_ASSOC_SHKEY,    \/* generate the association shared keys *\/$/;"	e	enum:__anon1
SCTP_CMD_CHUNK_ULP	command.h	/^	SCTP_CMD_CHUNK_ULP,	\/* Send a chunk to the sockets layer.  *\/$/;"	e	enum:__anon1
SCTP_CMD_CLEAR_INIT_TAG	command.h	/^	SCTP_CMD_CLEAR_INIT_TAG, \/* Clears association peer's inittag. *\/$/;"	e	enum:__anon1
SCTP_CMD_COOKIEECHO_RESTART	command.h	/^	SCTP_CMD_COOKIEECHO_RESTART,  \/* High level, do cookie-echo timer work. *\/$/;"	e	enum:__anon1
SCTP_CMD_DELETE_TCB	command.h	/^	SCTP_CMD_DELETE_TCB,	\/* Delete the current association. *\/$/;"	e	enum:__anon1
SCTP_CMD_DEL_NON_PRIMARY	command.h	/^	SCTP_CMD_DEL_NON_PRIMARY, \/* Removes non-primary peer transports. *\/$/;"	e	enum:__anon1
SCTP_CMD_DISCARD_PACKET	command.h	/^	SCTP_CMD_DISCARD_PACKET, \/* Discard the whole packet. *\/$/;"	e	enum:__anon1
SCTP_CMD_ECN_CE	command.h	/^	SCTP_CMD_ECN_CE,        \/* Do delayed CE processing.   *\/$/;"	e	enum:__anon1
SCTP_CMD_ECN_CWR	command.h	/^	SCTP_CMD_ECN_CWR,	\/* Do delayed CWR processing.  *\/$/;"	e	enum:__anon1
SCTP_CMD_ECN_ECNE	command.h	/^	SCTP_CMD_ECN_ECNE,	\/* Do delayed ECNE processing. *\/$/;"	e	enum:__anon1
SCTP_CMD_EVENT_ULP	command.h	/^	SCTP_CMD_EVENT_ULP,	\/* Send a notification to the sockets layer. *\/$/;"	e	enum:__anon1
SCTP_CMD_FORCE_PRIM_RETRAN	command.h	/^	SCTP_CMD_FORCE_PRIM_RETRAN,  \/* Forces retrans. over primary path. *\/$/;"	e	enum:__anon1
SCTP_CMD_GEN_COOKIE_ECHO	command.h	/^	SCTP_CMD_GEN_COOKIE_ECHO, \/* Generate a COOKIE ECHO chunk. *\/$/;"	e	enum:__anon1
SCTP_CMD_GEN_INIT_ACK	command.h	/^	SCTP_CMD_GEN_INIT_ACK,	\/* Generate an INIT ACK chunk.  *\/$/;"	e	enum:__anon1
SCTP_CMD_GEN_SACK	command.h	/^	SCTP_CMD_GEN_SACK,	\/* Send a Selective ACK (maybe).  *\/$/;"	e	enum:__anon1
SCTP_CMD_GEN_SHUTDOWN	command.h	/^	SCTP_CMD_GEN_SHUTDOWN,   \/* Generate a SHUTDOWN chunk. *\/$/;"	e	enum:__anon1
SCTP_CMD_HB_TIMERS_START	command.h	/^	SCTP_CMD_HB_TIMERS_START,    \/* Start the heartbeat timers. *\/$/;"	e	enum:__anon1
SCTP_CMD_HB_TIMERS_STOP	command.h	/^	SCTP_CMD_HB_TIMERS_STOP,     \/* Stop the heartbeat timers.  *\/$/;"	e	enum:__anon1
SCTP_CMD_HB_TIMER_UPDATE	command.h	/^	SCTP_CMD_HB_TIMER_UPDATE,    \/* Update a heartbeat timers.  *\/$/;"	e	enum:__anon1
SCTP_CMD_INIT_CHOOSE_TRANSPORT	command.h	/^	SCTP_CMD_INIT_CHOOSE_TRANSPORT, \/* Choose transport for an INIT. *\/$/;"	e	enum:__anon1
SCTP_CMD_INIT_COUNTER_INC	command.h	/^	SCTP_CMD_INIT_COUNTER_INC,   \/* Increment init counter. *\/$/;"	e	enum:__anon1
SCTP_CMD_INIT_COUNTER_RESET	command.h	/^	SCTP_CMD_INIT_COUNTER_RESET, \/* Reset init counter. *\/$/;"	e	enum:__anon1
SCTP_CMD_INIT_FAILED	command.h	/^	SCTP_CMD_INIT_FAILED,   \/* High level, do init failure work. *\/$/;"	e	enum:__anon1
SCTP_CMD_INIT_RESTART	command.h	/^	SCTP_CMD_INIT_RESTART,  \/* High level, do init timer work. *\/$/;"	e	enum:__anon1
SCTP_CMD_LAST	command.h	/^	SCTP_CMD_LAST$/;"	e	enum:__anon1
SCTP_CMD_NEW_ASOC	command.h	/^	SCTP_CMD_NEW_ASOC,	\/* Register a new association.  *\/$/;"	e	enum:__anon1
SCTP_CMD_NEW_STATE	command.h	/^	SCTP_CMD_NEW_STATE,	\/* Enter a new state.  *\/$/;"	e	enum:__anon1
SCTP_CMD_NOP	command.h	/^	SCTP_CMD_NOP = 0,	\/* Do nothing. *\/$/;"	e	enum:__anon1
SCTP_CMD_PART_DELIVER	command.h	/^	SCTP_CMD_PART_DELIVER,	 \/* Partial data delivery considerations. *\/$/;"	e	enum:__anon1
SCTP_CMD_PEER_INIT	command.h	/^	SCTP_CMD_PEER_INIT,	\/* Process a INIT from the peer.  *\/$/;"	e	enum:__anon1
SCTP_CMD_PROCESS_CTSN	command.h	/^	SCTP_CMD_PROCESS_CTSN,   \/* Sideeffect from shutdown. *\/$/;"	e	enum:__anon1
SCTP_CMD_PROCESS_FWDTSN	command.h	/^	SCTP_CMD_PROCESS_FWDTSN, \/* Skips were reported, so process further. *\/$/;"	e	enum:__anon1
SCTP_CMD_PROCESS_OPERR	command.h	/^	SCTP_CMD_PROCESS_OPERR,  \/* Process an ERROR chunk. *\/$/;"	e	enum:__anon1
SCTP_CMD_PROCESS_SACK	command.h	/^	SCTP_CMD_PROCESS_SACK,	\/* Process an inbound SACK.  *\/$/;"	e	enum:__anon1
SCTP_CMD_PURGE_ASCONF_QUEUE	command.h	/^	SCTP_CMD_PURGE_ASCONF_QUEUE, \/* Purge all asconf queues.*\/$/;"	e	enum:__anon1
SCTP_CMD_PURGE_OUTQUEUE	command.h	/^	SCTP_CMD_PURGE_OUTQUEUE, \/* Purge all data waiting to be sent. *\/$/;"	e	enum:__anon1
SCTP_CMD_RENEGE	command.h	/^	SCTP_CMD_RENEGE,         \/* Renege data on an association. *\/$/;"	e	enum:__anon1
SCTP_CMD_REPLY	command.h	/^	SCTP_CMD_REPLY,		\/* Send a chunk to our peer.  *\/$/;"	e	enum:__anon1
SCTP_CMD_REPORT_BAD_TAG	command.h	/^	SCTP_CMD_REPORT_BAD_TAG, \/* Verification tags didn't match. *\/$/;"	e	enum:__anon1
SCTP_CMD_REPORT_DUP	command.h	/^	SCTP_CMD_REPORT_DUP,	\/* Report a duplicate TSN.  *\/$/;"	e	enum:__anon1
SCTP_CMD_REPORT_ERROR	command.h	/^	SCTP_CMD_REPORT_ERROR,   \/* Pass this error back out of the sm. *\/$/;"	e	enum:__anon1
SCTP_CMD_REPORT_FWDTSN	command.h	/^	SCTP_CMD_REPORT_FWDTSN,	 \/* Report new cumulative TSN Ack. *\/$/;"	e	enum:__anon1
SCTP_CMD_REPORT_TSN	command.h	/^	SCTP_CMD_REPORT_TSN,	\/* Record the arrival of a TSN.  *\/$/;"	e	enum:__anon1
SCTP_CMD_RETRAN	command.h	/^	SCTP_CMD_RETRAN,	\/* Mark a transport for retransmission.  *\/$/;"	e	enum:__anon1
SCTP_CMD_RTO_PENDING	command.h	/^	SCTP_CMD_RTO_PENDING,	 \/* Set transport's rto_pending. *\/$/;"	e	enum:__anon1
SCTP_CMD_SEND_MSG	command.h	/^	SCTP_CMD_SEND_MSG,	 \/* Send the whole use message *\/$/;"	e	enum:__anon1
SCTP_CMD_SEND_NEXT_ASCONF	command.h	/^	SCTP_CMD_SEND_NEXT_ASCONF, \/* Send the next ASCONF after ACK *\/$/;"	e	enum:__anon1
SCTP_CMD_SEND_PKT	command.h	/^	SCTP_CMD_SEND_PKT,	\/* Send a full packet to our peer.  *\/$/;"	e	enum:__anon1
SCTP_CMD_SETUP_T2	command.h	/^	SCTP_CMD_SETUP_T2,       \/* Hi-level, setup T2-shutdown parms.  *\/$/;"	e	enum:__anon1
SCTP_CMD_SETUP_T4	command.h	/^	SCTP_CMD_SETUP_T4,	 \/* ADDIP, setup T4 RTO timer parms. *\/$/;"	e	enum:__anon1
SCTP_CMD_SET_ASOC	command.h	/^	SCTP_CMD_SET_ASOC,	 \/* Restore association context *\/$/;"	e	enum:__anon1
SCTP_CMD_SET_SK_ERR	command.h	/^	SCTP_CMD_SET_SK_ERR,	 \/* Set sk_err *\/$/;"	e	enum:__anon1
SCTP_CMD_STRIKE	command.h	/^	SCTP_CMD_STRIKE,	\/* Mark a strike against a transport.  *\/$/;"	e	enum:__anon1
SCTP_CMD_T1_RETRAN	command.h	/^	SCTP_CMD_T1_RETRAN,	 \/* Mark for retransmission after T1 timeout  *\/$/;"	e	enum:__anon1
SCTP_CMD_T3_RTX_TIMERS_STOP	command.h	/^	SCTP_CMD_T3_RTX_TIMERS_STOP, \/* Stops T3-rtx pending timers *\/$/;"	e	enum:__anon1
SCTP_CMD_TIMER_RESTART	command.h	/^	SCTP_CMD_TIMER_RESTART,	\/* Restart a timer. *\/$/;"	e	enum:__anon1
SCTP_CMD_TIMER_START	command.h	/^	SCTP_CMD_TIMER_START,	\/* Start a timer.  *\/$/;"	e	enum:__anon1
SCTP_CMD_TIMER_START_ONCE	command.h	/^	SCTP_CMD_TIMER_START_ONCE, \/* Start a timer once *\/$/;"	e	enum:__anon1
SCTP_CMD_TIMER_STOP	command.h	/^	SCTP_CMD_TIMER_STOP,	\/* Stop a timer. *\/$/;"	e	enum:__anon1
SCTP_CMD_TRANSPORT_HB_SENT	command.h	/^	SCTP_CMD_TRANSPORT_HB_SENT,  \/* Reset the status of a transport. *\/$/;"	e	enum:__anon1
SCTP_CMD_TRANSPORT_IDLE	command.h	/^	SCTP_CMD_TRANSPORT_IDLE,     \/* Do manipulations on idle transport *\/$/;"	e	enum:__anon1
SCTP_CMD_TRANSPORT_ON	command.h	/^	SCTP_CMD_TRANSPORT_ON,       \/* Mark the transport as active. *\/$/;"	e	enum:__anon1
SCTP_CMD_UPDATE_ASSOC	command.h	/^	SCTP_CMD_UPDATE_ASSOC,   \/* Update association information. *\/$/;"	e	enum:__anon1
SCTP_CMD_UPDATE_INITTAG	command.h	/^	SCTP_CMD_UPDATE_INITTAG, \/* Update peer inittag *\/$/;"	e	enum:__anon1
SCTP_COMM_LOST	user.h	/^	SCTP_COMM_LOST,$/;"	e	enum:sctp_sac_state
SCTP_COMM_UP	user.h	/^	SCTP_COMM_UP,$/;"	e	enum:sctp_sac_state
SCTP_CONTEXT	user.h	/^	SCTP_CONTEXT,	\/* Receive Context *\/$/;"	e	enum:sctp_optname
SCTP_CONTEXT	user.h	101;"	d
SCTP_COOKIE_MULTIPLE	constants.h	311;"	d
SCTP_DATA_SENT	user.h	/^	SCTP_DATA_SENT,$/;"	e	enum:sctp_ssf_flags
SCTP_DATA_SNDSIZE	constants.h	156;"	d
SCTP_DATA_UNSENT	user.h	/^	SCTP_DATA_UNSENT,$/;"	e	enum:sctp_ssf_flags
SCTP_DBG_OBJCNT	sctp.h	368;"	d
SCTP_DBG_OBJCNT_DEC	sctp.h	366;"	d
SCTP_DBG_OBJCNT_DEC	sctp.h	383;"	d
SCTP_DBG_OBJCNT_ENTRY	sctp.h	374;"	d
SCTP_DBG_OBJCNT_INC	sctp.h	364;"	d
SCTP_DBG_OBJCNT_INC	sctp.h	382;"	d
SCTP_DEBUG	sctp.h	93;"	d
SCTP_DEBUG	sctp.h	95;"	d
SCTP_DEBUG_PRINTK	sctp.h	294;"	d
SCTP_DEBUG_PRINTK	sctp.h	336;"	d
SCTP_DEBUG_PRINTK_CONT	sctp.h	299;"	d
SCTP_DEBUG_PRINTK_CONT	sctp.h	337;"	d
SCTP_DEBUG_PRINTK_IPADDR	sctp.h	304;"	d
SCTP_DEBUG_PRINTK_IPADDR	sctp.h	338;"	d
SCTP_DEC_STATS	sctp.h	230;"	d
SCTP_DEFAULT_COOKIE_HMAC_MD5	sctp.h	75;"	d
SCTP_DEFAULT_COOKIE_LIFE	constants.h	294;"	d
SCTP_DEFAULT_INSTREAMS	constants.h	/^enum { SCTP_DEFAULT_INSTREAMS = SCTP_MAX_STREAM };$/;"	e	enum:__anon7
SCTP_DEFAULT_MAXSEGMENT	constants.h	302;"	d
SCTP_DEFAULT_MAXWINDOW	constants.h	297;"	d
SCTP_DEFAULT_MAX_BURST	constants.h	290;"	d
SCTP_DEFAULT_MINSEGMENT	constants.h	305;"	d
SCTP_DEFAULT_MINWINDOW	constants.h	296;"	d
SCTP_DEFAULT_OUTSTREAMS	constants.h	/^enum { SCTP_DEFAULT_OUTSTREAMS = 10 };$/;"	e	enum:__anon6
SCTP_DEFAULT_RWND_SHIFT	constants.h	298;"	d
SCTP_DEFAULT_SEND_PARAM	user.h	/^	SCTP_DEFAULT_SEND_PARAM,$/;"	e	enum:sctp_optname
SCTP_DEFAULT_SEND_PARAM	user.h	85;"	d
SCTP_DEFAULT_TIMEOUT_HEARTBEAT	constants.h	271;"	d
SCTP_DEFAULT_TIMEOUT_SACK	constants.h	274;"	d
SCTP_DELAYED_ACK	user.h	/^	SCTP_DELAYED_ACK,$/;"	e	enum:sctp_optname
SCTP_DELAYED_ACK	user.h	99;"	d
SCTP_DELAYED_ACK_TIME	user.h	97;"	d
SCTP_DELAYED_SACK	user.h	98;"	d
SCTP_DISABLE_DEBUG	sctp.h	325;"	d
SCTP_DISABLE_DEBUG	sctp.h	340;"	d
SCTP_DISABLE_FRAGMENTS	user.h	/^	SCTP_DISABLE_FRAGMENTS,$/;"	e	enum:sctp_optname
SCTP_DISABLE_FRAGMENTS	user.h	81;"	d
SCTP_DISPOSITION_ABORT	sm.h	/^	SCTP_DISPOSITION_ABORT,		 \/* Close the association NOW.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_BUG	sm.h	/^	SCTP_DISPOSITION_BUG,		 \/* This is a bug.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_CONSUME	sm.h	/^	SCTP_DISPOSITION_CONSUME,	 \/* Process return values normally.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_DELETE_TCB	sm.h	/^	SCTP_DISPOSITION_DELETE_TCB,	 \/* Close the association.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_DISCARD	sm.h	/^	SCTP_DISPOSITION_DISCARD,	 \/* No further processing.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_ERROR	sm.h	/^	SCTP_DISPOSITION_ERROR,		 \/* This is plain old user error.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_NOMEM	sm.h	/^	SCTP_DISPOSITION_NOMEM,		 \/* We ran out of memory--recover.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_NOT_IMPL	sm.h	/^	SCTP_DISPOSITION_NOT_IMPL,	 \/* This entry is not implemented.  *\/$/;"	e	enum:__anon31
SCTP_DISPOSITION_VIOLATION	sm.h	/^	SCTP_DISPOSITION_VIOLATION,	 \/* The peer is misbehaving.  *\/$/;"	e	enum:__anon31
SCTP_DONT_FRTX	structs.h	764;"	d
SCTP_ENABLE_DEBUG	sctp.h	324;"	d
SCTP_ENABLE_DEBUG	sctp.h	339;"	d
SCTP_EOF	user.h	/^	SCTP_EOF=MSG_FIN,    \/* Initiate graceful shutdown process. *\/	$/;"	e	enum:sctp_sinfo_flags
SCTP_EP_TYPE_ASSOCIATION	structs.h	/^	SCTP_EP_TYPE_ASSOCIATION,$/;"	e	enum:__anon41
SCTP_EP_TYPE_SOCKET	structs.h	/^	SCTP_EP_TYPE_SOCKET,$/;"	e	enum:__anon41
SCTP_EVENTS	user.h	/^	SCTP_EVENTS,$/;"	e	enum:sctp_optname
SCTP_EVENTS	user.h	87;"	d
SCTP_EVENT_ICMP_PROTO_UNREACH	constants.h	/^	SCTP_EVENT_ICMP_PROTO_UNREACH,$/;"	e	enum:__anon10
SCTP_EVENT_NO_PENDING_TSN	constants.h	/^	SCTP_EVENT_NO_PENDING_TSN = 0,$/;"	e	enum:__anon10
SCTP_EVENT_OTHER_MAX	constants.h	113;"	d
SCTP_EVENT_PRIMITIVE_MAX	constants.h	126;"	d
SCTP_EVENT_TIMEOUT_AUTOCLOSE	constants.h	/^	SCTP_EVENT_TIMEOUT_AUTOCLOSE,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_HEARTBEAT	constants.h	/^	SCTP_EVENT_TIMEOUT_HEARTBEAT,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_MAX	constants.h	105;"	d
SCTP_EVENT_TIMEOUT_NONE	constants.h	/^	SCTP_EVENT_TIMEOUT_NONE = 0,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_SACK	constants.h	/^	SCTP_EVENT_TIMEOUT_SACK,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T1_COOKIE	constants.h	/^	SCTP_EVENT_TIMEOUT_T1_COOKIE,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T1_INIT	constants.h	/^	SCTP_EVENT_TIMEOUT_T1_INIT,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T2_SHUTDOWN	constants.h	/^	SCTP_EVENT_TIMEOUT_T2_SHUTDOWN,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T3_RTX	constants.h	/^	SCTP_EVENT_TIMEOUT_T3_RTX,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T4_RTO	constants.h	/^	SCTP_EVENT_TIMEOUT_T4_RTO,$/;"	e	enum:__anon9
SCTP_EVENT_TIMEOUT_T5_SHUTDOWN_GUARD	constants.h	/^	SCTP_EVENT_TIMEOUT_T5_SHUTDOWN_GUARD,$/;"	e	enum:__anon9
SCTP_EVENT_T_CHUNK	constants.h	/^	SCTP_EVENT_T_CHUNK = 1,$/;"	e	enum:__anon8
SCTP_EVENT_T_OTHER	constants.h	/^	SCTP_EVENT_T_OTHER,$/;"	e	enum:__anon8
SCTP_EVENT_T_PRIMITIVE	constants.h	/^	SCTP_EVENT_T_PRIMITIVE$/;"	e	enum:__anon8
SCTP_EVENT_T_TIMEOUT	constants.h	/^	SCTP_EVENT_T_TIMEOUT,$/;"	e	enum:__anon8
SCTP_FAILED_THRESHOLD	user.h	/^	SCTP_FAILED_THRESHOLD,$/;"	e	enum:sctp_sn_error
SCTP_FORCE	command.h	/^static inline sctp_arg_t SCTP_FORCE(void)$/;"	f
SCTP_FRAGMENT_INTERLEAVE	user.h	/^	SCTP_FRAGMENT_INTERLEAVE,$/;"	e	enum:sctp_optname
SCTP_FRAGMENT_INTERLEAVE	user.h	103;"	d
SCTP_GET_ASSOC	user.h	/^	SCTP_GET_ASSOC, \/* Get min association info *\/$/;"	e	enum:sctp_optname
SCTP_GET_ASSOC	user.h	157;"	d
SCTP_GET_ASSOC_ID_LIST	user.h	/^	SCTP_GET_ASSOC_ID_LIST,  	\/* Read only *\/$/;"	e	enum:sctp_optname
SCTP_GET_ASSOC_ID_LIST	user.h	125;"	d
SCTP_GET_ASSOC_NUMBER	user.h	/^	SCTP_GET_ASSOC_NUMBER,		\/* Read only *\/$/;"	e	enum:sctp_optname
SCTP_GET_ASSOC_NUMBER	user.h	123;"	d
SCTP_GET_LOCAL_ADDRS	user.h	/^	SCTP_GET_LOCAL_ADDRS, 	\/* Get all local addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_LOCAL_ADDRS	user.h	151;"	d
SCTP_GET_LOCAL_ADDRS_NUM_OLD	user.h	/^	SCTP_GET_LOCAL_ADDRS_NUM_OLD, 	\/* Get number of local addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_LOCAL_ADDRS_NUM_OLD	user.h	143;"	d
SCTP_GET_LOCAL_ADDRS_OLD	user.h	/^	SCTP_GET_LOCAL_ADDRS_OLD, 	\/* Get all local addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_LOCAL_ADDRS_OLD	user.h	145;"	d
SCTP_GET_PEER_ADDRS	user.h	/^	SCTP_GET_PEER_ADDRS, 	\/* Get all peer addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_PEER_ADDRS	user.h	149;"	d
SCTP_GET_PEER_ADDRS_NUM_OLD	user.h	/^	SCTP_GET_PEER_ADDRS_NUM_OLD, 	\/* Get number of peer addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_PEER_ADDRS_NUM_OLD	user.h	139;"	d
SCTP_GET_PEER_ADDRS_OLD	user.h	/^	SCTP_GET_PEER_ADDRS_OLD, 	\/* Get all peer addresss. *\/$/;"	e	enum:sctp_optname
SCTP_GET_PEER_ADDRS_OLD	user.h	141;"	d
SCTP_GET_PEER_ADDR_INFO	user.h	/^	SCTP_GET_PEER_ADDR_INFO,$/;"	e	enum:sctp_optname
SCTP_GET_PEER_ADDR_INFO	user.h	95;"	d
SCTP_HEARTBEAT_SUCCESS	user.h	/^	SCTP_HEARTBEAT_SUCCESS,$/;"	e	enum:sctp_sn_error
SCTP_HMAC_IDENT	user.h	/^	SCTP_HMAC_IDENT,$/;"	e	enum:sctp_optname
SCTP_HMAC_IDENT	user.h	111;"	d
SCTP_HOW_MANY_SECRETS	constants.h	306;"	d
SCTP_IERROR_ABORT	constants.h	/^	SCTP_IERROR_ABORT,$/;"	e	enum:__anon13
SCTP_IERROR_AUTH_BAD_HMAC	constants.h	/^	SCTP_IERROR_AUTH_BAD_HMAC,$/;"	e	enum:__anon13
SCTP_IERROR_AUTH_BAD_KEYID	constants.h	/^	SCTP_IERROR_AUTH_BAD_KEYID,$/;"	e	enum:__anon13
SCTP_IERROR_BAD_PORTS	constants.h	/^	SCTP_IERROR_BAD_PORTS,$/;"	e	enum:__anon13
SCTP_IERROR_BAD_SIG	constants.h	/^	SCTP_IERROR_BAD_SIG,$/;"	e	enum:__anon13
SCTP_IERROR_BAD_STREAM	constants.h	/^	SCTP_IERROR_BAD_STREAM,$/;"	e	enum:__anon13
SCTP_IERROR_BAD_TAG	constants.h	/^	SCTP_IERROR_BAD_TAG,$/;"	e	enum:__anon13
SCTP_IERROR_BASE	constants.h	/^	SCTP_IERROR_BASE		= 1000,$/;"	e	enum:__anon13
SCTP_IERROR_BIG_GAP	constants.h	/^	SCTP_IERROR_BIG_GAP,$/;"	e	enum:__anon13
SCTP_IERROR_DUP_TSN	constants.h	/^	SCTP_IERROR_DUP_TSN,$/;"	e	enum:__anon13
SCTP_IERROR_ERROR	constants.h	/^	SCTP_IERROR_ERROR,$/;"	e	enum:__anon13
SCTP_IERROR_HIGH_TSN	constants.h	/^	SCTP_IERROR_HIGH_TSN,$/;"	e	enum:__anon13
SCTP_IERROR_IGNORE_TSN	constants.h	/^	SCTP_IERROR_IGNORE_TSN,$/;"	e	enum:__anon13
SCTP_IERROR_MALFORMED	constants.h	/^	SCTP_IERROR_MALFORMED,$/;"	e	enum:__anon13
SCTP_IERROR_NOMEM	constants.h	/^	SCTP_IERROR_NOMEM,$/;"	e	enum:__anon13
SCTP_IERROR_NO_COOKIE	constants.h	/^	SCTP_IERROR_NO_COOKIE,$/;"	e	enum:__anon13
SCTP_IERROR_NO_DATA	constants.h	/^	SCTP_IERROR_NO_DATA,$/;"	e	enum:__anon13
SCTP_IERROR_NO_ERROR	constants.h	/^	SCTP_IERROR_NO_ERROR	        = 0,$/;"	e	enum:__anon13
SCTP_IERROR_PROTO_VIOLATION	constants.h	/^	SCTP_IERROR_PROTO_VIOLATION,$/;"	e	enum:__anon13
SCTP_IERROR_STALE_COOKIE	constants.h	/^	SCTP_IERROR_STALE_COOKIE,$/;"	e	enum:__anon13
SCTP_INACTIVE	user.h	/^	SCTP_INACTIVE,$/;"	e	enum:sctp_spinfo_state
SCTP_INC_STATS	sctp.h	227;"	d
SCTP_INC_STATS_BH	sctp.h	228;"	d
SCTP_INC_STATS_USER	sctp.h	229;"	d
SCTP_INIT	user.h	/^	SCTP_INIT,              \/* 5.2.1 SCTP Initiation Structure *\/$/;"	e	enum:sctp_cmsg_type
SCTP_INITMSG	user.h	/^	SCTP_INITMSG,$/;"	e	enum:sctp_optname
SCTP_INITMSG	user.h	69;"	d
SCTP_INPUT_CB	input.c	113;"	d	file:
SCTP_INTERNAL_ERROR	user.h	/^	SCTP_INTERNAL_ERROR,$/;"	e	enum:sctp_sn_error
SCTP_I_WANT_MAPPED_V4_ADDR	user.h	/^	SCTP_I_WANT_MAPPED_V4_ADDR,  \/* Turn on\/off mapped v4 addresses  *\/$/;"	e	enum:sctp_optname
SCTP_I_WANT_MAPPED_V4_ADDR	user.h	89;"	d
SCTP_LOCAL_AUTH_CHUNKS	user.h	/^	SCTP_LOCAL_AUTH_CHUNKS,		\/* Read only *\/$/;"	e	enum:sctp_optname
SCTP_LOCAL_AUTH_CHUNKS	user.h	121;"	d
SCTP_LOWER_CWND_ECNE	constants.h	/^	SCTP_LOWER_CWND_ECNE,$/;"	e	enum:__anon26
SCTP_LOWER_CWND_FAST_RTX	constants.h	/^	SCTP_LOWER_CWND_FAST_RTX,$/;"	e	enum:__anon26
SCTP_LOWER_CWND_INACTIVE	constants.h	/^	SCTP_LOWER_CWND_INACTIVE,$/;"	e	enum:__anon26
SCTP_LOWER_CWND_T3_RTX	constants.h	/^	SCTP_LOWER_CWND_T3_RTX,$/;"	e	enum:__anon26
SCTP_MAXSEG	user.h	/^	SCTP_MAXSEG, 	\/* Get\/set maximum fragment. *\/$/;"	e	enum:sctp_optname
SCTP_MAXSEG	user.h	91;"	d
SCTP_MAX_BURST	user.h	/^	SCTP_MAX_BURST,		\/* Set\/Get max burst *\/$/;"	e	enum:sctp_optname
SCTP_MAX_BURST	user.h	107;"	d
SCTP_MAX_CHUNK_LEN	constants.h	/^enum { SCTP_MAX_CHUNK_LEN = ((1<<16) - sizeof(__u32)) };$/;"	e	enum:__anon16
SCTP_MAX_DUP_TSNS	constants.h	/^enum { SCTP_MAX_DUP_TSNS = 16 };$/;"	e	enum:__anon19
SCTP_MAX_GABS	constants.h	/^enum { SCTP_MAX_GABS = 16 };$/;"	e	enum:__anon20
SCTP_MAX_NUM_COMMANDS	command.h	121;"	d
SCTP_MAX_STREAM	constants.h	/^enum { SCTP_MAX_STREAM = 0xffff };$/;"	e	enum:__anon5
SCTP_MIB_ABORTEDS	sctp.h	/^	SCTP_MIB_ABORTEDS,			\/* Aborteds *\/$/;"	e	enum:__anon30
SCTP_MIB_ACTIVEESTABS	sctp.h	/^	SCTP_MIB_ACTIVEESTABS,			\/* ActiveEstabs *\/$/;"	e	enum:__anon30
SCTP_MIB_AUTOCLOSE_EXPIREDS	sctp.h	/^	SCTP_MIB_AUTOCLOSE_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_CHECKSUMERRORS	sctp.h	/^	SCTP_MIB_CHECKSUMERRORS,		\/* ChecksumErrors *\/$/;"	e	enum:__anon30
SCTP_MIB_CURRESTAB	sctp.h	/^	SCTP_MIB_CURRESTAB,			\/* CurrEstab *\/$/;"	e	enum:__anon30
SCTP_MIB_DELAY_SACK_EXPIREDS	sctp.h	/^	SCTP_MIB_DELAY_SACK_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_FAST_RETRANSMITS	sctp.h	/^	SCTP_MIB_FAST_RETRANSMITS,$/;"	e	enum:__anon30
SCTP_MIB_FRAGUSRMSGS	sctp.h	/^	SCTP_MIB_FRAGUSRMSGS,			\/* FragUsrMsgs *\/$/;"	e	enum:__anon30
SCTP_MIB_INCTRLCHUNKS	sctp.h	/^	SCTP_MIB_INCTRLCHUNKS,			\/* InCtrlChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_INORDERCHUNKS	sctp.h	/^	SCTP_MIB_INORDERCHUNKS,			\/* InOrderChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_INSCTPPACKS	sctp.h	/^	SCTP_MIB_INSCTPPACKS,			\/* InSCTPPacks *\/$/;"	e	enum:__anon30
SCTP_MIB_INUNORDERCHUNKS	sctp.h	/^	SCTP_MIB_INUNORDERCHUNKS,		\/* InUnorderChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_IN_DATA_CHUNK_DISCARDS	sctp.h	/^	SCTP_MIB_IN_DATA_CHUNK_DISCARDS,$/;"	e	enum:__anon30
SCTP_MIB_IN_PKT_BACKLOG	sctp.h	/^	SCTP_MIB_IN_PKT_BACKLOG,$/;"	e	enum:__anon30
SCTP_MIB_IN_PKT_DISCARDS	sctp.h	/^	SCTP_MIB_IN_PKT_DISCARDS,$/;"	e	enum:__anon30
SCTP_MIB_IN_PKT_SOFTIRQ	sctp.h	/^	SCTP_MIB_IN_PKT_SOFTIRQ,$/;"	e	enum:__anon30
SCTP_MIB_MAX	sctp.h	273;"	d
SCTP_MIB_NUM	sctp.h	/^	SCTP_MIB_NUM = 0,$/;"	e	enum:__anon30
SCTP_MIB_OUTCTRLCHUNKS	sctp.h	/^	SCTP_MIB_OUTCTRLCHUNKS,			\/* OutCtrlChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_OUTOFBLUES	sctp.h	/^	SCTP_MIB_OUTOFBLUES,			\/* OutOfBlues *\/$/;"	e	enum:__anon30
SCTP_MIB_OUTORDERCHUNKS	sctp.h	/^	SCTP_MIB_OUTORDERCHUNKS,		\/* OutOrderChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_OUTSCTPPACKS	sctp.h	/^	SCTP_MIB_OUTSCTPPACKS,			\/* OutSCTPPacks *\/$/;"	e	enum:__anon30
SCTP_MIB_OUTUNORDERCHUNKS	sctp.h	/^	SCTP_MIB_OUTUNORDERCHUNKS,		\/* OutUnorderChunks *\/$/;"	e	enum:__anon30
SCTP_MIB_PASSIVEESTABS	sctp.h	/^	SCTP_MIB_PASSIVEESTABS,			\/* PassiveEstabs *\/$/;"	e	enum:__anon30
SCTP_MIB_PMTUD_RETRANSMITS	sctp.h	/^	SCTP_MIB_PMTUD_RETRANSMITS,$/;"	e	enum:__anon30
SCTP_MIB_REASMUSRMSGS	sctp.h	/^	SCTP_MIB_REASMUSRMSGS,			\/* ReasmUsrMsgs *\/$/;"	e	enum:__anon30
SCTP_MIB_SHUTDOWNS	sctp.h	/^	SCTP_MIB_SHUTDOWNS,			\/* Shutdowns *\/$/;"	e	enum:__anon30
SCTP_MIB_T1_COOKIE_EXPIREDS	sctp.h	/^	SCTP_MIB_T1_COOKIE_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_T1_INIT_EXPIREDS	sctp.h	/^	SCTP_MIB_T1_INIT_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_T1_RETRANSMITS	sctp.h	/^	SCTP_MIB_T1_RETRANSMITS,$/;"	e	enum:__anon30
SCTP_MIB_T2_SHUTDOWN_EXPIREDS	sctp.h	/^	SCTP_MIB_T2_SHUTDOWN_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_T3_RETRANSMITS	sctp.h	/^	SCTP_MIB_T3_RETRANSMITS,$/;"	e	enum:__anon30
SCTP_MIB_T3_RTX_EXPIREDS	sctp.h	/^	SCTP_MIB_T3_RTX_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_T4_RTO_EXPIREDS	sctp.h	/^	SCTP_MIB_T4_RTO_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIB_T5_SHUTDOWN_GUARD_EXPIREDS	sctp.h	/^	SCTP_MIB_T5_SHUTDOWN_GUARD_EXPIREDS,$/;"	e	enum:__anon30
SCTP_MIN_PMTU	constants.h	/^enum { SCTP_MIN_PMTU = 576 };$/;"	e	enum:__anon18
SCTP_NEED_FRTX	structs.h	763;"	d
SCTP_NODELAY	user.h	/^	SCTP_NODELAY, 	\/* Get\/set nodelay option. *\/$/;"	e	enum:sctp_optname
SCTP_NODELAY	user.h	71;"	d
SCTP_NOFORCE	command.h	/^static inline sctp_arg_t SCTP_NOFORCE(void)$/;"	f
SCTP_NULL	command.h	/^static inline sctp_arg_t SCTP_NULL(void)$/;"	f
SCTP_NUM_ADDIP_CHUNK_TYPES	constants.h	67;"	d
SCTP_NUM_AUTH_CHUNK_TYPES	constants.h	71;"	d
SCTP_NUM_BASE_CHUNK_TYPES	constants.h	65;"	d
SCTP_NUM_CHUNK_TYPES	constants.h	73;"	d
SCTP_NUM_NOAUTH_CHUNKS	constants.h	427;"	d
SCTP_NUM_OTHER_TYPES	constants.h	114;"	d
SCTP_NUM_PRIMITIVE_TYPES	constants.h	127;"	d
SCTP_NUM_PRSCTP_CHUNK_TYPES	constants.h	69;"	d
SCTP_NUM_TIMEOUT_TYPES	constants.h	106;"	d
SCTP_PARTIAL_DELIVERY_ABORTED	user.h	/^enum { SCTP_PARTIAL_DELIVERY_ABORTED=0, };$/;"	e	enum:__anon45
SCTP_PARTIAL_DELIVERY_EVENT	user.h	/^	SCTP_PARTIAL_DELIVERY_EVENT,$/;"	e	enum:sctp_sn_type
SCTP_PARTIAL_DELIVERY_POINT	user.h	/^	SCTP_PARTIAL_DELIVERY_POINT,	\/* Set\/Get partial delivery point *\/$/;"	e	enum:sctp_optname
SCTP_PARTIAL_DELIVERY_POINT	user.h	105;"	d
SCTP_PEER_ADDR_CHANGE	user.h	/^	SCTP_PEER_ADDR_CHANGE,$/;"	e	enum:sctp_sn_type
SCTP_PEER_ADDR_PARAMS	user.h	/^	SCTP_PEER_ADDR_PARAMS,$/;"	e	enum:sctp_optname
SCTP_PEER_ADDR_PARAMS	user.h	83;"	d
SCTP_PEER_ADDR_THLDS	user.h	/^	SCTP_PEER_ADDR_THLDS = 31,$/;"	e	enum:sctp_optname
SCTP_PEER_ADDR_THLDS	user.h	127;"	d
SCTP_PEER_AUTH_CHUNKS	user.h	/^	SCTP_PEER_AUTH_CHUNKS,		\/* Read only *\/$/;"	e	enum:sctp_optname
SCTP_PEER_AUTH_CHUNKS	user.h	119;"	d
SCTP_PEER_FAULTY	user.h	/^	SCTP_PEER_FAULTY,$/;"	e	enum:sctp_sn_error
SCTP_PF	user.h	/^	SCTP_PF,$/;"	e	enum:sctp_spinfo_state
SCTP_PRIMARY_ADDR	user.h	/^	SCTP_PRIMARY_ADDR,$/;"	e	enum:sctp_optname
SCTP_PRIMARY_ADDR	user.h	77;"	d
SCTP_PRIMITIVE_ABORT	constants.h	/^	SCTP_PRIMITIVE_ABORT,$/;"	e	enum:__anon11
SCTP_PRIMITIVE_ASCONF	constants.h	/^	SCTP_PRIMITIVE_ASCONF,$/;"	e	enum:__anon11
SCTP_PRIMITIVE_ASSOCIATE	constants.h	/^	SCTP_PRIMITIVE_ASSOCIATE = 0,$/;"	e	enum:__anon11
SCTP_PRIMITIVE_REQUESTHEARTBEAT	constants.h	/^	SCTP_PRIMITIVE_REQUESTHEARTBEAT,$/;"	e	enum:__anon11
SCTP_PRIMITIVE_SEND	constants.h	/^	SCTP_PRIMITIVE_SEND,$/;"	e	enum:__anon11
SCTP_PRIMITIVE_SHUTDOWN	constants.h	/^	SCTP_PRIMITIVE_SHUTDOWN,$/;"	e	enum:__anon11
SCTP_PROTOSW_FLAG	sctp.h	100;"	d
SCTP_PROTOSW_FLAG	sctp.h	102;"	d
SCTP_RECEIVED_SACK	user.h	/^	SCTP_RECEIVED_SACK,$/;"	e	enum:sctp_sn_error
SCTP_REMOTE_ERROR	user.h	/^	SCTP_REMOTE_ERROR,$/;"	e	enum:sctp_sn_type
SCTP_RESPONSE_TO_USER_REQ	user.h	/^	SCTP_RESPONSE_TO_USER_REQ,$/;"	e	enum:sctp_sn_error
SCTP_RESTART	user.h	/^	SCTP_RESTART,$/;"	e	enum:sctp_sac_state
SCTP_RTOINFO	user.h	/^	SCTP_RTOINFO,$/;"	e	enum:sctp_optname
SCTP_RTOINFO	user.h	65;"	d
SCTP_RTO_ALPHA	constants.h	286;"	d
SCTP_RTO_BETA	constants.h	287;"	d
SCTP_RTO_INITIAL	constants.h	282;"	d
SCTP_RTO_MAX	constants.h	284;"	d
SCTP_RTO_MIN	constants.h	283;"	d
SCTP_RTXR_FAST_RTX	constants.h	/^	SCTP_RTXR_FAST_RTX,$/;"	e	enum:__anon25
SCTP_RTXR_PMTUD	constants.h	/^	SCTP_RTXR_PMTUD,$/;"	e	enum:__anon25
SCTP_RTXR_T1_RTX	constants.h	/^	SCTP_RTXR_T1_RTX,$/;"	e	enum:__anon25
SCTP_RTXR_T3_RTX	constants.h	/^	SCTP_RTXR_T3_RTX,$/;"	e	enum:__anon25
SCTP_SAT_LEN	sctp.h	403;"	d
SCTP_SCOPE_GLOBAL	constants.h	/^	SCTP_SCOPE_GLOBAL,		\/* IPv4 global addresses *\/$/;"	e	enum:__anon23
SCTP_SCOPE_LINK	constants.h	/^	SCTP_SCOPE_LINK,		\/* IPv4 link local address *\/$/;"	e	enum:__anon23
SCTP_SCOPE_LOOPBACK	constants.h	/^	SCTP_SCOPE_LOOPBACK,		\/* IPv4 loopback address *\/$/;"	e	enum:__anon23
SCTP_SCOPE_POLICY_DISABLE	constants.h	/^	SCTP_SCOPE_POLICY_DISABLE,	\/* Disable IPv4 address scoping *\/$/;"	e	enum:__anon24
SCTP_SCOPE_POLICY_ENABLE	constants.h	/^	SCTP_SCOPE_POLICY_ENABLE,	\/* Enable IPv4 address scoping *\/$/;"	e	enum:__anon24
SCTP_SCOPE_POLICY_LINK	constants.h	/^	SCTP_SCOPE_POLICY_LINK,		\/* Follow draft but allow IPv4 link local addresses *\/$/;"	e	enum:__anon24
SCTP_SCOPE_POLICY_PRIVATE	constants.h	/^	SCTP_SCOPE_POLICY_PRIVATE,	\/* Follow draft but allow IPv4 private addresses *\/$/;"	e	enum:__anon24
SCTP_SCOPE_PRIVATE	constants.h	/^	SCTP_SCOPE_PRIVATE,		\/* IPv4 private addresses *\/$/;"	e	enum:__anon23
SCTP_SCOPE_UNUSABLE	constants.h	/^	SCTP_SCOPE_UNUSABLE,		\/* IPv4 unusable addresses *\/$/;"	e	enum:__anon23
SCTP_SECRET_SIZE	constants.h	307;"	d
SCTP_SENDER_DRY_EVENT	user.h	/^	SCTP_SENDER_DRY_EVENT,$/;"	e	enum:sctp_sn_type
SCTP_SEND_FAILED	user.h	/^	SCTP_SEND_FAILED,$/;"	e	enum:sctp_sn_type
SCTP_SET_ASSOC	user.h	/^	SCTP_SET_ASSOC, \/* Set backup Association *\/$/;"	e	enum:sctp_optname
SCTP_SET_ASSOC	user.h	159;"	d
SCTP_SET_PEER_PRIMARY_ADDR	user.h	/^	SCTP_SET_PEER_PRIMARY_ADDR, $/;"	e	enum:sctp_optname
SCTP_SET_PEER_PRIMARY_ADDR	user.h	75;"	d
SCTP_SHA1_SIG_SIZE	constants.h	420;"	d
SCTP_SHA256_SIG_SIZE	constants.h	421;"	d
SCTP_SHUTDOWN_COMP	user.h	/^	SCTP_SHUTDOWN_COMP,$/;"	e	enum:sctp_sac_state
SCTP_SHUTDOWN_EVENT	user.h	/^	SCTP_SHUTDOWN_EVENT,$/;"	e	enum:sctp_sn_type
SCTP_SHUTDOWN_GUARD_EXPIRES	user.h	/^	SCTP_SHUTDOWN_GUARD_EXPIRES,$/;"	e	enum:sctp_sn_error
SCTP_SIGNATURE_SIZE	constants.h	309;"	d
SCTP_SNDRCV	user.h	/^	SCTP_SNDRCV,            \/* 5.2.2 SCTP Header Information Structure *\/$/;"	e	enum:sctp_cmsg_type
SCTP_SN_TYPE_BASE	user.h	/^	SCTP_SN_TYPE_BASE     = (1<<15),$/;"	e	enum:sctp_sn_type
SCTP_SOCKET_TCP	structs.h	/^	SCTP_SOCKET_TCP$/;"	e	enum:__anon37
SCTP_SOCKET_UDP	structs.h	/^	SCTP_SOCKET_UDP = 0,$/;"	e	enum:__anon37
SCTP_SOCKET_UDP_HIGH_BANDWIDTH	structs.h	/^	SCTP_SOCKET_UDP_HIGH_BANDWIDTH,$/;"	e	enum:__anon37
SCTP_SOCKOPT_BINDX_ADD	user.h	/^	SCTP_SOCKOPT_BINDX_ADD = 100,\/* BINDX requests for adding addresses. *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_BINDX_ADD	user.h	133;"	d
SCTP_SOCKOPT_BINDX_REM	user.h	/^	SCTP_SOCKOPT_BINDX_REM, \/* BINDX requests for removing addresses. *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_BINDX_REM	user.h	135;"	d
SCTP_SOCKOPT_CONNECTX	user.h	/^	SCTP_SOCKOPT_CONNECTX, \/* CONNECTX requests. *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_CONNECTX	user.h	153;"	d
SCTP_SOCKOPT_CONNECTX3	user.h	/^	SCTP_SOCKOPT_CONNECTX3, \/* CONNECTX requests. (new implementation) *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_CONNECTX3	user.h	155;"	d
SCTP_SOCKOPT_CONNECTX_OLD	user.h	/^	SCTP_SOCKOPT_CONNECTX_OLD, \/* CONNECTX old requests. *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_CONNECTX_OLD	user.h	147;"	d
SCTP_SOCKOPT_PEELOFF	user.h	/^	SCTP_SOCKOPT_PEELOFF, 	\/* peel off association. *\/$/;"	e	enum:sctp_optname
SCTP_SOCKOPT_PEELOFF	user.h	137;"	d
SCTP_SS_CLOSED	constants.h	/^	SCTP_SS_CLOSED         = TCP_CLOSE,$/;"	e	enum:__anon15
SCTP_SS_CLOSING	constants.h	/^	SCTP_SS_CLOSING        = TCP_CLOSING,$/;"	e	enum:__anon15
SCTP_SS_ESTABLISHED	constants.h	/^	SCTP_SS_ESTABLISHED    = TCP_ESTABLISHED,$/;"	e	enum:__anon15
SCTP_SS_ESTABLISHING	constants.h	/^	SCTP_SS_ESTABLISHING   = TCP_SYN_SENT,$/;"	e	enum:__anon15
SCTP_SS_LISTENING	constants.h	/^	SCTP_SS_LISTENING      = TCP_LISTEN,$/;"	e	enum:__anon15
SCTP_STATE_BACKUP	sm_statetable.c	63;"	d	file:
SCTP_STATE_CLOSED	constants.h	/^	SCTP_STATE_CLOSED		= 0,$/;"	e	enum:__anon14
SCTP_STATE_COOKIE_ECHOED	constants.h	/^	SCTP_STATE_COOKIE_ECHOED	= 2,$/;"	e	enum:__anon14
SCTP_STATE_COOKIE_WAIT	constants.h	/^	SCTP_STATE_COOKIE_WAIT		= 1,$/;"	e	enum:__anon14
SCTP_STATE_ESTABLISHED	constants.h	/^	SCTP_STATE_ESTABLISHED		= 3,$/;"	e	enum:__anon14
SCTP_STATE_MAX	constants.h	201;"	d
SCTP_STATE_NUM_STATES	constants.h	202;"	d
SCTP_STATE_SHUTDOWN_ACK_SENT	constants.h	/^	SCTP_STATE_SHUTDOWN_ACK_SENT	= 7,$/;"	e	enum:__anon14
SCTP_STATE_SHUTDOWN_PENDING	constants.h	/^	SCTP_STATE_SHUTDOWN_PENDING	= 4,$/;"	e	enum:__anon14
SCTP_STATE_SHUTDOWN_RECEIVED	constants.h	/^	SCTP_STATE_SHUTDOWN_RECEIVED	= 6,$/;"	e	enum:__anon14
SCTP_STATE_SHUTDOWN_SENT	constants.h	/^	SCTP_STATE_SHUTDOWN_SENT	= 5,$/;"	e	enum:__anon14
SCTP_STATIC	sctp.h	110;"	d
SCTP_STATUS	user.h	/^	SCTP_STATUS,$/;"	e	enum:sctp_optname
SCTP_STATUS	user.h	93;"	d
SCTP_SUBTYPE_CONSTRUCTOR	constants.h	142;"	d
SCTP_TRANSPORT_DOWN	constants.h	/^	SCTP_TRANSPORT_DOWN,$/;"	e	enum:__anon22
SCTP_TRANSPORT_PF	constants.h	/^	SCTP_TRANSPORT_PF,$/;"	e	enum:__anon22
SCTP_TRANSPORT_UP	constants.h	/^	SCTP_TRANSPORT_UP,$/;"	e	enum:__anon22
SCTP_TSN_MAP_INCREMENT	constants.h	258;"	d
SCTP_TSN_MAP_INITIAL	constants.h	257;"	d
SCTP_TSN_MAP_SIZE	constants.h	259;"	d
SCTP_UNCONFIRMED	user.h	/^	SCTP_UNCONFIRMED,$/;"	e	enum:sctp_spinfo_state
SCTP_UNKNOWN	user.h	/^	SCTP_UNKNOWN = 0xffff  \/* Value used for transport state unknown *\/$/;"	e	enum:sctp_spinfo_state
SCTP_UNORDERED	user.h	/^	SCTP_UNORDERED = 1,  \/* Send\/receive message unordered. *\/$/;"	e	enum:sctp_sinfo_flags
SCTP_UPDATE	user.h	/^	SCTP_UPDATE, \/* Update backup Association *\/$/;"	e	enum:sctp_optname
SCTP_UPDATE	user.h	161;"	d
SCTP_XMIT_NAGLE_DELAY	constants.h	/^	SCTP_XMIT_NAGLE_DELAY,$/;"	e	enum:__anon21
SCTP_XMIT_OK	constants.h	/^	SCTP_XMIT_OK,$/;"	e	enum:__anon21
SCTP_XMIT_PMTU_FULL	constants.h	/^	SCTP_XMIT_PMTU_FULL,$/;"	e	enum:__anon21
SCTP_XMIT_RWND_FULL	constants.h	/^	SCTP_XMIT_RWND_FULL,$/;"	e	enum:__anon21
SEND	primitive.c	/^DECLARE_PRIMITIVE(SEND);$/;"	v
SPP_HB	user.h	/^	SPP_HB = SPP_HB_ENABLE | SPP_HB_DISABLE,$/;"	e	enum:sctp_spp_flags
SPP_HB_DEMAND	user.h	/^	SPP_HB_DEMAND = 1<<2,		\/*Send heartbeat immediately*\/$/;"	e	enum:sctp_spp_flags
SPP_HB_DISABLE	user.h	/^	SPP_HB_DISABLE = 1<<1,		\/*Disable heartbeats*\/$/;"	e	enum:sctp_spp_flags
SPP_HB_ENABLE	user.h	/^	SPP_HB_ENABLE = 1<<0,		\/*Enable heartbeats*\/$/;"	e	enum:sctp_spp_flags
SPP_HB_TIME_IS_ZERO	user.h	/^	SPP_HB_TIME_IS_ZERO = 1<<7,	\/* Set HB delay to 0 *\/$/;"	e	enum:sctp_spp_flags
SPP_PMTUD	user.h	/^	SPP_PMTUD = SPP_PMTUD_ENABLE | SPP_PMTUD_DISABLE,$/;"	e	enum:sctp_spp_flags
SPP_PMTUD_DISABLE	user.h	/^	SPP_PMTUD_DISABLE = 1<<4,	\/*Disable PMTU discovery*\/$/;"	e	enum:sctp_spp_flags
SPP_PMTUD_ENABLE	user.h	/^	SPP_PMTUD_ENABLE = 1<<3,	\/*Enable PMTU discovery*\/$/;"	e	enum:sctp_spp_flags
SPP_SACKDELAY	user.h	/^	SPP_SACKDELAY = SPP_SACKDELAY_ENABLE | SPP_SACKDELAY_DISABLE,$/;"	e	enum:sctp_spp_flags
SPP_SACKDELAY_DISABLE	user.h	/^	SPP_SACKDELAY_DISABLE = 1<<6,	\/*Disable SACK*\/$/;"	e	enum:sctp_spp_flags
SPP_SACKDELAY_ENABLE	user.h	/^	SPP_SACKDELAY_ENABLE = 1<<5,	\/*Enable SACK*\/$/;"	e	enum:sctp_spp_flags
SSN_SIGN_BIT	sm.h	/^	SSN_SIGN_BIT = (1<<15)$/;"	e	enum:__anon35
SSN_lt	sm.h	/^static inline int SSN_lt(__u16 s, __u16 t)$/;"	f
SSN_lte	sm.h	/^static inline int SSN_lte(__u16 s, __u16 t)$/;"	f
T3_rtx_timer	structs.h	/^	struct timer_list T3_rtx_timer;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::timer_list
TIMEVAL_ADD	sctp.h	589;"	d
TSN_SIGN_BIT	sm.h	/^	TSN_SIGN_BIT = (1<<31)$/;"	e	enum:__anon34
TSN_lt	sm.h	/^static inline int TSN_lt(__u32 s, __u32 t)$/;"	f
TSN_lte	sm.h	/^static inline int TSN_lte(__u32 s, __u32 t)$/;"	f
TYPE_SCTP_ABORT	sm_statetable.c	236;"	d	file:
TYPE_SCTP_ASCONF	sm_statetable.c	448;"	d	file:
TYPE_SCTP_ASCONF_ACK	sm_statetable.c	469;"	d	file:
TYPE_SCTP_AUTH	sm_statetable.c	526;"	d	file:
TYPE_SCTP_COOKIE_ACK	sm_statetable.c	341;"	d	file:
TYPE_SCTP_COOKIE_ECHO	sm_statetable.c	320;"	d	file:
TYPE_SCTP_DATA	sm_statetable.c	109;"	d	file:
TYPE_SCTP_ECN_CWR	sm_statetable.c	383;"	d	file:
TYPE_SCTP_ECN_ECNE	sm_statetable.c	362;"	d	file:
TYPE_SCTP_ERROR	sm_statetable.c	299;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_AUTOCLOSE	sm_statetable.c	951;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_HEARTBEAT	sm_statetable.c	909;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_NONE	sm_statetable.c	762;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_SACK	sm_statetable.c	930;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T1_COOKIE	sm_statetable.c	783;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T1_INIT	sm_statetable.c	804;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T2_SHUTDOWN	sm_statetable.c	825;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T3_RTX	sm_statetable.c	846;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T4_RTO	sm_statetable.c	867;"	d	file:
TYPE_SCTP_EVENT_TIMEOUT_T5_SHUTDOWN_GUARD	sm_statetable.c	888;"	d	file:
TYPE_SCTP_FUNC	sm_statetable.c	107;"	d	file:
TYPE_SCTP_FWD_TSN	sm_statetable.c	498;"	d	file:
TYPE_SCTP_HEARTBEAT	sm_statetable.c	193;"	d	file:
TYPE_SCTP_HEARTBEAT_ACK	sm_statetable.c	215;"	d	file:
TYPE_SCTP_INIT	sm_statetable.c	130;"	d	file:
TYPE_SCTP_INIT_ACK	sm_statetable.c	151;"	d	file:
TYPE_SCTP_OTHER_ICMP_PROTO_UNREACH	sm_statetable.c	736;"	d	file:
TYPE_SCTP_OTHER_NO_PENDING_TSN	sm_statetable.c	715;"	d	file:
TYPE_SCTP_PRIMITIVE_ABORT	sm_statetable.c	619;"	d	file:
TYPE_SCTP_PRIMITIVE_ASCONF	sm_statetable.c	682;"	d	file:
TYPE_SCTP_PRIMITIVE_ASSOCIATE	sm_statetable.c	577;"	d	file:
TYPE_SCTP_PRIMITIVE_REQUESTHEARTBEAT	sm_statetable.c	661;"	d	file:
TYPE_SCTP_PRIMITIVE_SEND	sm_statetable.c	640;"	d	file:
TYPE_SCTP_PRIMITIVE_SHUTDOWN	sm_statetable.c	598;"	d	file:
TYPE_SCTP_SACK	sm_statetable.c	172;"	d	file:
TYPE_SCTP_SHUTDOWN	sm_statetable.c	257;"	d	file:
TYPE_SCTP_SHUTDOWN_ACK	sm_statetable.c	278;"	d	file:
TYPE_SCTP_SHUTDOWN_COMPLETE	sm_statetable.c	404;"	d	file:
UPDATE_MSG	socket.c	95;"	d	file:
VER	Makefile	/^VER=`uname -r`$/;"	m
WORD_ROUND	sctp.h	579;"	d
__NET_NET_NAMESPACE_H	net_namespace.h	5;"	d
__SCTP_AUTH_HMAC_MAX	constants.h	/^	__SCTP_AUTH_HMAC_MAX$/;"	e	enum:__anon27
__SCTP_MIB_MAX	sctp.h	/^	__SCTP_MIB_MAX$/;"	e	enum:__anon30
__net_exit	net_namespace.h	268;"	d
__net_exit	net_namespace.h	273;"	d
__net_init	net_namespace.h	267;"	d
__net_init	net_namespace.h	272;"	d
__net_initconst	net_namespace.h	270;"	d
__net_initconst	net_namespace.h	275;"	d
__net_initdata	net_namespace.h	269;"	d
__net_initdata	net_namespace.h	274;"	d
__net_sctp_command_h__	command.h	40;"	d
__net_sctp_h__	sctp.h	50;"	d
__net_sctp_user_h__	user.h	53;"	d
__pad	structs.h	/^	__u32 __pad;		\/* force sctp_cookie alignment to 64 bits *\/$/;"	m	struct:sctp_signed_cookie
__read_mostly	probe.c	/^static int bufsize __read_mostly = 64 * 1024;$/;"	v	file:
__read_mostly	probe.c	/^static int full __read_mostly = 1;$/;"	v	file:
__read_mostly	probe.c	/^static int port __read_mostly = 0;$/;"	v	file:
__read_mostly	protocol.c	/^struct kmem_cache *sctp_bucket_cachep __read_mostly;$/;"	v	typeref:struct:sctp_bucket_cachep
__read_mostly	protocol.c	/^struct kmem_cache *sctp_chunk_cachep __read_mostly;$/;"	v	typeref:struct:sctp_chunk_cachep
__read_mostly	protocol.c	/^struct sctp_globals sctp_globals __read_mostly;$/;"	v	typeref:struct:sctp_globals
__sctp_act	socket.c	/^typedef struct __sctp_act$/;"	s	file:
__sctp_auth_cid	auth.c	/^static int __sctp_auth_cid(sctp_cid_t chunk, struct sctp_chunks_param *param)$/;"	f	file:
__sctp_auth_find_hmacid	auth.c	/^static int __sctp_auth_find_hmacid(__be16 *hmacs, int n_elts, __be16 hmac_id)$/;"	f	file:
__sctp_auth_h__	auth.h	38;"	d
__sctp_connect	socket.c	/^static int __sctp_connect(struct sock* sk,$/;"	f	file:
__sctp_constants_h__	constants.h	48;"	d
__sctp_endpoint_lookup_assoc	endpointola.c	/^static struct sctp_association *__sctp_endpoint_lookup_assoc($/;"	f	file:
__sctp_hash_endpoint	input.c	/^static void __sctp_hash_endpoint(struct sctp_endpoint *ep)$/;"	f	file:
__sctp_hash_established	input.c	/^static void __sctp_hash_established(struct sctp_association *asoc)$/;"	f	file:
__sctp_lookup_association	input.c	/^static struct sctp_association *__sctp_lookup_association($/;"	f	file:
__sctp_missing	sm_make_chunk.c	/^struct __sctp_missing {$/;"	s	file:
__sctp_put_port	socket.c	/^static inline void __sctp_put_port(struct sock *sk)$/;"	f	file:
__sctp_rcv_asconf_lookup	input.c	/^static struct sctp_association *__sctp_rcv_asconf_lookup($/;"	f	file:
__sctp_rcv_init_lookup	input.c	/^static struct sctp_association *__sctp_rcv_init_lookup(struct sk_buff *skb,$/;"	f	file:
__sctp_rcv_lookup	input.c	/^static struct sctp_association *__sctp_rcv_lookup(struct sk_buff *skb,$/;"	f	file:
__sctp_rcv_lookup_endpoint	input.c	/^static struct sctp_endpoint *__sctp_rcv_lookup_endpoint(const union sctp_addr *laddr)$/;"	f	file:
__sctp_rcv_lookup_harder	input.c	/^static struct sctp_association *__sctp_rcv_lookup_harder(struct sk_buff *skb,$/;"	f	file:
__sctp_rcv_walk_lookup	input.c	/^static struct sctp_association *__sctp_rcv_walk_lookup(struct sk_buff *skb,$/;"	f	file:
__sctp_setsockopt_connectx	socket.c	/^SCTP_STATIC int __sctp_setsockopt_connectx(struct sock* sk,$/;"	f
__sctp_sf_do_9_1_abort	sm_statefuns.c	/^static sctp_disposition_t __sctp_sf_do_9_1_abort(const struct sctp_endpoint *ep,$/;"	f	file:
__sctp_sm_h__	sm.h	58;"	d
__sctp_sstate	sctp.h	/^static inline int __sctp_sstate(const struct sock *sk, sctp_sock_state_t state)$/;"	f
__sctp_state	sctp.h	/^static inline int __sctp_state(const struct sctp_association *asoc,$/;"	f
__sctp_structs_h__	structs.h	55;"	d
__sctp_style	sctp.h	/^static inline int __sctp_style(const struct sock *sk, sctp_socket_type_t style)$/;"	f
__sctp_tsnmap_h__	tsnmap.h	48;"	d
__sctp_ulpevent_h__	ulpevent.h	50;"	d
__sctp_ulpqueue_h__	ulpqueue.h	48;"	d
__sctp_unhash_endpoint	input.c	/^static void __sctp_unhash_endpoint(struct sctp_endpoint *ep)$/;"	f	file:
__sctp_unhash_established	input.c	/^static void __sctp_unhash_established(struct sctp_association *asoc)$/;"	f	file:
__sctp_write_space	socket.c	/^static void __sctp_write_space(struct sctp_association *asoc)$/;"	f	file:
_sctp_walk_errors	sctp.h	563;"	d
_sctp_walk_fwdtsn	sctp.h	573;"	d
_sctp_walk_params	sctp.h	554;"	d
_sockMsg	socket.c	/^typedef struct _sockMsg$/;"	s	file:
_sockPL	socket.c	/^typedef union _sockPL$/;"	u	file:
_updateEnb	socket.c	/^typedef struct _updateEnb$/;"	s	file:
a	socket.c	/^	tAsoc a;$/;"	m	union:_sockPL	file:
a	structs.h	/^	union sctp_addr a;$/;"	m	struct:sctp_sockaddr_entry	typeref:union:sctp_sockaddr_entry::sctp_addr
a_rwnd	socket.c	/^	__u32 a_rwnd;$/;"	m	struct:__sctp_act	file:
a_rwnd	structs.h	/^	__u32 a_rwnd;$/;"	m	struct:sctp_association
a_rwnd	structs.h	/^	__u32 a_rwnd;$/;"	m	struct:sctp_inithdr_host
abandoned	structs.h	/^	struct list_head abandoned;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::list_head
action	sm.h	/^	int action;$/;"	m	struct:__anon32
active_key_id	structs.h	/^	__u16 active_key_id;$/;"	m	struct:sctp_association
active_key_id	structs.h	/^	__u16 active_key_id;$/;"	m	struct:sctp_endpoint
active_path	structs.h	/^		struct sctp_transport *active_path;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_transport
adaptation_ind	structs.h	/^		__u32   adaptation_ind;	 \/* Adaptation Code point. *\/$/;"	m	struct:sctp_association::__anon42
adaptation_ind	structs.h	/^	__u32 adaptation_ind;$/;"	m	struct:sctp_cookie
adaptation_ind	structs.h	/^	__u32 adaptation_ind;$/;"	m	struct:sctp_sock
addip	structs.h	/^	struct sctp_addip_param *addip;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_addip_param
addip_chunk_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t addip_chunk_event_table[SCTP_NUM_ADDIP_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
addip_chunk_list	structs.h	/^	struct list_head addip_chunk_list;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::list_head
addip_disabled_mask	structs.h	/^		__be16 addip_disabled_mask;$/;"	m	struct:sctp_association::__anon42
addip_enable	structs.h	/^	int addip_enable;$/;"	m	struct:sctp_globals
addip_hdr	structs.h	/^		struct sctp_addiphdr *addip_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_addiphdr
addip_last_asconf	structs.h	/^	struct sctp_chunk *addip_last_asconf;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_chunk
addip_noauth_enable	structs.h	/^	int addip_noauth_enable;$/;"	m	struct:sctp_globals
addip_serial	structs.h	/^		__u32 addip_serial;$/;"	m	struct:sctp_association::__anon42
addip_serial	structs.h	/^	__u32 addip_serial;$/;"	m	struct:sctp_association
addr	objcnt.c	/^SCTP_DBG_OBJCNT(addr);$/;"	v
addr	socket.c	/^	union sctp_addr addr;$/;"	m	struct:__sctp_act	typeref:union:__sctp_act::sctp_addr	file:
addr	structs.h	/^	union sctp_addr_param *addr;$/;"	m	union:sctp_params	typeref:union:sctp_params::sctp_addr_param
addr_copy	structs.h	/^	void		(*addr_copy)	(union sctp_addr *dst,$/;"	m	struct:sctp_af
addr_list_lock	structs.h	/^	spinlock_t addr_list_lock;$/;"	m	struct:sctp_globals
addr_num	user.h	/^	__u32			addr_num; \/*output*\/$/;"	m	struct:sctp_getaddrs
addr_num	user.h	/^	int			addr_num;$/;"	m	struct:sctp_getaddrs_old
addr_scope_max	sysctl.c	/^static int addr_scope_max = 3; \/* check sctp_scope_policy_t in include\/net\/sctp\/constants.h for max entries *\/$/;"	v	file:
addr_v4map	structs.h	/^	void (*addr_v4map) (struct sctp_sock *, union sctp_addr *);$/;"	m	struct:sctp_pf
addr_valid	structs.h	/^	int		(*addr_valid)	(union sctp_addr *,$/;"	m	struct:sctp_af
address_families	structs.h	/^	struct list_head address_families;$/;"	m	struct:sctp_globals	typeref:struct:sctp_globals::list_head
address_list	structs.h	/^	struct list_head address_list;$/;"	m	struct:sctp_bind_addr	typeref:struct:sctp_bind_addr::list_head
addrs	user.h	/^	__u8			addrs[0]; \/*output, variable size*\/$/;"	m	struct:sctp_getaddrs
addrs	user.h	/^	struct sockaddr		__user *addrs;$/;"	m	struct:sctp_getaddrs_old	typeref:struct:sctp_getaddrs_old::__user
adv_peer_ack_point	socket.c	/^	__u32 adv_peer_ack_point;$/;"	m	struct:_updateEnb	file:
adv_peer_ack_point	structs.h	/^	__u32 adv_peer_ack_point;$/;"	m	struct:sctp_association
af	structs.h	/^	struct sctp_af *af;$/;"	m	struct:sctp_pf	typeref:struct:sctp_pf::sctp_af
af_specific	structs.h	/^	struct sctp_af *af_specific;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::sctp_af
af_supported	structs.h	/^	int  (*af_supported) (sa_family_t, struct sctp_sock *);$/;"	m	struct:sctp_pf
aind	structs.h	/^	struct sctp_adaptation_ind_param *aind;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_adaptation_ind_param
asconf_ack_list	structs.h	/^	struct list_head asconf_ack_list;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::list_head
asconf_capable	structs.h	/^			asconf_capable:1,   \/* Does peer support ADDIP? *\/$/;"	m	struct:sctp_association::__anon42
asoc	command.h	/^	struct sctp_association *asoc;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_association
asoc	structs.h	/^	struct sctp_association *asoc;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_association
asoc	structs.h	/^	struct sctp_association *asoc;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::sctp_association
asoc	structs.h	/^	struct sctp_association *asoc;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::sctp_association
asoc	ulpevent.h	/^	struct sctp_association *asoc;$/;"	m	struct:sctp_ulpevent	typeref:struct:sctp_ulpevent::sctp_association
asoc	ulpqueue.h	/^	struct sctp_association *asoc;$/;"	m	struct:sctp_ulpq	typeref:struct:sctp_ulpq::sctp_association
asoc_shared_key	structs.h	/^	struct sctp_auth_bytes *asoc_shared_key;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_auth_bytes
asocs	structs.h	/^	struct list_head asocs;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::list_head
asocs	structs.h	/^	struct list_head asocs;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::list_head
assoc	objcnt.c	/^SCTP_DBG_OBJCNT(assoc);$/;"	v
assoc_hashsize	structs.h	/^	int assoc_hashsize;$/;"	m	struct:sctp_globals
assoc_hashtable	structs.h	/^	struct sctp_hashbucket *assoc_hashtable;$/;"	m	struct:sctp_globals	typeref:struct:sctp_globals::sctp_hashbucket
assoc_id	socket.c	/^	sctp_assoc_t assoc_id;$/;"	m	struct:_sockMsg	file:
assoc_id	structs.h	/^	sctp_assoc_t assoc_id;$/;"	m	struct:sctp_association
assoc_id	user.h	/^	sctp_assoc_t		assoc_id; \/*input*\/$/;"	m	struct:sctp_getaddrs
assoc_id	user.h	/^	sctp_assoc_t            assoc_id;$/;"	m	struct:sctp_getaddrs_old
assoc_id	user.h	/^    sctp_assoc_t            assoc_id;$/;"	m	struct:sctp_assoc_value
assoc_value	user.h	/^    uint32_t                assoc_value;$/;"	m	struct:sctp_assoc_value
associd	user.h	/^	sctp_assoc_t associd;$/;"	m	struct:__anon48
assocparams	structs.h	/^	struct sctp_assocparams assocparams;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_assocparams
auth	structs.h	/^		auth:1,			\/* IN: was auth'ed | OUT: needs auth *\/$/;"	m	struct:sctp_chunk
auth	structs.h	/^	struct sctp_chunk *auth;$/;"	m	struct:sctp_packet	typeref:struct:sctp_packet::sctp_chunk
auth_altkeynumber	user.h	/^	__u16 auth_altkeynumber;$/;"	m	struct:sctp_authkey_event
auth_assoc_id	user.h	/^	sctp_assoc_t auth_assoc_id;$/;"	m	struct:sctp_authkey_event
auth_capable	structs.h	/^			auth_capable:1;	    \/* Is peer doing SCTP-AUTH? *\/$/;"	m	struct:sctp_association::__anon42
auth_chunk	structs.h	/^	struct sk_buff *auth_chunk;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sk_buff
auth_chunk_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t auth_chunk_event_table[SCTP_NUM_AUTH_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
auth_chunk_list	structs.h	/^	struct sctp_chunks_param *auth_chunk_list;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::sctp_chunks_param
auth_chunks	structs.h	/^	__u8 auth_chunks[sizeof(sctp_paramhdr_t) + SCTP_AUTH_MAX_CHUNKS];$/;"	m	struct:sctp_cookie
auth_enable	structs.h	/^	int auth_enable;$/;"	m	struct:sctp_globals
auth_flags	user.h	/^	__u16 auth_flags;$/;"	m	struct:sctp_authkey_event
auth_hdr	structs.h	/^		struct sctp_authhdr *auth_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_authhdr
auth_hmacs	structs.h	/^	__u8 auth_hmacs[SCTP_AUTH_NUM_HMACS * sizeof(__u16) + 2];$/;"	m	struct:sctp_cookie
auth_hmacs	structs.h	/^	struct crypto_hash **auth_hmacs;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::crypto_hash
auth_hmacs_list	structs.h	/^	 struct sctp_hmac_algo_param *auth_hmacs_list;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::sctp_hmac_algo_param
auth_indication	user.h	/^	__u32 auth_indication;$/;"	m	struct:sctp_authkey_event
auth_keynumber	user.h	/^	__u16 auth_keynumber;$/;"	m	struct:sctp_authkey_event
auth_length	user.h	/^	__u32 auth_length;$/;"	m	struct:sctp_authkey_event
auth_random	structs.h	/^	__u8 auth_random[sizeof(sctp_paramhdr_t) + SCTP_AUTH_RANDOM_LENGTH];$/;"	m	struct:sctp_cookie
auth_type	user.h	/^	__u16 auth_type;$/;"	m	struct:sctp_authkey_event
autoclose	structs.h	/^	__u32 autoclose;$/;"	m	struct:sctp_association
autoclose	structs.h	/^	__u32 autoclose;$/;"	m	struct:sctp_sock
available	structs.h	/^	int		(*available)	(union sctp_addr *,$/;"	m	struct:sctp_af
base	structs.h	/^	struct sctp_ep_common base;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_ep_common
base	structs.h	/^	struct sctp_ep_common base;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::sctp_ep_common
base_tsn	socket.c	/^	__u32 base_tsn;$/;"	m	struct:_updateEnb	file:
base_tsn	tsnmap.h	/^	__u32 base_tsn;$/;"	m	struct:sctp_tsnmap
be32	command.h	/^	__be32 be32;$/;"	m	union:__anon2
bind_addr	objcnt.c	/^SCTP_DBG_OBJCNT(bind_addr);$/;"	v
bind_addr	structs.h	/^	struct sctp_bind_addr bind_addr;$/;"	m	struct:sctp_ep_common	typeref:struct:sctp_ep_common::sctp_bind_addr
bind_bucket	objcnt.c	/^SCTP_DBG_OBJCNT(bind_bucket);$/;"	v
bind_hash	structs.h	/^	struct sctp_bind_bucket *bind_hash;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_bind_bucket
bind_verify	structs.h	/^	int  (*bind_verify) (struct sctp_sock *, union sctp_addr *);$/;"	m	struct:sctp_pf
bkup_data	structs.h	/^	     bkup_data:1,$/;"	m	struct:sctp_association
bkup_sack	structs.h	/^	     bkup_sack:1,$/;"	m	struct:sctp_association
bkup_set	structs.h	/^	     bkup_set;$/;"	m	struct:sctp_association
bp	command.h	/^	struct sctp_bind_addr *bp;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_bind_addr
bug	sm_statetable.c	/^static const sctp_sm_table_entry_t bug = {$/;"	v	file:
burst_limited	structs.h	/^	__u32 burst_limited;	\/* Holds old cwnd when max.burst is applied *\/$/;"	m	struct:sctp_transport
c	socket.c	/^	struct sctp_cookie c;$/;"	m	struct:__sctp_act	typeref:struct:__sctp_act::sctp_cookie	file:
c	structs.h	/^	struct sctp_cookie c;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_cookie
c	structs.h	/^	struct sctp_cookie c;$/;"	m	struct:sctp_signed_cookie	typeref:struct:sctp_signed_cookie::sctp_cookie
cacc	structs.h	/^	} cacc;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::__anon40
cacc_saw_newack	structs.h	/^		char cacc_saw_newack;$/;"	m	struct:sctp_transport::__anon40
can_abandon	structs.h	/^	   can_abandon:1,   \/* can chunks from this message can be abandoned. *\/$/;"	m	struct:sctp_datamsg
can_delay	structs.h	/^	   can_delay;	    \/* should this message be Nagle delayed *\/$/;"	m	struct:sctp_datamsg
chain	structs.h	/^	struct hlist_head	chain;$/;"	m	struct:sctp_bind_hashbucket	typeref:struct:sctp_bind_hashbucket::hlist_head
chain	structs.h	/^	struct hlist_head	chain;$/;"	m	struct:sctp_hashbucket	typeref:struct:sctp_hashbucket::hlist_head
changeover_active	structs.h	/^		char changeover_active;$/;"	m	struct:sctp_transport::__anon40
checksum_disable	structs.h	/^        int checksum_disable;$/;"	m	struct:sctp_globals
chunk	command.h	/^	struct sctp_chunk *chunk;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_chunk
chunk	constants.h	/^	sctp_cid_t chunk;$/;"	m	union:__anon12
chunk	input.c	/^	struct sctp_chunk *chunk;$/;"	m	struct:sctp_input_cb	typeref:struct:sctp_input_cb::sctp_chunk	file:
chunk	objcnt.c	/^SCTP_DBG_OBJCNT(chunk);$/;"	v
chunk_end	structs.h	/^	__u8 *chunk_end;$/;"	m	struct:sctp_chunk
chunk_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t chunk_event_table[SCTP_NUM_BASE_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
chunk_event_table_unknown	sm_statetable.c	/^chunk_event_table_unknown[SCTP_STATE_NUM_STATES] = {$/;"	v	file:
chunk_hdr	structs.h	/^	struct sctp_chunkhdr *chunk_hdr;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_chunkhdr
chunk_list	structs.h	/^	struct list_head chunk_list;$/;"	m	struct:sctp_packet	typeref:struct:sctp_packet::list_head
chunks	structs.h	/^	struct list_head chunks;$/;"	m	struct:sctp_datamsg	typeref:struct:sctp_datamsg::list_head
chunks	structs.h	/^	struct sctp_chunks_param *chunks;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_chunks_param
cleanup_list	net_namespace.h	/^	struct list_head	cleanup_list;	\/* namespaces on death row *\/$/;"	m	struct:net	typeref:struct:net::list_head
cleanup_sctp_mibs	protocol.c	/^static inline void cleanup_sctp_mibs(void)$/;"	f	file:
cmds	command.h	/^	sctp_cmd_t cmds[SCTP_MAX_NUM_COMMANDS];$/;"	m	struct:__anon4
cmp_addr	structs.h	/^	int		(*cmp_addr)	(const union sctp_addr *addr1,$/;"	m	struct:sctp_af
cmp_addr	structs.h	/^	int  (*cmp_addr) (const union sctp_addr *,$/;"	m	struct:sctp_pf
compat_getsockopt	structs.h	/^	int		(*compat_getsockopt)	(struct sock *sk,$/;"	m	struct:sctp_af
compat_setsockopt	structs.h	/^	int		(*compat_setsockopt)	(struct sock *sk,$/;"	m	struct:sctp_af
control_chunk_list	structs.h	/^	struct list_head control_chunk_list;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::list_head
cookie	structs.h	/^		void *cookie;$/;"	m	struct:sctp_association::__anon42
cookie	structs.h	/^	struct sctp_cookie_param *cookie;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_cookie_param
cookie_hdr	structs.h	/^		struct sctp_signed_cookie *cookie_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_signed_cookie
cookie_len	structs.h	/^		int cookie_len;$/;"	m	struct:sctp_association::__anon42
cookie_life	structs.h	/^	struct timeval cookie_life;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::timeval
cookie_preserve_enable	structs.h	/^	int cookie_preserve_enable;$/;"	m	struct:sctp_globals
copy_addrlist	structs.h	/^	void		(*copy_addrlist) (struct list_head *,$/;"	m	struct:sctp_af
copy_net_ns	net_namespace.h	/^static inline struct net *copy_net_ns(unsigned long flags,$/;"	f
core	net_namespace.h	/^	struct netns_core	core;$/;"	m	struct:net	typeref:struct:net::netns_core
cork	structs.h	/^	char cork;$/;"	m	struct:sctp_outq
count	net_namespace.h	/^	atomic_t		count;		\/* To decided when the network$/;"	m	struct:net
counter	structs.h	/^	atomic_t *counter;$/;"	m	struct:__anon44
create_accept_sk	structs.h	/^	struct sock *(*create_accept_sk) (struct sock *sk,$/;"	m	struct:sctp_pf	typeref:struct:sctp_pf::create_accept_sk
ct	net_namespace.h	/^	struct netns_ct		ct;$/;"	m	struct:net	typeref:struct:net::netns_ct
ctsn_ack_point	socket.c	/^	__u32 ctsn_ack_point;$/;"	m	struct:_updateEnb	file:
ctsn_ack_point	structs.h	/^	__u32 ctsn_ack_point;$/;"	m	struct:sctp_association
cumtsn	ulpevent.h	/^	__u32 cumtsn;$/;"	m	struct:sctp_ulpevent
cumulative_tsn_ack_point	socket.c	/^	__u32 cumulative_tsn_ack_point;$/;"	m	struct:_updateEnb	file:
cumulative_tsn_ack_point	tsnmap.h	/^	__u32 cumulative_tsn_ack_point;$/;"	m	struct:sctp_tsnmap
current_key	socket.c	/^	int current_key;$/;"	m	struct:__sctp_act	file:
current_key	structs.h	/^	int current_key;$/;"	m	struct:sctp_endpoint
cwnd	structs.h	/^	__u32 cwnd;		  \/* This is the actual cwnd.  *\/$/;"	m	struct:sctp_transport
cycling_changeover	structs.h	/^		char cycling_changeover;$/;"	m	struct:sctp_transport::__anon40
daddr	structs.h	/^	union sctp_addr daddr;$/;"	m	struct:sctp_sender_hb_info	typeref:union:sctp_sender_hb_info::sctp_addr
data	auth.h	/^	__u8  data[];$/;"	m	struct:sctp_auth_bytes
data_accepted	structs.h	/^		data_accepted:1,	\/* At least 1 chunk accepted *\/$/;"	m	struct:sctp_chunk
data_hdr	structs.h	/^		struct sctp_datahdr *data_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_datahdr
datamsg	objcnt.c	/^SCTP_DBG_OBJCNT(datamsg);$/;"	v
dccp	net_namespace.h	/^	struct netns_dccp	dccp;$/;"	m	struct:net	typeref:struct:net::netns_dccp
dead	structs.h	/^	__u32	 dead:1,$/;"	m	struct:sctp_transport
dead	structs.h	/^	char	    dead;$/;"	m	struct:sctp_ep_common
default_context	structs.h	/^	__u32 default_context;$/;"	m	struct:sctp_association
default_context	structs.h	/^	__u32 default_context;$/;"	m	struct:sctp_sock
default_flags	structs.h	/^	__u16 default_flags;$/;"	m	struct:sctp_association
default_flags	structs.h	/^	__u16 default_flags;$/;"	m	struct:sctp_sock
default_hmac_id	structs.h	/^	__u16 default_hmac_id;$/;"	m	struct:sctp_association
default_ppid	structs.h	/^	__u32 default_ppid;$/;"	m	struct:sctp_association
default_ppid	structs.h	/^	__u32 default_ppid;$/;"	m	struct:sctp_sock
default_rcv_context	structs.h	/^	__u32 default_rcv_context;$/;"	m	struct:sctp_association
default_rcv_context	structs.h	/^	__u32 default_rcv_context;$/;"	m	struct:sctp_sock
default_stream	structs.h	/^	__u16 default_stream;$/;"	m	struct:sctp_association
default_stream	structs.h	/^	__u16 default_stream;$/;"	m	struct:sctp_sock
default_timetolive	structs.h	/^	__u32 default_timetolive;$/;"	m	struct:sctp_association
default_timetolive	structs.h	/^	__u32 default_timetolive;$/;"	m	struct:sctp_sock
dest	structs.h	/^	union sctp_addr dest;$/;"	m	struct:sctp_chunk	typeref:union:sctp_chunk::sctp_addr
destination_port	structs.h	/^	__u16 destination_port;$/;"	m	struct:sctp_packet
dev_base_head	net_namespace.h	/^	struct list_head 	dev_base_head;$/;"	m	struct:net	typeref:struct:net::list_head
dev_base_seq	net_namespace.h	/^	unsigned int		dev_base_seq;	\/* protected by rtnl_mutex *\/$/;"	m	struct:net
dev_index_head	net_namespace.h	/^	struct hlist_head	*dev_index_head;$/;"	m	struct:net	typeref:struct:net::hlist_head
dev_name_head	net_namespace.h	/^	struct hlist_head 	*dev_name_head;$/;"	m	struct:net	typeref:struct:net::hlist_head
diag_nlsk	net_namespace.h	/^	struct sock		*diag_nlsk;$/;"	m	struct:net	typeref:struct:net::sock
digest	structs.h	/^ 	__u8 *digest;$/;"	m	struct:sctp_endpoint
disable_fragments	structs.h	/^	__u8 disable_fragments;$/;"	m	struct:sctp_sock
dns	structs.h	/^	struct sctp_hostname_param *dns;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_hostname_param
dst	structs.h	/^	struct dst_entry *dst;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::dst_entry
dst_saddr	structs.h	/^	void		(*dst_saddr)	(union sctp_addr *saddr,$/;"	m	struct:sctp_af
dup_tsns	tsnmap.h	/^	__be32 dup_tsns[SCTP_MAX_DUP_TSNS];$/;"	m	struct:sctp_tsnmap
ecap_param	sm_make_chunk.c	/^static const struct sctp_paramhdr ecap_param = {$/;"	v	typeref:struct:sctp_paramhdr	file:
ecn_capable	structs.h	/^		__u8	ecn_capable:1,	    \/* Can peer do ECN? *\/$/;"	m	struct:sctp_association::__anon42
ecn_capable	structs.h	/^	void		(*ecn_capable)(struct sock *sk);$/;"	m	struct:sctp_af
ecn_ce_done	structs.h	/^		ecn_ce_done:1,		\/* Have we processed the ECN CE bit? *\/$/;"	m	struct:sctp_chunk
ecn_cwr_hdr	structs.h	/^		struct sctp_cwrhdr *ecn_cwr_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_cwrhdr
ecne_hdr	structs.h	/^		struct sctp_ecnehdr *ecne_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_ecnehdr
empty	structs.h	/^	char empty;$/;"	m	struct:sctp_outq
end_of_packet	structs.h	/^		end_of_packet:1,	\/* Last chunk in the packet? *\/$/;"	m	struct:sctp_chunk
endpoint_shared_keys	structs.h	/^	struct list_head endpoint_shared_keys;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::list_head
endpoint_shared_keys	structs.h	/^	struct list_head endpoint_shared_keys;$/;"	m	struct:sctp_endpoint	typeref:struct:sctp_endpoint::list_head
ep	objcnt.c	/^SCTP_DBG_OBJCNT(ep);$/;"	v
ep	structs.h	/^	struct sctp_endpoint *ep;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_endpoint
ep	structs.h	/^	struct sctp_endpoint *ep;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_endpoint
ep_hashsize	structs.h	/^	int ep_hashsize;$/;"	m	struct:sctp_globals
ep_hashtable	structs.h	/^	struct sctp_hashbucket *ep_hashtable;$/;"	m	struct:sctp_globals	typeref:struct:sctp_globals::sctp_hashbucket
err	command.h	/^	__be16 err;$/;"	m	union:__anon2
err_hdr	structs.h	/^		struct sctp_errhdr *err_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_errhdr
error	command.h	/^	int error;$/;"	m	union:__anon2
error	structs.h	/^	unsigned error;$/;"	m	struct:sctp_outq
error_count	structs.h	/^	unsigned short error_count;$/;"	m	struct:sctp_transport
event_msgname	structs.h	/^	void (*event_msgname)(struct sctp_ulpevent *, char *, int *);$/;"	m	struct:sctp_pf
exit	net_namespace.h	/^	void (*exit)(struct net *net);$/;"	m	struct:pernet_operations
exit_batch	net_namespace.h	/^	void (*exit_batch)(struct list_head *net_exit_list);$/;"	m	struct:pernet_operations
exit_list	net_namespace.h	/^	struct list_head	exit_list;	\/* Use only net_mutex *\/$/;"	m	struct:net	typeref:struct:net::list_head
expiration	structs.h	/^	struct timeval expiration;$/;"	m	struct:sctp_cookie	typeref:struct:sctp_cookie::timeval
expires_at	structs.h	/^	unsigned long expires_at;$/;"	m	struct:sctp_datamsg
ext	structs.h	/^	struct sctp_supported_ext_param *ext;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_supported_ext_param
fast_recovery	structs.h	/^	__u8 fast_recovery;$/;"	m	struct:sctp_association
fast_recovery_exit	structs.h	/^	__u32 fast_recovery_exit;$/;"	m	struct:sctp_association
fast_retransmit	structs.h	/^		fast_retransmit:2;	\/* Is this chunk fast retransmitted? *\/$/;"	m	struct:sctp_chunk
fast_rtx	structs.h	/^	char fast_rtx;$/;"	m	struct:sctp_outq
fastreuse	structs.h	/^	unsigned short	fastreuse;$/;"	m	struct:sctp_bind_bucket
fifo	probe.c	/^	struct kfifo	  fifo;$/;"	m	struct:__anon29	typeref:struct:__anon29::kfifo	file:
flags	ulpevent.h	/^	__u16 flags;$/;"	m	struct:sctp_ulpevent
flight_size	structs.h	/^	__u32 flight_size;$/;"	m	struct:sctp_transport
fn	sm.h	/^	sctp_state_fn_t *fn;$/;"	m	struct:__anon33
for_each_net	net_namespace.h	260;"	d
for_each_net_rcu	net_namespace.h	263;"	d
frag_interleave	structs.h	/^	__u8 frag_interleave;$/;"	m	struct:sctp_sock
frag_list	structs.h	/^	struct list_head frag_list;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::list_head
frag_point	structs.h	/^	__u32 frag_point;$/;"	m	struct:sctp_association
from_addr_param	structs.h	/^	void		(*from_addr_param) (union sctp_addr *,$/;"	m	struct:sctp_af
from_sk	structs.h	/^	void		(*from_sk)	(union sctp_addr *,$/;"	m	struct:sctp_af
from_skb	structs.h	/^	void		(*from_skb)	(union sctp_addr *,$/;"	m	struct:sctp_af
fwdtsn_hdr	structs.h	/^		struct sctp_fwdtsn_hdr *fwdtsn_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_fwdtsn_hdr
gaids_assoc_id	user.h	/^	sctp_assoc_t	gaids_assoc_id[];$/;"	m	struct:sctp_assoc_ids
gaids_number_of_ids	user.h	/^	__u32		gaids_number_of_ids;$/;"	m	struct:sctp_assoc_ids
gauth_assoc_id	user.h	/^	sctp_assoc_t	gauth_assoc_id;$/;"	m	struct:sctp_authchunks
gauth_chunks	user.h	/^	uint8_t		gauth_chunks[];$/;"	m	struct:sctp_authchunks
gauth_number_of_chunks	user.h	/^	__u32		gauth_number_of_chunks;$/;"	m	struct:sctp_authchunks
gen	net_namespace.h	/^	struct net_generic __rcu	*gen;$/;"	m	struct:net	typeref:struct:net::__rcu
genl_sock	net_namespace.h	/^	struct sock		*genl_sock;$/;"	m	struct:net	typeref:struct:net::sock
get_dst	structs.h	/^	struct dst_entry *(*get_dst)	(struct sctp_association *asoc,$/;"	m	struct:sctp_af	typeref:struct:sctp_af::get_dst
get_net	net_namespace.h	/^static inline struct net *get_net(struct net *net)$/;"	f
get_saddr	structs.h	/^	void		(*get_saddr)	(struct sctp_sock *sk,$/;"	m	struct:sctp_af
getsockopt	structs.h	/^	int		(*getsockopt)	(struct sock *sk,$/;"	m	struct:sctp_af
h4	input.c	/^		struct inet_skb_parm	h4;$/;"	m	union:sctp_input_cb::__anon28	typeref:struct:sctp_input_cb::__anon28::inet_skb_parm	file:
h6	input.c	/^		struct inet6_skb_parm	h6;$/;"	m	union:sctp_input_cb::__anon28	typeref:struct:sctp_input_cb::__anon28::inet6_skb_parm	file:
has_asconf	structs.h	/^		has_asconf:1,		\/* IN: have seen an asconf before *\/$/;"	m	struct:sctp_chunk
has_auth	structs.h	/^	    has_auth:1,		\/* This packet contains an AUTH chunk *\/$/;"	m	struct:sctp_packet
has_cookie_echo	structs.h	/^	u8  has_cookie_echo:1,	\/* This packet contains a COOKIE-ECHO chunk. *\/$/;"	m	struct:sctp_packet
has_data	structs.h	/^	    has_data:1,		\/* This packet contains at least 1 DATA chunk *\/$/;"	m	struct:sctp_packet
has_sack	structs.h	/^	    has_sack:1,		\/* This packet contains a SACK chunk. *\/$/;"	m	struct:sctp_packet
has_ssn	structs.h	/^		has_ssn:1,		\/* Does this chunk have a SSN yet? *\/$/;"	m	struct:sctp_chunk
has_tsn	structs.h	/^		has_tsn:1,		\/* Does this chunk have a TSN yet? *\/$/;"	m	struct:sctp_chunk
hashent	structs.h	/^	int hashent;$/;"	m	struct:sctp_ep_common
hb_hdr	structs.h	/^		struct sctp_heartbeathdr *hb_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_heartbeathdr
hb_interval	structs.h	/^	unsigned int hb_interval;$/;"	m	struct:sctp_globals
hb_nonce	structs.h	/^	__u64 hb_nonce;$/;"	m	struct:sctp_sender_hb_info
hb_nonce	structs.h	/^	__u64 hb_nonce;$/;"	m	struct:sctp_transport
hb_sent	structs.h	/^		hb_sent:1,$/;"	m	struct:sctp_transport
hb_timer	structs.h	/^	struct timer_list hb_timer;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::timer_list
hbinterval	structs.h	/^	__u32 hbinterval;$/;"	m	struct:sctp_sock
hbinterval	structs.h	/^	unsigned long hbinterval;$/;"	m	struct:sctp_association
hbinterval	structs.h	/^	unsigned long hbinterval;$/;"	m	struct:sctp_transport
hbs_hdr	structs.h	/^		struct sctp_sender_hb_info *hbs_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_sender_hb_info
header	input.c	/^	} header;$/;"	m	struct:sctp_input_cb	typeref:union:sctp_input_cb::__anon28	file:
highest_sacked	socket.c	/^	__u32 highest_sacked;$/;"	m	struct:_updateEnb	file:
highest_sacked	structs.h	/^	__u32 highest_sacked;$/;"	m	struct:sctp_association
hmac	structs.h	/^	struct crypto_hash *hmac;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::crypto_hash
hmac_algo	structs.h	/^	struct sctp_hmac_algo_param *hmac_algo;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_hmac_algo_param
hmac_id	auth.h	/^	__u16 hmac_id;		\/* one of the above ids *\/$/;"	m	struct:sctp_hmac
hmac_len	auth.h	/^	__u16 hmac_len;		\/* length of the signature *\/$/;"	m	struct:sctp_hmac
hmac_name	auth.h	/^	char *hmac_name;	\/* name for loading *\/$/;"	m	struct:sctp_hmac
hold_net	net_namespace.h	/^static inline struct net *hold_net(struct net *net)$/;"	f
hostname_address	structs.h	/^			hostname_address:1, \/* Peer understands DNS addresses? *\/$/;"	m	struct:sctp_association::__anon42
i	structs.h	/^		struct sctp_inithdr_host i;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_inithdr_host
i32	command.h	/^	__s32 i32;$/;"	m	union:__anon2
id	net_namespace.h	/^	int *id;$/;"	m	struct:pernet_operations
idr_low	associola.c	/^static u32 idr_low = 1;$/;"	v	file:
ifindex	net_namespace.h	/^	int			ifindex;$/;"	m	struct:net
iif	ulpevent.h	/^	int iif;$/;"	m	struct:sctp_ulpevent
immediate	structs.h	/^	struct work_struct immediate;$/;"	m	struct:sctp_inq	typeref:struct:sctp_inq::work_struct
in	structs.h	/^	struct sctp_stream in;$/;"	m	struct:sctp_ssnmap	typeref:struct:sctp_ssnmap::sctp_stream
in_chunk_list	structs.h	/^	struct list_head in_chunk_list;$/;"	m	struct:sctp_inq	typeref:struct:sctp_inq::list_head
in_progress	structs.h	/^	struct sctp_chunk *in_progress;$/;"	m	struct:sctp_inq	typeref:struct:sctp_inq::sctp_chunk
inaddr_any	structs.h	/^	void		(*inaddr_any)	(union sctp_addr *, __be16);$/;"	m	struct:sctp_af
inet	structs.h	/^	struct inet_sock inet;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::inet_sock
inet6	structs.h	/^       struct ipv6_pinfo inet6;$/;"	m	struct:sctp6_sock	typeref:struct:sctp6_sock::ipv6_pinfo
inet6_seqpacket_ops	ipv6.c	/^static const struct proto_ops inet6_seqpacket_ops = {$/;"	v	typeref:struct:proto_ops	file:
inet_seqpacket_ops	protocol.c	/^static const struct proto_ops inet_seqpacket_ops = {$/;"	v	typeref:struct:proto_ops	file:
info	structs.h	/^	struct sctp_sndrcvinfo *info;$/;"	m	struct:sctp_cmsgs	typeref:struct:sctp_cmsgs::sctp_sndrcvinfo
init	command.h	/^	sctp_init_chunk_t *init;$/;"	m	union:__anon2
init	net_namespace.h	/^	int (*init)(struct net *net);$/;"	m	struct:pernet_operations
init	structs.h	/^	struct sctp_initmsg *init;$/;"	m	struct:sctp_cmsgs	typeref:struct:sctp_cmsgs::sctp_initmsg
init_cycle	structs.h	/^	int init_cycle;$/;"	m	struct:sctp_association
init_err_counter	structs.h	/^	int init_err_counter;$/;"	m	struct:sctp_association
init_hdr	structs.h	/^		struct sctp_inithdr *init_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_inithdr
init_last_sent_to	structs.h	/^	struct sctp_transport *init_last_sent_to;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_transport
init_retries	structs.h	/^	__u16 init_retries;$/;"	m	struct:sctp_association
init_sctp_mibs	protocol.c	/^static inline int init_sctp_mibs(void)$/;"	f	file:
init_sent_count	structs.h	/^	int init_sent_count;$/;"	m	struct:sctp_transport
init_tag	structs.h	/^	__u32 init_tag;$/;"	m	struct:sctp_inithdr_host
initial_tsn	socket.c	/^	__u32 initial_tsn;$/;"	m	struct:__sctp_act	file:
initial_tsn	structs.h	/^	__u32 initial_tsn;$/;"	m	struct:sctp_cookie
initial_tsn	structs.h	/^	__u32 initial_tsn;$/;"	m	struct:sctp_inithdr_host
initmsg	structs.h	/^	struct sctp_initmsg initmsg;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_initmsg
inqueue	structs.h	/^	struct sctp_inq	  inqueue;$/;"	m	struct:sctp_ep_common	typeref:struct:sctp_ep_common::sctp_inq
int_max	sysctl.c	/^static int int_max = INT_MAX;$/;"	v	file:
ipaddr	structs.h	/^	union sctp_addr ipaddr;$/;"	m	struct:sctp_transport	typeref:union:sctp_transport::sctp_addr
ipfragok	structs.h	/^	    ipfragok:1,		\/* So let ip fragment this packet *\/$/;"	m	struct:sctp_packet
ipv4	net_namespace.h	/^	struct netns_ipv4	ipv4;$/;"	m	struct:net	typeref:struct:net::netns_ipv4
ipv4_address	structs.h	/^			ipv4_address:1,	    \/* Peer understands IPv4 addresses? *\/$/;"	m	struct:sctp_association::__anon42
ipv4_scope_policy	structs.h	/^	int ipv4_scope_policy;$/;"	m	struct:sctp_globals
ipv6	net_namespace.h	/^	struct netns_ipv6	ipv6;$/;"	m	struct:net	typeref:struct:net::netns_ipv6
ipv6_address	structs.h	/^			ipv6_address:1,	    \/* Peer understands IPv6 addresses? *\/$/;"	m	struct:sctp_association::__anon42
ipver2af	sctp.h	/^static inline int ipver2af(__u8 ipver)$/;"	f
ipvs	net_namespace.h	/^	struct netns_ipvs	*ipvs;$/;"	m	struct:net	typeref:struct:net::netns_ipvs
is_any	structs.h	/^	int		(*is_any)	(const union sctp_addr *);$/;"	m	struct:sctp_af
is_ce	structs.h	/^	int		(*is_ce)	(const struct sk_buff *sk);$/;"	m	struct:sctp_af
jsctp_sf_eat_sack	probe.c	/^sctp_disposition_t jsctp_sf_eat_sack(struct net *net,$/;"	f
key	auth.h	/^	struct sctp_auth_bytes *key;$/;"	m	struct:sctp_shared_key	typeref:struct:sctp_shared_key::sctp_auth_bytes
key_changed_at	structs.h	/^	int key_changed_at;$/;"	m	struct:sctp_endpoint
key_for_each	auth.h	75;"	d
key_for_each_safe	auth.h	78;"	d
key_id	auth.h	/^	__u16 key_id;$/;"	m	struct:sctp_shared_key
key_list	auth.h	/^	struct list_head key_list;$/;"	m	struct:sctp_shared_key	typeref:struct:sctp_shared_key::list_head
keys	objcnt.c	/^SCTP_DBG_OBJCNT(keys);$/;"	v
label	structs.h	/^	char *label;$/;"	m	struct:__anon44
last_cwr_tsn	structs.h	/^	__u32 last_cwr_tsn;$/;"	m	struct:sctp_association
last_data_from	structs.h	/^		struct sctp_transport *last_data_from;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_transport
last_ecne_tsn	structs.h	/^	__u32 last_ecne_tsn;$/;"	m	struct:sctp_association
last_key	structs.h	/^	int last_key;$/;"	m	struct:sctp_endpoint
last_sent_to	structs.h	/^		struct sctp_transport *last_sent_to;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_transport
last_time_ecne_reduced	structs.h	/^	unsigned long last_time_ecne_reduced;$/;"	m	struct:sctp_transport
last_time_heard	structs.h	/^	unsigned long  last_time_heard;$/;"	m	struct:sctp_transport
len	auth.h	/^	__u32 len;$/;"	m	struct:sctp_auth_bytes
len	socket.c	/^	__u32 len;$/;"	m	struct:_updateEnb	file:
len	structs.h	/^	unsigned int len;$/;"	m	struct:sctp_stream
len	tsnmap.h	/^	__u16 len;$/;"	m	struct:sctp_tsnmap
life	structs.h	/^	struct sctp_cookie_preserve_param *life;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_cookie_preserve_param
list	net_namespace.h	/^	struct list_head	list;		\/* list of network namespaces *\/$/;"	m	struct:net	typeref:struct:net::list_head
list	net_namespace.h	/^	struct list_head list;$/;"	m	struct:pernet_operations	typeref:struct:pernet_operations::list_head
list	structs.h	/^	struct list_head list;$/;"	m	struct:sctp_af	typeref:struct:sctp_af::list_head
list	structs.h	/^	struct list_head list;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::list_head
list	structs.h	/^	struct list_head list;$/;"	m	struct:sctp_sockaddr_entry	typeref:struct:sctp_sockaddr_entry::list_head
list_has_sctp_addr	sm_statefuns.c	/^static bool list_has_sctp_addr(const struct list_head *list,$/;"	f	file:
lobby	ulpqueue.h	/^	struct sk_buff_head lobby;$/;"	m	struct:sctp_ulpq	typeref:struct:sctp_ulpq::sk_buff_head
local_addr_list	structs.h	/^	struct list_head local_addr_list;$/;"	m	struct:sctp_globals	typeref:struct:sctp_globals::list_head
lock	probe.c	/^	spinlock_t	  lock;$/;"	m	struct:__anon29	file:
lock	structs.h	/^	rwlock_t	lock;$/;"	m	struct:sctp_hashbucket
lock	structs.h	/^	spinlock_t	lock;$/;"	m	struct:sctp_bind_hashbucket
loopback_dev	net_namespace.h	/^	struct net_device       *loopback_dev;          \/* The loopback *\/$/;"	m	struct:net	typeref:struct:net::net_device
malloced	structs.h	/^		malloced:1;$/;"	m	struct:sctp_transport
malloced	structs.h	/^	    malloced:1;		\/* Is it malloced? *\/$/;"	m	struct:sctp_packet
malloced	structs.h	/^	char	    malloced;$/;"	m	struct:sctp_ep_common
malloced	structs.h	/^	char malloced;$/;"	m	struct:sctp_outq
malloced	structs.h	/^	int malloced;	     \/* Are we kfree()able?  *\/$/;"	m	struct:sctp_bind_addr
malloced	structs.h	/^	int malloced;	     \/* Is this structure kfree()able?	*\/$/;"	m	struct:sctp_inq
malloced	structs.h	/^	int malloced;$/;"	m	struct:sctp_ssnmap
malloced	ulpqueue.h	/^	char malloced;$/;"	m	struct:sctp_ulpq
max_burst	structs.h	/^	int max_burst;$/;"	m	struct:sctp_association
max_burst	structs.h	/^	int max_burst;$/;"	m	struct:sctp_globals
max_burst	structs.h	/^	int max_burst;$/;"	m	struct:sctp_sock
max_init_attempts	structs.h	/^	__u16 max_init_attempts;$/;"	m	struct:sctp_association
max_init_timeo	structs.h	/^	unsigned long max_init_timeo;$/;"	m	struct:sctp_association
max_instreams	structs.h	/^	__u16 max_instreams;$/;"	m	struct:sctp_globals
max_outstreams	structs.h	/^	__u16 max_outstreams;$/;"	m	struct:sctp_globals
max_retrans	structs.h	/^	int max_retrans;$/;"	m	struct:sctp_association
max_retrans_association	structs.h	/^	int max_retrans_association;$/;"	m	struct:sctp_globals
max_retrans_init	structs.h	/^	int max_retrans_init;$/;"	m	struct:sctp_globals
max_retrans_path	structs.h	/^	int max_retrans_path;$/;"	m	struct:sctp_globals
max_tsn_seen	tsnmap.h	/^	__u32 max_tsn_seen;$/;"	m	struct:sctp_tsnmap
maybe_get_net	net_namespace.h	/^static inline struct net *maybe_get_net(struct net *net)$/;"	f
mib	net_namespace.h	/^	struct netns_mib	mib;$/;"	m	struct:net	typeref:struct:net::netns_mib
mibs	sctp.h	/^        unsigned long   mibs[SCTP_MIB_MAX];$/;"	m	struct:sctp_mib
msg	command.h	/^	struct sctp_datamsg *msg;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_datamsg
msg	structs.h	/^	struct sctp_datamsg *msg;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_datamsg
msg_flags	ulpevent.h	/^	int msg_flags;$/;"	m	struct:sctp_ulpevent
my_port	structs.h	/^	__u16		my_port;$/;"	m	struct:sctp_cookie
my_ttag	structs.h	/^	__u32 my_ttag;$/;"	m	struct:sctp_cookie
my_vtag	structs.h	/^	__u32 my_vtag;$/;"	m	struct:sctp_cookie
name	sm.h	/^	const char *name;$/;"	m	struct:__anon33
name	sm.h	/^	int name;$/;"	m	struct:__anon32
need_ecne	structs.h	/^	__u8 need_ecne:1,	\/* Need to send an ECNE Chunk? *\/$/;"	m	struct:sctp_association
net	net_namespace.h	/^struct net {$/;"	s
net_drop_ns	net_namespace.h	213;"	d
net_eq	net_namespace.h	/^int net_eq(const struct net *net1, const struct net *net2)$/;"	f
net_header_len	structs.h	/^	__u16		net_header_len;$/;"	m	struct:sctp_af
net_sysctl_init	net_namespace.h	/^static inline int net_sysctl_init(void) { return 0; }$/;"	f
next_cmd	command.h	/^	__u8 next_cmd;$/;"	m	struct:__anon4
next_free_slot	command.h	/^	__u8 next_free_slot;$/;"	m	struct:__anon4
next_tsn	socket.c	/^	__u32 next_tsn;$/;"	m	struct:_updateEnb	file:
next_tsn	structs.h	/^	__u32 next_tsn;$/;"	m	struct:sctp_association
next_tsn_at_change	structs.h	/^		__u32 next_tsn_at_change;$/;"	m	struct:sctp_transport::__anon40
nf_frag	net_namespace.h	/^	struct netns_nf_frag	nf_frag;$/;"	m	struct:net	typeref:struct:net::netns_nf_frag
nfnl	net_namespace.h	/^	struct sock		*nfnl;$/;"	m	struct:net	typeref:struct:net::sock
nfnl_stash	net_namespace.h	/^	struct sock		*nfnl_stash;$/;"	m	struct:net	typeref:struct:net::sock
node	structs.h	/^	struct hlist_node	node;$/;"	m	struct:sctp_bind_bucket	typeref:struct:sctp_bind_bucket::hlist_node
node	structs.h	/^	struct hlist_node node;$/;"	m	struct:sctp_ep_common	typeref:struct:sctp_ep_common::hlist_node
nodelay	structs.h	/^	__u8 nodelay;$/;"	m	struct:sctp_sock
num_dup_tsns	tsnmap.h	/^	__u16 num_dup_tsns;$/;"	m	struct:sctp_tsnmap
num_inbound_streams	structs.h	/^	__u16 num_inbound_streams;$/;"	m	struct:sctp_inithdr_host
num_missing	sm_make_chunk.c	/^	__be32 num_missing;$/;"	m	struct:__sctp_missing	file:
num_outbound_streams	structs.h	/^	__u16 num_outbound_streams;$/;"	m	struct:sctp_inithdr_host
numduptsns	structs.h	/^	int numduptsns;$/;"	m	struct:sctp_association
obj	command.h	/^	sctp_arg_t obj;$/;"	m	struct:__anon3
obj-m	Makefile	/^obj-m := sctp_ha.o$/;"	m
one	sysctl.c	/^static int one = 1;$/;"	v	file:
other	constants.h	/^	sctp_event_other_t other;$/;"	m	union:__anon12
other_event_table	sm_statetable.c	/^other_event_table[SCTP_NUM_OTHER_TYPES][SCTP_STATE_NUM_STATES];$/;"	v	file:
other_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t other_event_table[SCTP_NUM_OTHER_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
out	structs.h	/^	struct sctp_stream out;$/;"	m	struct:sctp_ssnmap	typeref:struct:sctp_ssnmap::sctp_stream
out_chunk_list	structs.h	/^	struct list_head out_chunk_list;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::list_head
out_qlen	structs.h	/^	unsigned out_qlen;	\/* Total length of queued data chunks. *\/$/;"	m	struct:sctp_outq
outqueue	structs.h	/^	struct sctp_outq outqueue;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_outq
outstanding_bytes	structs.h	/^	__u32 outstanding_bytes;$/;"	m	struct:sctp_outq
overall_error_count	structs.h	/^	int overall_error_count;$/;"	m	struct:sctp_association
overhead	structs.h	/^	size_t overhead;$/;"	m	struct:sctp_packet
owner	structs.h	/^	struct hlist_head	owner;$/;"	m	struct:sctp_bind_bucket	typeref:struct:sctp_bind_bucket::hlist_head
p	structs.h	/^	struct sctp_paramhdr *p;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_paramhdr
p	structs.h	/^	struct sctp_paramhdr p;$/;"	m	union:sctp_addr_param	typeref:struct:sctp_addr_param::sctp_paramhdr
packet	command.h	/^	struct sctp_packet *packet;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_packet
packet	net_namespace.h	/^	struct netns_packet	packet;$/;"	m	struct:net	typeref:struct:net::netns_packet
packet	structs.h	/^	struct sctp_packet packet;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::sctp_packet
padding	structs.h	/^	__u8 padding;  		$/;"	m	struct:sctp_cookie
paddrparam	structs.h	/^	struct sctp_paddrparams paddrparam;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_paddrparams
param_flags	structs.h	/^	__u32 param_flags;$/;"	m	struct:sctp_association
param_flags	structs.h	/^	__u32 param_flags;$/;"	m	struct:sctp_sock
param_flags	structs.h	/^	__u32 param_flags;$/;"	m	struct:sctp_transport
param_hdr	structs.h	/^	struct sctp_paramhdr param_hdr;$/;"	m	struct:sctp_sender_hb_info	typeref:struct:sctp_sender_hb_info::sctp_paramhdr
param_hdr	structs.h	/^	union sctp_params param_hdr;$/;"	m	struct:sctp_chunk	typeref:union:sctp_chunk::sctp_params
param_type2af	sctp.h	/^static inline int param_type2af(__be16 type)$/;"	f
partial_bytes_acked	structs.h	/^	__u32 partial_bytes_acked;$/;"	m	struct:sctp_transport
passive	net_namespace.h	/^	atomic_t		passive;	\/* To decided when the network$/;"	m	struct:net
pathmaxrxt	structs.h	/^	__u16 pathmaxrxt;$/;"	m	struct:sctp_association
pathmaxrxt	structs.h	/^	__u16 pathmaxrxt;$/;"	m	struct:sctp_sock
pathmaxrxt	structs.h	/^	__u16 pathmaxrxt;$/;"	m	struct:sctp_transport
pathmtu	structs.h	/^	__u32 pathmtu;$/;"	m	struct:sctp_association
pathmtu	structs.h	/^	__u32 pathmtu;$/;"	m	struct:sctp_sock
pathmtu	structs.h	/^	__u32 pathmtu;$/;"	m	struct:sctp_transport
pd_lobby	structs.h	/^	struct sk_buff_head pd_lobby;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sk_buff_head
pd_mode	structs.h	/^	atomic_t pd_mode;$/;"	m	struct:sctp_sock
pd_mode	ulpqueue.h	/^	char pd_mode;$/;"	m	struct:sctp_ulpq
pd_point	structs.h	/^	__u32 pd_point;$/;"	m	struct:sctp_sock
pdapi_assoc_id	user.h	/^	sctp_assoc_t pdapi_assoc_id;$/;"	m	struct:sctp_pdapi_event
pdapi_flags	user.h	/^	__u16 pdapi_flags;$/;"	m	struct:sctp_pdapi_event
pdapi_indication	user.h	/^	__u32 pdapi_indication;$/;"	m	struct:sctp_pdapi_event
pdapi_length	user.h	/^	__u32 pdapi_length;$/;"	m	struct:sctp_pdapi_event
pdapi_type	user.h	/^	__u16 pdapi_type;$/;"	m	struct:sctp_pdapi_event
pdiscard	structs.h	/^		pdiscard:1,		\/* Discard the whole packet now? *\/$/;"	m	struct:sctp_chunk
peer	structs.h	/^	} peer;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::__anon42
peer_addr	structs.h	/^	union sctp_addr peer_addr;$/;"	m	struct:sctp_cookie	typeref:union:sctp_cookie::sctp_addr
peer_chunks	structs.h	/^		sctp_chunks_param_t *peer_chunks;$/;"	m	struct:sctp_association::__anon42
peer_hmacs	structs.h	/^		sctp_hmac_algo_param_t *peer_hmacs;$/;"	m	struct:sctp_association::__anon42
peer_init	structs.h	/^	struct sctp_init_chunk peer_init[0];$/;"	m	struct:sctp_cookie	typeref:struct:sctp_cookie::sctp_init_chunk
peer_random	structs.h	/^		sctp_random_param_t *peer_random;$/;"	m	struct:sctp_association::__anon42
peer_ttag	structs.h	/^	__u32 peer_ttag;$/;"	m	struct:sctp_cookie
peer_vtag	structs.h	/^	__u32 peer_vtag;$/;"	m	struct:sctp_cookie
pending_data	tsnmap.h	/^	__u16 pending_data;$/;"	m	struct:sctp_tsnmap
pernet_operations	net_namespace.h	/^struct pernet_operations {$/;"	s
pf	structs.h	/^	struct sctp_pf *pf;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_pf
pf_retrans	structs.h	/^	int pf_retrans;$/;"	m	struct:sctp_association
pf_retrans	structs.h	/^	int pf_retrans;$/;"	m	struct:sctp_globals
pf_retrans	structs.h	/^	int pf_retrans;$/;"	m	struct:sctp_transport
pl	socket.c	/^	tSockPL pl;$/;"	m	struct:_sockMsg	file:
pmtu_pending	structs.h	/^		pmtu_pending:1,$/;"	m	struct:sctp_transport
pmtu_pending	structs.h	/^	__u8   pmtu_pending;$/;"	m	struct:sctp_association
port	structs.h	/^		__u16 port;$/;"	m	struct:sctp_association::__anon42
port	structs.h	/^	__u16 port;$/;"	m	struct:sctp_bind_addr
port	structs.h	/^	unsigned short	port;$/;"	m	struct:sctp_bind_bucket
port_hashsize	structs.h	/^	int port_hashsize;$/;"	m	struct:sctp_globals
port_hashtable	structs.h	/^	struct sctp_bind_hashbucket *port_hashtable;$/;"	m	struct:sctp_globals	typeref:struct:sctp_globals::sctp_bind_hashbucket
ppid	ulpevent.h	/^	__u32 ppid;$/;"	m	struct:sctp_ulpevent
pr_fmt	probe.c	25;"	d	file:
primary_addr	structs.h	/^		union sctp_addr primary_addr;$/;"	m	struct:sctp_association::__anon42	typeref:union:sctp_association::__anon42::sctp_addr
primary_path	structs.h	/^		struct sctp_transport *primary_path;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_transport
primitive	constants.h	/^	sctp_event_primitive_t primitive;$/;"	m	union:__anon12
primitive_event_table	sm_statetable.c	/^primitive_event_table[SCTP_NUM_PRIMITIVE_TYPES][SCTP_STATE_NUM_STATES];$/;"	v	file:
primitive_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t primitive_event_table[SCTP_NUM_PRIMITIVE_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
printl	probe.c	/^static void printl(const char *fmt, ...)$/;"	f	file:
proc_inum	net_namespace.h	/^	unsigned int		proc_inum;$/;"	m	struct:net
proc_net	net_namespace.h	/^	struct proc_dir_entry 	*proc_net;$/;"	m	struct:net	typeref:struct:net::proc_dir_entry
proc_net_sctp	protocol.c	/^struct proc_dir_entry	*proc_net_sctp;$/;"	v	typeref:struct:proc_dir_entry
proc_net_stat	net_namespace.h	/^	struct proc_dir_entry 	*proc_net_stat;$/;"	m	struct:net	typeref:struct:net::proc_dir_entry
procname	probe.c	/^static const char procname[] = "sctpprobe";$/;"	v	file:
proto_unreach_timer	structs.h	/^	struct timer_list proto_unreach_timer;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::timer_list
prsctp_capable	structs.h	/^			prsctp_capable:1,   \/* Can peer do PR-SCTP? *\/$/;"	m	struct:sctp_association::__anon42
prsctp_capable	structs.h	/^	__u8 prsctp_capable;$/;"	m	struct:sctp_cookie
prsctp_chunk_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t prsctp_chunk_event_table[SCTP_NUM_PRSCTP_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
prsctp_enable	structs.h	/^	int prsctp_enable;$/;"	m	struct:sctp_globals
prsctp_param	sm_make_chunk.c	/^static const struct sctp_paramhdr prsctp_param = {$/;"	v	typeref:struct:sctp_paramhdr	file:
put_net	net_namespace.h	/^static inline void put_net(struct net *net)$/;"	f
random	structs.h	/^	struct sctp_random_param *random;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_random_param
raw_addr_list_len	structs.h	/^	__u32 raw_addr_list_len;$/;"	m	struct:sctp_cookie
rcu	structs.h	/^	struct rcu_head	rcu;$/;"	m	struct:sctp_sockaddr_entry	typeref:struct:sctp_sockaddr_entry::rcu_head
rcu	structs.h	/^	struct rcu_head rcu;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::rcu_head
rcvbuf_policy	structs.h	/^	__u32 rcvbuf_policy;$/;"	m	struct:sctp_endpoint
rcvbuf_policy	structs.h	/^	int rcvbuf_policy;$/;"	m	struct:sctp_globals
rcvr	structs.h	/^	struct sctp_ep_common *rcvr;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_ep_common
read_pnet	net_namespace.h	/^static inline struct net *read_pnet(struct net * const *pnet)$/;"	f
read_pnet	net_namespace.h	256;"	d
reasm	ulpqueue.h	/^	struct sk_buff_head reasm;$/;"	m	struct:sctp_ulpq	typeref:struct:sctp_ulpq::sk_buff_head
refcnt	auth.h	/^	atomic_t refcnt;$/;"	m	struct:sctp_auth_bytes
refcnt	structs.h	/^	atomic_t    refcnt;$/;"	m	struct:sctp_ep_common
refcnt	structs.h	/^	atomic_t refcnt;$/;"	m	struct:sctp_chunk
refcnt	structs.h	/^	atomic_t refcnt;$/;"	m	struct:sctp_datamsg
refcnt	structs.h	/^	atomic_t refcnt;$/;"	m	struct:sctp_transport
register_net_sysctl	net_namespace.h	/^static inline struct ctl_table_header *register_net_sysctl(struct net *net,$/;"	f
release_net	net_namespace.h	/^static inline void release_net(struct net *net)$/;"	f
retran_path	structs.h	/^		struct sctp_transport *retran_path;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_transport
retransmit	structs.h	/^	struct list_head retransmit;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::list_head
rmem_alloc	structs.h	/^	atomic_t rmem_alloc;$/;"	m	struct:sctp_association
rmem_len	ulpevent.h	/^	unsigned int rmem_len;$/;"	m	struct:sctp_ulpevent
rt_genid	net_namespace.h	/^	atomic_t		rt_genid;$/;"	m	struct:net
rt_genid	net_namespace.h	/^static inline int rt_genid(struct net *net)$/;"	f
rt_genid_bump	net_namespace.h	/^static inline void rt_genid_bump(struct net *net)$/;"	f
rtnl	net_namespace.h	/^	struct sock 		*rtnl;			\/* rtnetlink socket *\/$/;"	m	struct:net	typeref:struct:net::sock
rto	structs.h	/^	unsigned long rto;$/;"	m	struct:sctp_transport
rto_alpha	structs.h	/^	int rto_alpha;$/;"	m	struct:sctp_globals
rto_beta	structs.h	/^	int rto_beta;$/;"	m	struct:sctp_globals
rto_initial	structs.h	/^	unsigned int rto_initial;$/;"	m	struct:sctp_globals
rto_initial	structs.h	/^	unsigned long rto_initial;$/;"	m	struct:sctp_association
rto_max	structs.h	/^	unsigned int rto_max;$/;"	m	struct:sctp_globals
rto_max	structs.h	/^	unsigned long rto_max;$/;"	m	struct:sctp_association
rto_min	structs.h	/^	unsigned int rto_min;$/;"	m	struct:sctp_globals
rto_min	structs.h	/^	unsigned long rto_min;$/;"	m	struct:sctp_association
rto_pending	structs.h	/^		 rto_pending:1,$/;"	m	struct:sctp_transport
rtoinfo	structs.h	/^	struct sctp_rtoinfo rtoinfo;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_rtoinfo
rtt	structs.h	/^	__u32 rtt;		\/* This is the most recent RTT.	 *\/$/;"	m	struct:sctp_transport
rtt_in_progress	structs.h	/^	__u16	rtt_in_progress:1,	\/* This chunk used for RTT calc? *\/$/;"	m	struct:sctp_chunk
rttvar	structs.h	/^	__u32 rttvar;$/;"	m	struct:sctp_transport
rtx_data_chunks	structs.h	/^	__u32 rtx_data_chunks;$/;"	m	struct:sctp_association
rules_mod_lock	net_namespace.h	/^	spinlock_t		rules_mod_lock;$/;"	m	struct:net
rules_ops	net_namespace.h	/^	struct list_head	rules_ops;$/;"	m	struct:net	typeref:struct:net::list_head
rwnd	structs.h	/^		__u32 rwnd;$/;"	m	struct:sctp_association::__anon42
rwnd	structs.h	/^	__u32 rwnd;$/;"	m	struct:sctp_association
rwnd_over	structs.h	/^	__u32 rwnd_over;$/;"	m	struct:sctp_association
rwnd_press	structs.h	/^	__u32 rwnd_press;$/;"	m	struct:sctp_association
rwnd_scale_max	sysctl.c	/^static int rwnd_scale_max = 16;$/;"	v	file:
rwnd_update_shift	structs.h	/^	int rwnd_update_shift;$/;"	m	struct:sctp_globals
sa	structs.h	/^	struct sockaddr sa;$/;"	m	union:sctp_addr	typeref:struct:sctp_addr::sockaddr
sa_family	structs.h	/^	sa_family_t	sa_family;$/;"	m	struct:sctp_af
sac_assoc_id	user.h	/^	sctp_assoc_t sac_assoc_id;$/;"	m	struct:sctp_assoc_change
sac_error	user.h	/^	__u16 sac_error;$/;"	m	struct:sctp_assoc_change
sac_flags	user.h	/^	__u16 sac_flags;$/;"	m	struct:sctp_assoc_change
sac_inbound_streams	user.h	/^	__u16 sac_inbound_streams;$/;"	m	struct:sctp_assoc_change
sac_info	user.h	/^	__u8 sac_info[0];$/;"	m	struct:sctp_assoc_change
sac_length	user.h	/^	__u32 sac_length;$/;"	m	struct:sctp_assoc_change
sac_outbound_streams	user.h	/^	__u16 sac_outbound_streams;$/;"	m	struct:sctp_assoc_change
sac_state	user.h	/^	__u16 sac_state;$/;"	m	struct:sctp_assoc_change
sac_type	user.h	/^	__u16 sac_type;$/;"	m	struct:sctp_assoc_change
sack_assoc_id	user.h	/^	sctp_assoc_t	sack_assoc_id;$/;"	m	struct:sctp_sack_info
sack_cnt	structs.h	/^		__u32	sack_cnt;$/;"	m	struct:sctp_association::__anon42
sack_delay	user.h	/^	uint32_t	sack_delay;$/;"	m	struct:sctp_sack_info
sack_freq	user.h	/^	uint32_t	sack_freq;$/;"	m	struct:sctp_sack_info
sack_generation	structs.h	/^		__u32	sack_generation;$/;"	m	struct:sctp_association::__anon42
sack_generation	structs.h	/^	__u32 sack_generation;$/;"	m	struct:sctp_transport
sack_hdr	structs.h	/^		struct sctp_sackhdr *sack_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_sackhdr
sack_needed	structs.h	/^		__u8    sack_needed;     \/* Do we need to sack the peer? *\/$/;"	m	struct:sctp_association::__anon42
sack_timeout	structs.h	/^	unsigned int sack_timeout;$/;"	m	struct:sctp_globals
sack_timer_max	sysctl.c	/^static int sack_timer_max = 500;$/;"	v	file:
sack_timer_min	sysctl.c	/^static int sack_timer_min = 1;$/;"	v	file:
sackdelay	structs.h	/^	__u32 sackdelay;$/;"	m	struct:sctp_sock
sackdelay	structs.h	/^	unsigned long sackdelay;$/;"	m	struct:sctp_association
sackdelay	structs.h	/^	unsigned long sackdelay;$/;"	m	struct:sctp_transport
sacked	structs.h	/^	struct list_head sacked;$/;"	m	struct:sctp_outq	typeref:struct:sctp_outq::list_head
sackfreq	structs.h	/^	__u32 sackfreq;$/;"	m	struct:sctp_association
sackfreq	structs.h	/^	__u32 sackfreq;$/;"	m	struct:sctp_sock
sackfreq	structs.h	/^	__u32 sackfreq;$/;"	m	struct:sctp_transport
sackh	command.h	/^	sctp_sackhdr_t *sackh;$/;"	m	union:__anon2
saddr	structs.h	/^	union sctp_addr saddr;$/;"	m	struct:sctp_transport	typeref:union:sctp_transport::sctp_addr
sai_adaptation_ind	user.h	/^	__u32 sai_adaptation_ind;$/;"	m	struct:sctp_adaptation_event
sai_assoc_id	user.h	/^	sctp_assoc_t sai_assoc_id;$/;"	m	struct:sctp_adaptation_event
sai_flags	user.h	/^	__u16 sai_flags;$/;"	m	struct:sctp_adaptation_event
sai_length	user.h	/^	__u32 sai_length;$/;"	m	struct:sctp_adaptation_event
sai_type	user.h	/^	__u16 sai_type;$/;"	m	struct:sctp_adaptation_event
sasoc_asocmaxrxt	user.h	/^	__u16		sasoc_asocmaxrxt;$/;"	m	struct:sctp_assocparams
sasoc_assoc_id	user.h	/^	sctp_assoc_t	sasoc_assoc_id;$/;"	m	struct:sctp_assocparams
sasoc_cookie_life	user.h	/^	__u32		sasoc_cookie_life;$/;"	m	struct:sctp_assocparams
sasoc_local_rwnd	user.h	/^	__u32		sasoc_local_rwnd;$/;"	m	struct:sctp_assocparams
sasoc_number_peer_destinations	user.h	/^	__u16		sasoc_number_peer_destinations;$/;"	m	struct:sctp_assocparams
sasoc_peer_rwnd	user.h	/^	__u32		sasoc_peer_rwnd;$/;"	m	struct:sctp_assocparams
sat	structs.h	/^	struct sctp_supported_addrs_param *sat;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_supported_addrs_param
sauth_chunk	user.h	/^	__u8		sauth_chunk;$/;"	m	struct:sctp_authchunk
sca_assoc_id	user.h	/^	sctp_assoc_t	sca_assoc_id;$/;"	m	struct:sctp_authkey
sca_key	user.h	/^	__u8		sca_key[];$/;"	m	struct:sctp_authkey
sca_keylength	user.h	/^	__u16		sca_keylength;$/;"	m	struct:sctp_authkey
sca_keynumber	user.h	/^	__u16		sca_keynumber;$/;"	m	struct:sctp_authkey
scact_assoc_id	user.h	/^	sctp_assoc_t	scact_assoc_id;$/;"	m	struct:sctp_authkeyid
scact_keynumber	user.h	/^	__u16		scact_keynumber;$/;"	m	struct:sctp_authkeyid
scope	structs.h	/^	sctp_scope_t	(*scope) (union sctp_addr *);$/;"	m	struct:sctp_af
sctp	net_namespace.h	/^	struct netns_sctp	sctp;$/;"	m	struct:net	typeref:struct:net::netns_sctp
sctp	structs.h	/^       struct sctp_sock  sctp;$/;"	m	struct:sctp6_sock	typeref:struct:sctp6_sock::sctp_sock
sctp6_rcv	ipv6.c	/^static int sctp6_rcv(struct sk_buff *skb)$/;"	f	file:
sctp6_sock	structs.h	/^struct sctp6_sock {$/;"	s
sctp_abort_pkt_new	sm_statefuns.c	/^static struct sctp_packet *sctp_abort_pkt_new(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_accept	socket.c	/^SCTP_STATIC struct sock *sctp_accept(struct sock *sk, int flags, int *err)$/;"	f
sctp_acked	outqueue.c	/^static int sctp_acked(struct sctp_sackhdr *sack, __u32 tsn)$/;"	f	file:
sctp_adaptation_event	user.h	/^struct sctp_adaptation_event {$/;"	s
sctp_adaptation_layer_event	socket.c	/^	__u8 sctp_adaptation_layer_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_adaptation_layer_event	user.h	/^	__u8 sctp_adaptation_layer_event;$/;"	m	struct:sctp_event_subscribe
sctp_add_asconf_response	sm_make_chunk.c	/^static void sctp_add_asconf_response(struct sctp_chunk *chunk, __be32 crr_id,$/;"	f	file:
sctp_add_backlog	input.c	/^static int sctp_add_backlog(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
sctp_add_bind_addr	bind_addr.c	/^int sctp_add_bind_addr(struct sctp_bind_addr *bp, union sctp_addr *new,$/;"	f
sctp_add_cmd_sf	command.c	/^void sctp_add_cmd_sf(sctp_cmd_seq_t *seq, sctp_verb_t verb, sctp_arg_t obj)$/;"	f
sctp_addip_enable	structs.h	277;"	d
sctp_addip_noauth	structs.h	278;"	d
sctp_addr	structs.h	/^union sctp_addr {$/;"	u
sctp_addr_id2transport	socket.c	/^static struct sctp_transport *sctp_addr_id2transport(struct sock *sk,$/;"	f	file:
sctp_addr_param	structs.h	/^union sctp_addr_param {$/;"	u
sctp_address_event	socket.c	/^	__u8 sctp_address_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_address_event	user.h	/^	__u8 sctp_address_event;$/;"	m	struct:sctp_event_subscribe
sctp_address_families	structs.h	265;"	d
sctp_addto_chunk	sm_make_chunk.c	/^void *sctp_addto_chunk(struct sctp_chunk *chunk, int len, const void *data)$/;"	f
sctp_addto_chunk_fixed	sm_make_chunk.c	/^void *sctp_addto_chunk_fixed(struct sctp_chunk *chunk,$/;"	f
sctp_addto_param	sm_make_chunk.c	/^static void *sctp_addto_param(struct sctp_chunk *chunk, int len,$/;"	f	file:
sctp_af	structs.h	/^struct sctp_af {$/;"	s
sctp_af_inet	protocol.c	/^static struct sctp_af sctp_af_inet = {$/;"	v	typeref:struct:sctp_af	file:
sctp_af_inet	protocol.c	/^static struct sctp_af sctp_af_inet;$/;"	v	typeref:struct:sctp_af	file:
sctp_af_inet6	ipv6.c	/^static struct sctp_af sctp_af_inet6 = {$/;"	v	typeref:struct:sctp_af	file:
sctp_af_v4_specific	protocol.c	/^static struct sctp_af *sctp_af_v4_specific;$/;"	v	typeref:struct:sctp_af	file:
sctp_af_v6_specific	protocol.c	/^static struct sctp_af *sctp_af_v6_specific;$/;"	v	typeref:struct:sctp_af	file:
sctp_apply_peer_addr_params	socket.c	/^static int sctp_apply_peer_addr_params(struct sctp_paddrparams *params,$/;"	f	file:
sctp_arg_t	command.h	/^} sctp_arg_t;$/;"	t	typeref:union:__anon2
sctp_asconf_param_success	sm_make_chunk.c	/^static void sctp_asconf_param_success(struct sctp_association *asoc,$/;"	f	file:
sctp_asconf_queue_teardown	associola.c	/^void sctp_asconf_queue_teardown(struct sctp_association *asoc)$/;"	f
sctp_assoc	structs.h	/^static inline struct sctp_association *sctp_assoc(struct sctp_ep_common *base)$/;"	f
sctp_assoc2id	sctp.h	/^static inline sctp_assoc_t sctp_assoc2id(const struct sctp_association *asoc)$/;"	f
sctp_assoc_add_peer	associola.c	/^struct sctp_transport *sctp_assoc_add_peer(struct sctp_association *asoc,$/;"	f
sctp_assoc_bh_rcv	associola.c	/^static void sctp_assoc_bh_rcv(struct work_struct *work)$/;"	f	file:
sctp_assoc_change	user.h	/^struct sctp_assoc_change {$/;"	s
sctp_assoc_choose_alter_transport	associola.c	/^struct sctp_transport *sctp_assoc_choose_alter_transport($/;"	f
sctp_assoc_clean_asconf_ack_cache	associola.c	/^void sctp_assoc_clean_asconf_ack_cache(const struct sctp_association *asoc)$/;"	f
sctp_assoc_control_transport	associola.c	/^void sctp_assoc_control_transport(struct sctp_association *asoc,$/;"	f
sctp_assoc_del_nonprimary_peers	associola.c	/^void sctp_assoc_del_nonprimary_peers(struct sctp_association *asoc,$/;"	f
sctp_assoc_del_peer	associola.c	/^void sctp_assoc_del_peer(struct sctp_association *asoc,$/;"	f
sctp_assoc_free_asconf_acks	associola.c	/^static void sctp_assoc_free_asconf_acks(struct sctp_association *asoc)$/;"	f	file:
sctp_assoc_free_asconf_queue	associola.c	/^static void sctp_assoc_free_asconf_queue(struct sctp_association *asoc)$/;"	f	file:
sctp_assoc_hashfn	sctp.h	/^static inline int sctp_assoc_hashfn(struct net *net, __u16 lport, __u16 rport)$/;"	f
sctp_assoc_hashsize	structs.h	268;"	d
sctp_assoc_hashtable	structs.h	269;"	d
sctp_assoc_ids	user.h	/^struct sctp_assoc_ids {$/;"	s
sctp_assoc_is_match	associola.c	/^struct sctp_transport *sctp_assoc_is_match(struct sctp_association *asoc,$/;"	f
sctp_assoc_lookup_asconf_ack	associola.c	/^struct sctp_chunk *sctp_assoc_lookup_asconf_ack($/;"	f
sctp_assoc_lookup_laddr	associola.c	/^int sctp_assoc_lookup_laddr(struct sctp_association *asoc,$/;"	f
sctp_assoc_lookup_paddr	associola.c	/^struct sctp_transport *sctp_assoc_lookup_paddr($/;"	f
sctp_assoc_lookup_tsn	associola.c	/^struct sctp_transport *sctp_assoc_lookup_tsn(struct sctp_association *asoc,$/;"	f
sctp_assoc_migrate	associola.c	/^void sctp_assoc_migrate(struct sctp_association *assoc, struct sock *newsk)$/;"	f
sctp_assoc_ops	proc.c	/^static const struct seq_operations sctp_assoc_ops = {$/;"	v	typeref:struct:seq_operations	file:
sctp_assoc_pending_pmtu	sctp.h	/^static inline void sctp_assoc_pending_pmtu(struct sock *sk, struct sctp_association *asoc)$/;"	f
sctp_assoc_rm_peer	associola.c	/^void sctp_assoc_rm_peer(struct sctp_association *asoc,$/;"	f
sctp_assoc_rwnd_decrease	associola.c	/^void sctp_assoc_rwnd_decrease(struct sctp_association *asoc, unsigned len)$/;"	f
sctp_assoc_rwnd_increase	associola.c	/^void sctp_assoc_rwnd_increase(struct sctp_association *asoc, unsigned len)$/;"	f
sctp_assoc_set_bind_addr_from_cookie	associola.c	/^int sctp_assoc_set_bind_addr_from_cookie(struct sctp_association *asoc,$/;"	f
sctp_assoc_set_bind_addr_from_ep	associola.c	/^int sctp_assoc_set_bind_addr_from_ep(struct sctp_association *asoc,$/;"	f
sctp_assoc_set_id	associola.c	/^int sctp_assoc_set_id(struct sctp_association *asoc, gfp_t gfp)$/;"	f
sctp_assoc_set_primary	associola.c	/^void sctp_assoc_set_primary(struct sctp_association *asoc,$/;"	f
sctp_assoc_sync_pmtu	associola.c	/^void sctp_assoc_sync_pmtu(struct sctp_association *asoc)$/;"	f
sctp_assoc_t	user.h	/^typedef __s32 sctp_assoc_t;$/;"	t
sctp_assoc_update	associola.c	/^void sctp_assoc_update(struct sctp_association *asoc,$/;"	f
sctp_assoc_update_retran_path	associola.c	/^void sctp_assoc_update_retran_path(struct sctp_association *asoc)$/;"	f
sctp_assoc_value	user.h	/^struct sctp_assoc_value {$/;"	s
sctp_association	structs.h	/^struct sctp_association {$/;"	s
sctp_association_destroy	associola.c	/^static void sctp_association_destroy(struct sctp_association *asoc)$/;"	f	file:
sctp_association_event	socket.c	/^	__u8 sctp_association_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_association_event	user.h	/^	__u8 sctp_association_event;$/;"	m	struct:sctp_event_subscribe
sctp_association_free	associola.c	/^void sctp_association_free(struct sctp_association *asoc)$/;"	f
sctp_association_get_next_tsn	associola.c	/^__u32 sctp_association_get_next_tsn(struct sctp_association *asoc)$/;"	f
sctp_association_hold	associola.c	/^void sctp_association_hold(struct sctp_association *asoc)$/;"	f
sctp_association_init	associola.c	/^static struct sctp_association *sctp_association_init(struct sctp_association *asoc,$/;"	f	file:
sctp_association_new	associola.c	/^struct sctp_association *sctp_association_new(const struct sctp_endpoint *ep,$/;"	f
sctp_association_put	associola.c	/^void sctp_association_put(struct sctp_association *asoc)$/;"	f
sctp_assocparams	user.h	/^struct sctp_assocparams {$/;"	s
sctp_assocs_id	protocol.c	/^struct idr sctp_assocs_id;$/;"	v	typeref:struct:idr
sctp_assocs_id_lock	protocol.c	/^DEFINE_SPINLOCK(sctp_assocs_id_lock);$/;"	v
sctp_assocs_proc_exit	proc.c	/^void sctp_assocs_proc_exit(void)$/;"	f
sctp_assocs_proc_init	proc.c	/^int __init sctp_assocs_proc_init(void)$/;"	f
sctp_assocs_seq_fops	proc.c	/^static const struct file_operations sctp_assocs_seq_fops = {$/;"	v	typeref:struct:file_operations	file:
sctp_assocs_seq_next	proc.c	/^static void * sctp_assocs_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
sctp_assocs_seq_open	proc.c	/^static int sctp_assocs_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
sctp_assocs_seq_show	proc.c	/^static int sctp_assocs_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
sctp_assocs_seq_start	proc.c	/^static void * sctp_assocs_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
sctp_assocs_seq_stop	proc.c	/^static void sctp_assocs_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
sctp_auth_asoc_copy_shkeys	auth.c	/^int sctp_auth_asoc_copy_shkeys(const struct sctp_endpoint *ep,$/;"	f
sctp_auth_asoc_create_secret	auth.c	/^static struct sctp_auth_bytes *sctp_auth_asoc_create_secret($/;"	f	file:
sctp_auth_asoc_get_hmac	auth.c	/^struct sctp_hmac *sctp_auth_asoc_get_hmac(const struct sctp_association *asoc)$/;"	f
sctp_auth_asoc_init_active_key	auth.c	/^int sctp_auth_asoc_init_active_key(struct sctp_association *asoc, gfp_t gfp)$/;"	f
sctp_auth_asoc_set_default_hmac	auth.c	/^void sctp_auth_asoc_set_default_hmac(struct sctp_association *asoc,$/;"	f
sctp_auth_asoc_set_secret	auth.c	/^static struct sctp_auth_bytes *sctp_auth_asoc_set_secret($/;"	f	file:
sctp_auth_asoc_verify_hmac_id	auth.c	/^int sctp_auth_asoc_verify_hmac_id(const struct sctp_association *asoc,$/;"	f
sctp_auth_bytes	auth.h	/^struct sctp_auth_bytes {$/;"	s
sctp_auth_calculate_hmac	auth.c	/^void sctp_auth_calculate_hmac(const struct sctp_association *asoc,$/;"	f
sctp_auth_compare_vectors	auth.c	/^static int sctp_auth_compare_vectors(struct sctp_auth_bytes *vector1,$/;"	f	file:
sctp_auth_create_key	auth.c	/^static struct sctp_auth_bytes *sctp_auth_create_key(__u32 key_len, gfp_t gfp)$/;"	f	file:
sctp_auth_del_key_id	auth.c	/^int sctp_auth_del_key_id(struct sctp_endpoint *ep,$/;"	f
sctp_auth_destroy_hmacs	auth.c	/^void sctp_auth_destroy_hmacs(struct crypto_hash *auth_hmacs[])$/;"	f
sctp_auth_destroy_keys	auth.c	/^void sctp_auth_destroy_keys(struct list_head *keys)$/;"	f
sctp_auth_enable	structs.h	280;"	d
sctp_auth_ep_add_chunkid	auth.c	/^int sctp_auth_ep_add_chunkid(struct sctp_endpoint *ep, __u8 chunk_id)$/;"	f
sctp_auth_ep_set_hmacs	auth.c	/^int sctp_auth_ep_set_hmacs(struct sctp_endpoint *ep,$/;"	f
sctp_auth_get_hmac	auth.c	/^struct sctp_hmac *sctp_auth_get_hmac(__u16 hmac_id)$/;"	f
sctp_auth_get_shkey	auth.c	/^struct sctp_shared_key *sctp_auth_get_shkey($/;"	f
sctp_auth_init_hmacs	auth.c	/^int sctp_auth_init_hmacs(struct sctp_endpoint *ep, gfp_t gfp)$/;"	f
sctp_auth_key_hold	auth.h	/^static inline void sctp_auth_key_hold(struct sctp_auth_bytes *key)$/;"	f
sctp_auth_key_put	auth.c	/^void sctp_auth_key_put(struct sctp_auth_bytes *key)$/;"	f
sctp_auth_make_key_vector	auth.c	/^static struct sctp_auth_bytes *sctp_auth_make_key_vector($/;"	f	file:
sctp_auth_make_local_vector	auth.c	/^static struct sctp_auth_bytes *sctp_auth_make_local_vector($/;"	f	file:
sctp_auth_make_peer_vector	auth.c	/^static struct sctp_auth_bytes *sctp_auth_make_peer_vector($/;"	f	file:
sctp_auth_recv_cid	auth.c	/^int sctp_auth_recv_cid(sctp_cid_t chunk, const struct sctp_association *asoc)$/;"	f
sctp_auth_send_cid	auth.c	/^int sctp_auth_send_cid(sctp_cid_t chunk, const struct sctp_association *asoc)$/;"	f
sctp_auth_set_active_key	auth.c	/^int sctp_auth_set_active_key(struct sctp_endpoint *ep,$/;"	f
sctp_auth_set_key	auth.c	/^int sctp_auth_set_key(struct sctp_endpoint *ep,$/;"	f
sctp_auth_shkey_create	auth.c	/^struct sctp_shared_key *sctp_auth_shkey_create(__u16 key_id, gfp_t gfp)$/;"	f
sctp_auth_shkey_free	auth.c	/^static void sctp_auth_shkey_free(struct sctp_shared_key *sh_key)$/;"	f	file:
sctp_authchunk	user.h	/^struct sctp_authchunk {$/;"	s
sctp_authchunks	user.h	/^struct sctp_authchunks {$/;"	s
sctp_authentication_event	socket.c	/^	__u8 sctp_authentication_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_authentication_event	user.h	/^	__u8 sctp_authentication_event;$/;"	m	struct:sctp_event_subscribe
sctp_authkey	user.h	/^struct sctp_authkey {$/;"	s
sctp_authkey_event	user.h	/^struct sctp_authkey_event {$/;"	s
sctp_authkeyid	user.h	/^struct sctp_authkeyid {$/;"	s
sctp_autobind	socket.c	/^static int sctp_autobind(struct sock *sk)$/;"	f	file:
sctp_backlog_rcv	input.c	/^int sctp_backlog_rcv(struct sock *sk, struct sk_buff *skb)$/;"	f
sctp_bh_lock_sock	sctp.h	223;"	d
sctp_bh_unlock_sock	sctp.h	224;"	d
sctp_bind	socket.c	/^SCTP_STATIC int sctp_bind(struct sock *sk, struct sockaddr *addr, int addr_len)$/;"	f
sctp_bind_addr	structs.h	/^struct sctp_bind_addr {$/;"	s
sctp_bind_addr_clean	bind_addr.c	/^static void sctp_bind_addr_clean(struct sctp_bind_addr *bp)$/;"	f	file:
sctp_bind_addr_conflict	bind_addr.c	/^int sctp_bind_addr_conflict(struct sctp_bind_addr *bp,$/;"	f
sctp_bind_addr_copy	bind_addr.c	/^int sctp_bind_addr_copy(struct sctp_bind_addr *dest,$/;"	f
sctp_bind_addr_dup	bind_addr.c	/^int sctp_bind_addr_dup(struct sctp_bind_addr *dest,$/;"	f
sctp_bind_addr_free	bind_addr.c	/^void sctp_bind_addr_free(struct sctp_bind_addr *bp)$/;"	f
sctp_bind_addr_init	bind_addr.c	/^void sctp_bind_addr_init(struct sctp_bind_addr *bp, __u16 port)$/;"	f
sctp_bind_addr_match	bind_addr.c	/^int sctp_bind_addr_match(struct sctp_bind_addr *bp,$/;"	f
sctp_bind_addr_state	bind_addr.c	/^int sctp_bind_addr_state(const struct sctp_bind_addr *bp,$/;"	f
sctp_bind_addrs_to_raw	bind_addr.c	/^union sctp_params sctp_bind_addrs_to_raw(const struct sctp_bind_addr *bp,$/;"	f
sctp_bind_bucket	structs.h	/^struct sctp_bind_bucket {$/;"	s
sctp_bind_hashbucket	structs.h	/^struct sctp_bind_hashbucket {$/;"	s
sctp_bindx_add	socket.c	/^static int sctp_bindx_add(struct sock *sk, struct sockaddr *addrs, int addrcnt)$/;"	f	file:
sctp_bindx_rem	socket.c	/^static int sctp_bindx_rem(struct sock *sk, struct sockaddr *addrs, int addrcnt)$/;"	f	file:
sctp_bucket_create	socket.c	/^static struct sctp_bind_bucket *sctp_bucket_create($/;"	f	file:
sctp_bucket_destroy	socket.c	/^static void sctp_bucket_destroy(struct sctp_bind_bucket *pp)$/;"	f	file:
sctp_cacc_skip	outqueue.c	/^static inline int sctp_cacc_skip(struct sctp_transport *primary,$/;"	f	file:
sctp_cacc_skip_3_1	outqueue.c	/^static inline int sctp_cacc_skip_3_1(struct sctp_transport *primary,$/;"	f	file:
sctp_cacc_skip_3_1_d	outqueue.c	/^static inline int sctp_cacc_skip_3_1_d(struct sctp_transport *primary,$/;"	f	file:
sctp_cacc_skip_3_1_f	outqueue.c	/^static inline int sctp_cacc_skip_3_1_f(struct sctp_transport *transport,$/;"	f	file:
sctp_cacc_skip_3_2	outqueue.c	/^static inline int sctp_cacc_skip_3_2(struct sctp_transport *primary, __u32 tsn)$/;"	f	file:
sctp_check_transmitted	outqueue.c	/^static void sctp_check_transmitted(struct sctp_outq *q,$/;"	f	file:
sctp_checksum_disable	structs.h	281;"	d
sctp_chunk	structs.h	/^struct sctp_chunk {$/;"	s
sctp_chunk_abandoned	chunk.c	/^int sctp_chunk_abandoned(struct sctp_chunk *chunk)$/;"	f
sctp_chunk_assign_ssn	sm_make_chunk.c	/^void sctp_chunk_assign_ssn(struct sctp_chunk *chunk)$/;"	f
sctp_chunk_assign_tsn	sm_make_chunk.c	/^void sctp_chunk_assign_tsn(struct sctp_chunk *chunk)$/;"	f
sctp_chunk_destroy	sm_make_chunk.c	/^static void sctp_chunk_destroy(struct sctp_chunk *chunk)$/;"	f	file:
sctp_chunk_event_lookup	sm_statetable.c	/^static const sctp_sm_table_entry_t *sctp_chunk_event_lookup(sctp_cid_t cid,$/;"	f	file:
sctp_chunk_fail	chunk.c	/^void sctp_chunk_fail(struct sctp_chunk *chunk, int error)$/;"	f
sctp_chunk_free	sm_make_chunk.c	/^void sctp_chunk_free(struct sctp_chunk *chunk)$/;"	f
sctp_chunk_hold	sm_make_chunk.c	/^void sctp_chunk_hold(struct sctp_chunk *ch)$/;"	f
sctp_chunk_iif	sm_make_chunk.c	/^int sctp_chunk_iif(const struct sctp_chunk *chunk)$/;"	f
sctp_chunk_is_data	constants.h	153;"	d
sctp_chunk_length_valid	sm_statefuns.c	/^sctp_chunk_length_valid(struct sctp_chunk *chunk,$/;"	f	file:
sctp_chunk_put	sm_make_chunk.c	/^void sctp_chunk_put(struct sctp_chunk *ch)$/;"	f
sctp_chunkify	sm_make_chunk.c	/^struct sctp_chunk *sctp_chunkify(struct sk_buff *skb,$/;"	f
sctp_cid_tbl	debug.c	/^static const char *const sctp_cid_tbl[SCTP_NUM_BASE_CHUNK_TYPES] = {$/;"	v	file:
sctp_clear_pd	ulpqueue.c	/^int sctp_clear_pd(struct sock *sk, struct sctp_association *asoc)$/;"	f
sctp_close	socket.c	/^SCTP_STATIC void sctp_close(struct sock *sk, long timeout)$/;"	f
sctp_cmd_adaptation_ind	sm_sideeffect.c	/^static void sctp_cmd_adaptation_ind(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_cmd_assoc_change	sm_sideeffect.c	/^static void sctp_cmd_assoc_change(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_cmd_assoc_failed	sm_sideeffect.c	/^static void sctp_cmd_assoc_failed(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_cmd_del_non_primary	sm_sideeffect.c	/^static void sctp_cmd_del_non_primary(struct sctp_association *asoc)$/;"	f	file:
sctp_cmd_delete_tcb	sm_sideeffect.c	/^static void sctp_cmd_delete_tcb(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_hb_timer_update	sm_sideeffect.c	/^static void sctp_cmd_hb_timer_update(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_hb_timers_start	sm_sideeffect.c	/^void sctp_cmd_hb_timers_start(sctp_cmd_seq_t *cmds,$/;"	f
sctp_cmd_hb_timers_stop	sm_sideeffect.c	/^void sctp_cmd_hb_timers_stop(sctp_cmd_seq_t *cmds,$/;"	f
sctp_cmd_init_failed	sm_sideeffect.c	/^static void sctp_cmd_init_failed(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_cmd_interpreter	sm_sideeffect.c	/^static int sctp_cmd_interpreter(sctp_event_t event_type,$/;"	f	file:
sctp_cmd_new_state	sm_sideeffect.c	/^void sctp_cmd_new_state(sctp_cmd_seq_t *cmds,$/;"	f
sctp_cmd_process_fwdtsn	sm_sideeffect.c	/^static void sctp_cmd_process_fwdtsn(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_cmd_process_init	sm_sideeffect.c	/^static int sctp_cmd_process_init(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_cmd_process_operr	sm_sideeffect.c	/^static void sctp_cmd_process_operr(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_process_sack	sm_sideeffect.c	/^static int sctp_cmd_process_sack(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_send_asconf	sm_sideeffect.c	/^static void sctp_cmd_send_asconf(struct sctp_association *asoc)$/;"	f	file:
sctp_cmd_send_msg	sm_sideeffect.c	/^static int sctp_cmd_send_msg(struct sctp_association *asoc,$/;"	f	file:
sctp_cmd_seq_t	command.h	/^} sctp_cmd_seq_t;$/;"	t	typeref:struct:__anon4
sctp_cmd_set_sk_err	sm_sideeffect.c	/^static void sctp_cmd_set_sk_err(struct sctp_association *asoc, int error)$/;"	f	file:
sctp_cmd_setup_t2	sm_sideeffect.c	/^static void sctp_cmd_setup_t2(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_setup_t4	sm_sideeffect.c	/^static void sctp_cmd_setup_t4(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_t	command.h	/^} sctp_cmd_t;$/;"	t	typeref:struct:__anon3
sctp_cmd_t1_timer_update	sm_sideeffect.c	/^static void sctp_cmd_t1_timer_update(struct sctp_association *asoc,$/;"	f	file:
sctp_cmd_t3_rtx_timers_stop	sm_sideeffect.c	/^static void sctp_cmd_t3_rtx_timers_stop(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmd_transport_on	sm_sideeffect.c	/^static void sctp_cmd_transport_on(sctp_cmd_seq_t *cmds,$/;"	f	file:
sctp_cmp_addr_exact	associola.c	/^int sctp_cmp_addr_exact(const union sctp_addr *ss1,$/;"	f
sctp_cmsg_t	user.h	/^} sctp_cmsg_t;$/;"	t	typeref:enum:sctp_cmsg_type
sctp_cmsg_type	user.h	/^typedef enum sctp_cmsg_type {$/;"	g
sctp_cmsgs	structs.h	/^typedef struct sctp_cmsgs {$/;"	s
sctp_cmsgs_t	structs.h	/^} sctp_cmsgs_t;$/;"	t	typeref:struct:sctp_cmsgs
sctp_cname	debug.c	/^const char *sctp_cname(const sctp_subtype_t cid)$/;"	f
sctp_connect	socket.c	/^SCTP_STATIC int sctp_connect(struct sock *sk, struct sockaddr *addr,$/;"	f
sctp_cookie	structs.h	/^struct sctp_cookie {$/;"	s
sctp_cookie_preserve_enable	structs.h	254;"	d
sctp_copy_laddrs	socket.c	/^static int sctp_copy_laddrs(struct sock *sk, __u16 port, void *to,$/;"	f	file:
sctp_copy_laddrs_old	socket.c	/^static int sctp_copy_laddrs_old(struct sock *sk, __u16 port,$/;"	f	file:
sctp_copy_local_addr_list	protocol.c	/^int sctp_copy_local_addr_list(struct sctp_bind_addr *bp, sctp_scope_t scope,$/;"	f
sctp_copy_one_addr	bind_addr.c	/^static int sctp_copy_one_addr(struct sctp_bind_addr *dest,$/;"	f	file:
sctp_copy_sock	socket.c	/^void sctp_copy_sock(struct sock *newsk, struct sock *sk,$/;"	f
sctp_crc32c	checksum.h	/^static inline __u32 sctp_crc32c(__u32 crc, u8 *buffer, u16 length)$/;"	f
sctp_ctl_sock	protocol.c	/^static struct sock *sctp_ctl_sock;$/;"	v	typeref:struct:sock	file:
sctp_ctl_sock_init	protocol.c	/^static int sctp_ctl_sock_init(void)$/;"	f	file:
sctp_data_io_event	socket.c	/^	__u8 sctp_data_io_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_data_io_event	user.h	/^	__u8 sctp_data_io_event;$/;"	m	struct:sctp_event_subscribe
sctp_data_ready	socket.c	/^void sctp_data_ready(struct sock *sk, int len)$/;"	f
sctp_data_size	sm.h	/^static inline __u16 sctp_data_size(struct sctp_chunk *chunk)$/;"	f
sctp_datamsg	structs.h	/^struct sctp_datamsg {$/;"	s
sctp_datamsg_assign	chunk.c	/^static void sctp_datamsg_assign(struct sctp_datamsg *msg, struct sctp_chunk *chunk)$/;"	f	file:
sctp_datamsg_destroy	chunk.c	/^static void sctp_datamsg_destroy(struct sctp_datamsg *msg)$/;"	f	file:
sctp_datamsg_free	chunk.c	/^void sctp_datamsg_free(struct sctp_datamsg *msg)$/;"	f
sctp_datamsg_from_user	chunk.c	/^struct sctp_datamsg *sctp_datamsg_from_user(struct sctp_association *asoc,$/;"	f
sctp_datamsg_hold	chunk.c	/^static void sctp_datamsg_hold(struct sctp_datamsg *msg)$/;"	f	file:
sctp_datamsg_init	chunk.c	/^static void sctp_datamsg_init(struct sctp_datamsg *msg)$/;"	f	file:
sctp_datamsg_new	chunk.c	/^SCTP_STATIC struct sctp_datamsg *sctp_datamsg_new(gfp_t gfp)$/;"	f
sctp_datamsg_put	chunk.c	/^void sctp_datamsg_put(struct sctp_datamsg *msg)$/;"	f
sctp_dbg_objcnt	objcnt.c	/^static sctp_dbg_objcnt_entry_t sctp_dbg_objcnt[] = {$/;"	v	file:
sctp_dbg_objcnt_entry_t	structs.h	/^} sctp_dbg_objcnt_entry_t;$/;"	t	typeref:struct:__anon44
sctp_dbg_objcnt_exit	objcnt.c	/^void sctp_dbg_objcnt_exit(void)$/;"	f
sctp_dbg_objcnt_exit	sctp.h	/^static inline void sctp_dbg_objcnt_exit(struct net *net) { return; }$/;"	f
sctp_dbg_objcnt_init	objcnt.c	/^void sctp_dbg_objcnt_init(void)$/;"	f
sctp_dbg_objcnt_init	sctp.h	/^static inline void sctp_dbg_objcnt_init(struct net *net) { return; }$/;"	f
sctp_debug_flag	debug.c	/^int sctp_debug_flag = 1;	\/* Initially enable DEBUG *\/$/;"	v
sctp_del_bind_addr	bind_addr.c	/^int sctp_del_bind_addr(struct sctp_bind_addr *bp, union sctp_addr *del_addr)$/;"	f
sctp_destroy_sock	socket.c	/^SCTP_STATIC void sctp_destroy_sock(struct sock *sk)$/;"	f
sctp_disconnect	socket.c	/^SCTP_STATIC int sctp_disconnect(struct sock *sk, int flags)$/;"	f
sctp_disposition_t	sm.h	/^} sctp_disposition_t;$/;"	t	typeref:enum:__anon31
sctp_do_8_2_transport_strike	sm_sideeffect.c	/^static void sctp_do_8_2_transport_strike(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_do_bind	socket.c	/^SCTP_STATIC int sctp_do_bind(struct sock *sk, union sctp_addr *addr, int len)$/;"	f
sctp_do_ecn_ce_work	sm_sideeffect.c	/^static void sctp_do_ecn_ce_work(struct sctp_association *asoc,$/;"	f	file:
sctp_do_ecn_cwr_work	sm_sideeffect.c	/^static void sctp_do_ecn_cwr_work(struct sctp_association *asoc,$/;"	f	file:
sctp_do_ecn_ecne_work	sm_sideeffect.c	/^static struct sctp_chunk *sctp_do_ecn_ecne_work(struct sctp_association *asoc,$/;"	f	file:
sctp_do_peeloff	socket.c	/^SCTP_STATIC int sctp_do_peeloff(struct sctp_association *asoc,$/;"	f
sctp_do_sm	sm_sideeffect.c	/^int sctp_do_sm(sctp_event_t event_type, sctp_subtype_t subtype,$/;"	f
sctp_eat_data	sm_statefuns.c	/^static int sctp_eat_data(const struct sctp_association *asoc,$/;"	f	file:
sctp_end_cksum	checksum.h	/^static inline __le32 sctp_end_cksum(__be32 crc32)$/;"	f
sctp_endpoint	structs.h	/^struct sctp_endpoint {$/;"	s
sctp_endpoint_add_asoc	endpointola.c	/^void sctp_endpoint_add_asoc(struct sctp_endpoint *ep, struct sctp_association *asoc)$/;"	f
sctp_endpoint_bh_rcv	endpointola.c	/^static void sctp_endpoint_bh_rcv(struct work_struct *work)$/;"	f	file:
sctp_endpoint_destroy	endpointola.c	/^static void sctp_endpoint_destroy(struct sctp_endpoint *ep)$/;"	f	file:
sctp_endpoint_free	endpointola.c	/^void sctp_endpoint_free(struct sctp_endpoint *ep)$/;"	f
sctp_endpoint_hold	endpointola.c	/^void sctp_endpoint_hold(struct sctp_endpoint *ep)$/;"	f
sctp_endpoint_init	endpointola.c	/^static struct sctp_endpoint *sctp_endpoint_init(struct sctp_endpoint *ep,$/;"	f	file:
sctp_endpoint_is_match	endpointola.c	/^struct sctp_endpoint *sctp_endpoint_is_match(struct sctp_endpoint *ep,$/;"	f
sctp_endpoint_is_peeled_off	endpointola.c	/^int sctp_endpoint_is_peeled_off(struct sctp_endpoint *ep,$/;"	f
sctp_endpoint_lookup_assoc	endpointola.c	/^struct sctp_association *sctp_endpoint_lookup_assoc($/;"	f
sctp_endpoint_new	endpointola.c	/^struct sctp_endpoint *sctp_endpoint_new(struct sock *sk, gfp_t gfp)$/;"	f
sctp_endpoint_put	endpointola.c	/^void sctp_endpoint_put(struct sctp_endpoint *ep)$/;"	f
sctp_endpoint_type_t	structs.h	/^} sctp_endpoint_type_t;$/;"	t	typeref:enum:__anon41
sctp_enter_memory_pressure	socket.c	/^static void sctp_enter_memory_pressure(struct sock *sk)$/;"	f	file:
sctp_ep	structs.h	/^static inline struct sctp_endpoint *sctp_ep(struct sctp_ep_common *base)$/;"	f
sctp_ep_common	structs.h	/^struct sctp_ep_common {$/;"	s
sctp_ep_hashfn	sctp.h	/^static inline int sctp_ep_hashfn(struct net *net, __u16 lport)$/;"	f
sctp_ep_hashsize	structs.h	266;"	d
sctp_ep_hashtable	structs.h	267;"	d
sctp_eps_ops	proc.c	/^static const struct seq_operations sctp_eps_ops = {$/;"	v	typeref:struct:seq_operations	file:
sctp_eps_proc_exit	proc.c	/^void sctp_eps_proc_exit(void)$/;"	f
sctp_eps_proc_init	proc.c	/^int __init sctp_eps_proc_init(void)$/;"	f
sctp_eps_seq_fops	proc.c	/^static const struct file_operations sctp_eps_seq_fops = {$/;"	v	typeref:struct:file_operations	file:
sctp_eps_seq_next	proc.c	/^static void * sctp_eps_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
sctp_eps_seq_open	proc.c	/^static int sctp_eps_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
sctp_eps_seq_show	proc.c	/^static int sctp_eps_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
sctp_eps_seq_start	proc.c	/^static void * sctp_eps_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
sctp_eps_seq_stop	proc.c	/^static void sctp_eps_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
sctp_err_finish	input.c	/^void sctp_err_finish(struct sock *sk, struct sctp_association *asoc)$/;"	f
sctp_err_lookup	input.c	/^struct sock *sctp_err_lookup(int family, struct sk_buff *skb,$/;"	f
sctp_error	socket.c	/^static int sctp_error(struct sock *sk, int flags, int err)$/;"	f	file:
sctp_event2skb	ulpevent.h	/^static inline struct sk_buff *sctp_event2skb(const struct sctp_ulpevent *ev)$/;"	f
sctp_event_other_t	constants.h	/^} sctp_event_other_t;$/;"	t	typeref:enum:__anon10
sctp_event_primitive_t	constants.h	/^} sctp_event_primitive_t;$/;"	t	typeref:enum:__anon11
sctp_event_subscribe	user.h	/^struct sctp_event_subscribe {$/;"	s
sctp_event_subscribe_rhel6_kabi	socket.c	/^struct sctp_event_subscribe_rhel6_kabi {$/;"	s	file:
sctp_event_t	constants.h	/^} sctp_event_t;$/;"	t	typeref:enum:__anon8
sctp_event_timeout_t	constants.h	/^} sctp_event_timeout_t;$/;"	t	typeref:enum:__anon9
sctp_evttype_tbl	debug.c	/^const char *const sctp_evttype_tbl[] = {$/;"	v
sctp_exit	protocol.c	/^SCTP_STATIC __exit void sctp_exit(void)$/;"	f
sctp_exit	protocol.c	/^module_exit(sctp_exit);$/;"	v
sctp_find_unmatch_addr	bind_addr.c	/^union sctp_addr *sctp_find_unmatch_addr(struct sctp_bind_addr	*bp,$/;"	f
sctp_for_each_hentry	sctp.h	681;"	d
sctp_frag_point	sctp.h	/^static inline int sctp_frag_point(const struct sctp_association *asoc, int pmtu)$/;"	f
sctp_free_local_addr_list	protocol.c	/^static void sctp_free_local_addr_list(void)$/;"	f	file:
sctp_gen_sack	sm_sideeffect.c	/^static int sctp_gen_sack(struct sctp_association *asoc, int force,$/;"	f	file:
sctp_generate_autoclose_event	sm_sideeffect.c	/^static void sctp_generate_autoclose_event(unsigned long data)$/;"	f	file:
sctp_generate_fwdtsn	outqueue.c	/^static void sctp_generate_fwdtsn(struct sctp_outq *q, __u32 ctsn)$/;"	f	file:
sctp_generate_heartbeat_event	sm_sideeffect.c	/^void sctp_generate_heartbeat_event(unsigned long data)$/;"	f
sctp_generate_proto_unreach_event	sm_sideeffect.c	/^void sctp_generate_proto_unreach_event(unsigned long data)$/;"	f
sctp_generate_sack_event	sm_sideeffect.c	/^static void sctp_generate_sack_event(unsigned long data)$/;"	f	file:
sctp_generate_t1_cookie_event	sm_sideeffect.c	/^static void sctp_generate_t1_cookie_event(unsigned long data)$/;"	f	file:
sctp_generate_t1_init_event	sm_sideeffect.c	/^static void sctp_generate_t1_init_event(unsigned long data)$/;"	f	file:
sctp_generate_t2_shutdown_event	sm_sideeffect.c	/^static void sctp_generate_t2_shutdown_event(unsigned long data)$/;"	f	file:
sctp_generate_t3_rtx_event	sm_sideeffect.c	/^void sctp_generate_t3_rtx_event(unsigned long peer)$/;"	f
sctp_generate_t4_rto_event	sm_sideeffect.c	/^static void sctp_generate_t4_rto_event(unsigned long data)$/;"	f	file:
sctp_generate_t5_shutdown_guard_event	sm_sideeffect.c	/^static void sctp_generate_t5_shutdown_guard_event(unsigned long data)$/;"	f	file:
sctp_generate_tag	sm_make_chunk.c	/^__u32 sctp_generate_tag(const struct sctp_endpoint *ep)$/;"	f
sctp_generate_timeout_event	sm_sideeffect.c	/^static void sctp_generate_timeout_event(struct sctp_association *asoc,$/;"	f	file:
sctp_generate_tsn	sm_make_chunk.c	/^__u32 sctp_generate_tsn(const struct sctp_endpoint *ep)$/;"	f
sctp_get_af_specific	protocol.c	/^struct sctp_af *sctp_get_af_specific(sa_family_t family)$/;"	f
sctp_get_asconf_response	sm_make_chunk.c	/^static __be16 sctp_get_asconf_response(struct sctp_chunk *asconf_ack,$/;"	f	file:
sctp_get_ctl_sock	protocol.c	/^struct sock *sctp_get_ctl_sock(void)$/;"	f
sctp_get_ecne_prepend	associola.c	/^struct sctp_chunk *sctp_get_ecne_prepend(struct sctp_association *asoc)$/;"	f
sctp_get_local_addr_list	protocol.c	/^static void sctp_get_local_addr_list(void)$/;"	f	file:
sctp_get_pf_specific	protocol.c	/^struct sctp_pf *sctp_get_pf_specific(sa_family_t family) {$/;"	f
sctp_get_port	socket.c	/^static int sctp_get_port(struct sock *sk, unsigned short snum)$/;"	f	file:
sctp_get_port_local	socket.c	/^static long sctp_get_port_local(struct sock *sk, union sctp_addr *addr)$/;"	f	file:
sctp_get_skip_pos	outqueue.c	/^static inline int sctp_get_skip_pos(struct sctp_fwdtsn_skip *skiplist,$/;"	f	file:
sctp_getaddrs	user.h	/^struct sctp_getaddrs {$/;"	s
sctp_getaddrs_old	user.h	/^struct sctp_getaddrs_old {$/;"	s
sctp_getsockopt	socket.c	/^SCTP_STATIC int sctp_getsockopt(struct sock *sk, int level, int optname,$/;"	f
sctp_getsockopt_active_key	socket.c	/^static int sctp_getsockopt_active_key(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_adaptation_layer	socket.c	/^static int sctp_getsockopt_adaptation_layer(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_assoc_ids	socket.c	/^static int sctp_getsockopt_assoc_ids(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_assoc_number	socket.c	/^static int sctp_getsockopt_assoc_number(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_associnfo	socket.c	/^static int sctp_getsockopt_associnfo(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_autoclose	socket.c	/^static int sctp_getsockopt_autoclose(struct sock *sk, int len, char __user *optval, int __user *optlen)$/;"	f	file:
sctp_getsockopt_connectx3	socket.c	/^SCTP_STATIC int sctp_getsockopt_connectx3(struct sock* sk, int len,$/;"	f
sctp_getsockopt_context	socket.c	/^static int sctp_getsockopt_context(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_default_send_param	socket.c	/^static int sctp_getsockopt_default_send_param(struct sock *sk,$/;"	f	file:
sctp_getsockopt_delayed_ack	socket.c	/^static int sctp_getsockopt_delayed_ack(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_disable_fragments	socket.c	/^static int sctp_getsockopt_disable_fragments(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_events	socket.c	/^static int sctp_getsockopt_events(struct sock *sk, int len, char __user *optval,$/;"	f	file:
sctp_getsockopt_fragment_interleave	socket.c	/^static int sctp_getsockopt_fragment_interleave(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_get_assoc	socket.c	/^static int sctp_getsockopt_get_assoc(struct sock *sk, int len, char __user *optval, int __user *optlen)$/;"	f	file:
sctp_getsockopt_hmac_ident	socket.c	/^static int sctp_getsockopt_hmac_ident(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_initmsg	socket.c	/^static int sctp_getsockopt_initmsg(struct sock *sk, int len, char __user *optval, int __user *optlen)$/;"	f	file:
sctp_getsockopt_local_addrs	socket.c	/^static int sctp_getsockopt_local_addrs(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_local_addrs_num_old	socket.c	/^static int sctp_getsockopt_local_addrs_num_old(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_local_addrs_old	socket.c	/^static int sctp_getsockopt_local_addrs_old(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_local_auth_chunks	socket.c	/^static int sctp_getsockopt_local_auth_chunks(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_mappedv4	socket.c	/^static int sctp_getsockopt_mappedv4(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_maxburst	socket.c	/^static int sctp_getsockopt_maxburst(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_maxseg	socket.c	/^static int sctp_getsockopt_maxseg(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_nodelay	socket.c	/^static int sctp_getsockopt_nodelay(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_paddr_thresholds	socket.c	/^static int sctp_getsockopt_paddr_thresholds(struct sock *sk,$/;"	f	file:
sctp_getsockopt_partial_delivery_point	socket.c	/^static int sctp_getsockopt_partial_delivery_point(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peeloff	socket.c	/^static int sctp_getsockopt_peeloff(struct sock *sk, int len, char __user *optval, int __user *optlen)$/;"	f	file:
sctp_getsockopt_peer_addr_info	socket.c	/^static int sctp_getsockopt_peer_addr_info(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peer_addr_params	socket.c	/^static int sctp_getsockopt_peer_addr_params(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peer_addrs	socket.c	/^static int sctp_getsockopt_peer_addrs(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peer_addrs_num_old	socket.c	/^static int sctp_getsockopt_peer_addrs_num_old(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peer_addrs_old	socket.c	/^static int sctp_getsockopt_peer_addrs_old(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_peer_auth_chunks	socket.c	/^static int sctp_getsockopt_peer_auth_chunks(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_primary_addr	socket.c	/^static int sctp_getsockopt_primary_addr(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_rtoinfo	socket.c	/^static int sctp_getsockopt_rtoinfo(struct sock *sk, int len,$/;"	f	file:
sctp_getsockopt_sctp_status	socket.c	/^static int sctp_getsockopt_sctp_status(struct sock *sk, int len,$/;"	f	file:
sctp_globals	structs.h	/^extern struct sctp_globals {$/;"	s
sctp_ha-y	Makefile	/^sctp_ha-y := sm_statetable.o sm_statefuns.o sm_sideeffect.o \\$/;"	m
sctp_has_association	input.c	/^int sctp_has_association(const union sctp_addr *laddr,$/;"	f
sctp_hash	socket.c	/^static void sctp_hash(struct sock *sk)$/;"	f	file:
sctp_hash_endpoint	input.c	/^void sctp_hash_endpoint(struct sctp_endpoint *ep)$/;"	f
sctp_hash_established	input.c	/^void sctp_hash_established(struct sctp_association *asoc)$/;"	f
sctp_hashbucket	structs.h	/^struct sctp_hashbucket {$/;"	s
sctp_hb_interval	structs.h	262;"	d
sctp_hdr	structs.h	/^	struct sctphdr *sctp_hdr;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctphdr
sctp_hmac	auth.h	/^struct sctp_hmac {$/;"	s
sctp_hmac_alg	socket.c	/^static char *sctp_hmac_alg = SCTP_COOKIE_HMAC_ALG;$/;"	v	file:
sctp_hmac_list	auth.c	/^static struct sctp_hmac sctp_hmac_list[SCTP_AUTH_NUM_HMACS] = {$/;"	v	typeref:struct:sctp_hmac	file:
sctp_hmacalgo	user.h	/^struct sctp_hmacalgo {$/;"	s
sctp_icmp_frag_needed	input.c	/^void sctp_icmp_frag_needed(struct sock *sk, struct sctp_association *asoc,$/;"	f
sctp_icmp_proto_unreachable	input.c	/^void sctp_icmp_proto_unreachable(struct sock *sk,$/;"	f
sctp_id2assoc	socket.c	/^struct sctp_association *sctp_id2assoc(struct sock *sk, sctp_assoc_t id)$/;"	f
sctp_ierror_t	constants.h	/^} sctp_ierror_t;$/;"	t	typeref:enum:__anon13
sctp_in_scope	bind_addr.c	/^int sctp_in_scope(const union sctp_addr *addr, sctp_scope_t scope)$/;"	f
sctp_inet6_af_supported	ipv6.c	/^static int sctp_inet6_af_supported(sa_family_t family, struct sctp_sock *sp)$/;"	f	file:
sctp_inet6_bind_verify	ipv6.c	/^static int sctp_inet6_bind_verify(struct sctp_sock *opt, union sctp_addr *addr)$/;"	f	file:
sctp_inet6_cmp_addr	ipv6.c	/^static int sctp_inet6_cmp_addr(const union sctp_addr *addr1,$/;"	f	file:
sctp_inet6_event_msgname	ipv6.c	/^static void sctp_inet6_event_msgname(struct sctp_ulpevent *event,$/;"	f	file:
sctp_inet6_msgname	ipv6.c	/^static void sctp_inet6_msgname(char *msgname, int *addr_len)$/;"	f	file:
sctp_inet6_send_verify	ipv6.c	/^static int sctp_inet6_send_verify(struct sctp_sock *opt, union sctp_addr *addr)$/;"	f	file:
sctp_inet6_skb_msgname	ipv6.c	/^static void sctp_inet6_skb_msgname(struct sk_buff *skb, char *msgname,$/;"	f	file:
sctp_inet6_supported_addrs	ipv6.c	/^static int sctp_inet6_supported_addrs(const struct sctp_sock *opt,$/;"	f	file:
sctp_inet6addr_event	ipv6.c	/^static int sctp_inet6addr_event(struct notifier_block *this, unsigned long ev,$/;"	f	file:
sctp_inet6addr_notifier	ipv6.c	/^static struct notifier_block sctp_inet6addr_notifier = {$/;"	v	typeref:struct:notifier_block	file:
sctp_inet_af_supported	protocol.c	/^static int sctp_inet_af_supported(sa_family_t family, struct sctp_sock *sp)$/;"	f	file:
sctp_inet_bind_verify	protocol.c	/^static int sctp_inet_bind_verify(struct sctp_sock *opt, union sctp_addr *addr)$/;"	f	file:
sctp_inet_cmp_addr	protocol.c	/^static int sctp_inet_cmp_addr(const union sctp_addr *addr1,$/;"	f	file:
sctp_inet_event_msgname	protocol.c	/^static void sctp_inet_event_msgname(struct sctp_ulpevent *event, char *msgname,$/;"	f	file:
sctp_inet_listen	socket.c	/^int sctp_inet_listen(struct socket *sock, int backlog)$/;"	f
sctp_inet_msgname	protocol.c	/^static void sctp_inet_msgname(char *msgname, int *addr_len)$/;"	f	file:
sctp_inet_send_verify	protocol.c	/^static int sctp_inet_send_verify(struct sctp_sock *opt, union sctp_addr *addr)$/;"	f	file:
sctp_inet_skb_msgname	protocol.c	/^static void sctp_inet_skb_msgname(struct sk_buff *skb, char *msgname, int *len)$/;"	f	file:
sctp_inet_supported_addrs	protocol.c	/^static int sctp_inet_supported_addrs(const struct sctp_sock *opt,$/;"	f	file:
sctp_inetaddr_event	protocol.c	/^static int sctp_inetaddr_event(struct notifier_block *this, unsigned long ev,$/;"	f	file:
sctp_inetaddr_notifier	protocol.c	/^static struct notifier_block sctp_inetaddr_notifier = {$/;"	v	typeref:struct:notifier_block	file:
sctp_init	protocol.c	/^SCTP_STATIC __init int sctp_init(void)$/;"	f
sctp_init	protocol.c	/^module_init(sctp_init);$/;"	v
sctp_init_addrs	sm_make_chunk.c	/^void sctp_init_addrs(struct sctp_chunk *chunk, union sctp_addr *src,$/;"	f
sctp_init_cause	sm_make_chunk.c	/^void  sctp_init_cause(struct sctp_chunk *chunk, __be16 cause_code,$/;"	f
sctp_init_cause_fixed	sm_make_chunk.c	/^int sctp_init_cause_fixed(struct sctp_chunk *chunk, __be16 cause_code,$/;"	f
sctp_init_cmd_seq	command.c	/^int sctp_init_cmd_seq(sctp_cmd_seq_t *seq)$/;"	f
sctp_init_sock	socket.c	/^SCTP_STATIC int sctp_init_sock(struct sock *sk)$/;"	f
sctp_inithdr_host	structs.h	/^struct sctp_inithdr_host {$/;"	s
sctp_initmsg	user.h	/^struct sctp_initmsg {$/;"	s
sctp_input_cb	input.c	/^struct sctp_input_cb {$/;"	s	file:
sctp_inq	structs.h	/^struct sctp_inq {$/;"	s
sctp_inq_free	inqueue.c	/^void sctp_inq_free(struct sctp_inq *queue)$/;"	f
sctp_inq_init	inqueue.c	/^void sctp_inq_init(struct sctp_inq *queue)$/;"	f
sctp_inq_peek	inqueue.c	/^struct sctp_chunkhdr *sctp_inq_peek(struct sctp_inq *queue)$/;"	f
sctp_inq_pop	inqueue.c	/^struct sctp_chunk *sctp_inq_pop(struct sctp_inq *queue)$/;"	f
sctp_inq_push	inqueue.c	/^void sctp_inq_push(struct sctp_inq *q, struct sctp_chunk *chunk)$/;"	f
sctp_inq_set_th_handler	inqueue.c	/^void sctp_inq_set_th_handler(struct sctp_inq *q, work_func_t callback)$/;"	f
sctp_insert_list	outqueue.c	/^static void sctp_insert_list(struct list_head *head, struct list_head *new)$/;"	f	file:
sctp_ioctl	socket.c	/^SCTP_STATIC int sctp_ioctl(struct sock *sk, int cmd, unsigned long arg)$/;"	f
sctp_is_any	bind_addr.c	/^int sctp_is_any(struct sock *sk, const union sctp_addr *addr)$/;"	f
sctp_jitter	sctp.h	/^static inline __s32 sctp_jitter(__u32 rto)$/;"	f
sctp_list_dequeue	sctp.h	/^static inline struct list_head *sctp_list_dequeue(struct list_head *list)$/;"	f
sctp_list_single_entry	sctp.h	/^static inline int sctp_list_single_entry(struct list_head *head)$/;"	f
sctp_listen_start	socket.c	/^SCTP_STATIC int sctp_listen_start(struct sock *sk, int backlog)$/;"	f
sctp_local_addr_free	protocol.c	/^void sctp_local_addr_free(struct rcu_head *head)$/;"	f
sctp_local_addr_list	structs.h	274;"	d
sctp_local_addr_lock	structs.h	275;"	d
sctp_local_bh_disable	sctp.h	211;"	d
sctp_local_bh_enable	sctp.h	212;"	d
sctp_lock_sock	sctp.h	221;"	d
sctp_lookup_association	input.c	/^struct sctp_association *sctp_lookup_association(const union sctp_addr *laddr,$/;"	f
sctp_lower_cwnd_t	constants.h	/^} sctp_lower_cwnd_t;$/;"	t	typeref:enum:__anon26
sctp_make_abort	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_abort(const struct sctp_association *asoc,$/;"	f
sctp_make_abort_no_data	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_abort_no_data($/;"	f
sctp_make_abort_user	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_abort_user(const struct sctp_association *asoc,$/;"	f
sctp_make_abort_violation	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_abort_violation($/;"	f
sctp_make_asconf	sm_make_chunk.c	/^static struct sctp_chunk *sctp_make_asconf(struct sctp_association *asoc,$/;"	f	file:
sctp_make_asconf_ack	sm_make_chunk.c	/^static struct sctp_chunk *sctp_make_asconf_ack(const struct sctp_association *asoc,$/;"	f	file:
sctp_make_asconf_set_prim	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_asconf_set_prim(struct sctp_association *asoc,$/;"	f
sctp_make_asconf_update_ip	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_asconf_update_ip(struct sctp_association *asoc,$/;"	f
sctp_make_auth	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_auth(const struct sctp_association *asoc)$/;"	f
sctp_make_chunk	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_chunk(const struct sctp_association *asoc,$/;"	f
sctp_make_cookie_ack	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_cookie_ack(const struct sctp_association *asoc,$/;"	f
sctp_make_cookie_echo	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_cookie_echo(const struct sctp_association *asoc,$/;"	f
sctp_make_cwr	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_cwr(const struct sctp_association *asoc,$/;"	f
sctp_make_datafrag_empty	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_datafrag_empty(struct sctp_association *asoc,$/;"	f
sctp_make_ecne	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_ecne(const struct sctp_association *asoc,$/;"	f
sctp_make_fwdtsn	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_fwdtsn(const struct sctp_association *asoc,$/;"	f
sctp_make_heartbeat	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_heartbeat(const struct sctp_association *asoc,$/;"	f
sctp_make_heartbeat_ack	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_heartbeat_ack(const struct sctp_association *asoc,$/;"	f
sctp_make_init	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_init(const struct sctp_association *asoc,$/;"	f
sctp_make_init_ack	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_init_ack(const struct sctp_association *asoc,$/;"	f
sctp_make_op_error	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_op_error(const struct sctp_association *asoc,$/;"	f
sctp_make_op_error_fixed	sm_make_chunk.c	/^static inline struct sctp_chunk *sctp_make_op_error_fixed($/;"	f	file:
sctp_make_op_error_space	sm_make_chunk.c	/^static struct sctp_chunk *sctp_make_op_error_space($/;"	f	file:
sctp_make_reassembled_event	ulpqueue.c	/^static struct sctp_ulpevent *sctp_make_reassembled_event(struct sk_buff_head *queue, struct sk_buff *f_frag, struct sk_buff *l_frag)$/;"	f	file:
sctp_make_sack	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_sack(const struct sctp_association *asoc)$/;"	f
sctp_make_shutdown	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_shutdown(const struct sctp_association *asoc,$/;"	f
sctp_make_shutdown_ack	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_shutdown_ack(const struct sctp_association *asoc,$/;"	f
sctp_make_shutdown_complete	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_shutdown_complete($/;"	f
sctp_make_temp_asoc	sm_make_chunk.c	/^struct sctp_association *sctp_make_temp_asoc(const struct sctp_endpoint *ep,$/;"	f
sctp_make_violation_max_retrans	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_violation_max_retrans($/;"	f
sctp_make_violation_paramlen	sm_make_chunk.c	/^struct sctp_chunk *sctp_make_violation_paramlen($/;"	f
sctp_mark_missing	outqueue.c	/^static void sctp_mark_missing(struct sctp_outq *q,$/;"	f	file:
sctp_max_burst	structs.h	252;"	d
sctp_max_instreams	structs.h	263;"	d
sctp_max_outstreams	structs.h	264;"	d
sctp_max_retrans_association	structs.h	255;"	d
sctp_max_retrans_init	structs.h	260;"	d
sctp_max_retrans_path	structs.h	258;"	d
sctp_max_rto	sctp.h	/^static inline void sctp_max_rto(struct sctp_association *asoc,$/;"	f
sctp_memory_allocated	socket.c	/^static atomic_t sctp_memory_allocated;$/;"	v	file:
sctp_memory_pressure	socket.c	/^static int sctp_memory_pressure;$/;"	v	file:
sctp_mib	sctp.h	/^struct sctp_mib {$/;"	s
sctp_msg_flags	user.h	/^enum sctp_msg_flags {$/;"	g
sctp_msghdr_parse	socket.c	/^SCTP_STATIC int sctp_msghdr_parse(const struct msghdr *msg,$/;"	f
sctp_next_cmd	command.c	/^sctp_cmd_t *sctp_next_cmd(sctp_cmd_seq_t *seq)$/;"	f
sctp_notification	user.h	/^union sctp_notification {$/;"	u
sctp_objcnt_ops	objcnt.c	/^static const struct file_operations sctp_objcnt_ops = {$/;"	v	typeref:struct:file_operations	file:
sctp_objcnt_seq_next	objcnt.c	/^static void * sctp_objcnt_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
sctp_objcnt_seq_open	objcnt.c	/^static int sctp_objcnt_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
sctp_objcnt_seq_ops	objcnt.c	/^static const struct seq_operations sctp_objcnt_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
sctp_objcnt_seq_show	objcnt.c	/^static int sctp_objcnt_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
sctp_objcnt_seq_start	objcnt.c	/^static void *sctp_objcnt_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
sctp_objcnt_seq_stop	objcnt.c	/^static void sctp_objcnt_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
sctp_oname	debug.c	/^const char *sctp_oname(const sctp_subtype_t id)$/;"	f
sctp_ootb_pkt_free	sm_statefuns.c	/^void sctp_ootb_pkt_free(struct sctp_packet *packet)$/;"	f
sctp_ootb_pkt_new	sm_statefuns.c	/^static struct sctp_packet *sctp_ootb_pkt_new(const struct sctp_association *asoc,$/;"	f	file:
sctp_opt2sk	structs.h	/^static inline struct sock *sctp_opt2sk(const struct sctp_sock *sp)$/;"	f
sctp_optname	user.h	/^enum sctp_optname {$/;"	g
sctp_other_tbl	debug.c	/^static const char *const sctp_other_tbl[] = {$/;"	v	file:
sctp_outq	structs.h	/^struct sctp_outq {$/;"	s
sctp_outq_cork	structs.h	/^static inline void sctp_outq_cork(struct sctp_outq *q)$/;"	f
sctp_outq_dequeue_data	outqueue.c	/^static inline struct sctp_chunk *sctp_outq_dequeue_data(struct sctp_outq *q)$/;"	f	file:
sctp_outq_flush	outqueue.c	/^static int sctp_outq_flush(struct sctp_outq *q, int rtx_timeout)$/;"	f	file:
sctp_outq_flush_rtx	outqueue.c	/^static int sctp_outq_flush_rtx(struct sctp_outq *q, struct sctp_packet *pkt,$/;"	f	file:
sctp_outq_free	outqueue.c	/^void sctp_outq_free(struct sctp_outq *q)$/;"	f
sctp_outq_head_data	outqueue.c	/^static inline void sctp_outq_head_data(struct sctp_outq *q,$/;"	f	file:
sctp_outq_init	outqueue.c	/^void sctp_outq_init(struct sctp_association *asoc, struct sctp_outq *q)$/;"	f
sctp_outq_is_empty	outqueue.c	/^int sctp_outq_is_empty(const struct sctp_outq *q)$/;"	f
sctp_outq_sack	outqueue.c	/^int sctp_outq_sack(struct sctp_outq *q, struct sctp_sackhdr *sack)$/;"	f
sctp_outq_tail	outqueue.c	/^int sctp_outq_tail(struct sctp_outq *q, struct sctp_chunk *chunk)$/;"	f
sctp_outq_tail_data	outqueue.c	/^static inline void sctp_outq_tail_data(struct sctp_outq *q,$/;"	f	file:
sctp_outq_teardown	outqueue.c	/^void sctp_outq_teardown(struct sctp_outq *q)$/;"	f
sctp_outq_uncork	outqueue.c	/^int sctp_outq_uncork(struct sctp_outq *q)$/;"	f
sctp_pack_cookie	sm_make_chunk.c	/^static sctp_cookie_param_t *sctp_pack_cookie(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_packet	structs.h	/^struct sctp_packet {$/;"	s
sctp_packet_append_chunk	output.c	/^sctp_xmit_t sctp_packet_append_chunk(struct sctp_packet *packet,$/;"	f
sctp_packet_append_data	output.c	/^static void sctp_packet_append_data(struct sctp_packet *packet,$/;"	f	file:
sctp_packet_bundle_auth	output.c	/^static sctp_xmit_t sctp_packet_bundle_auth(struct sctp_packet *pkt,$/;"	f	file:
sctp_packet_bundle_sack	output.c	/^static sctp_xmit_t sctp_packet_bundle_sack(struct sctp_packet *pkt,$/;"	f	file:
sctp_packet_can_append_data	output.c	/^static sctp_xmit_t sctp_packet_can_append_data(struct sctp_packet *packet,$/;"	f	file:
sctp_packet_config	output.c	/^struct sctp_packet *sctp_packet_config(struct sctp_packet *packet,$/;"	f
sctp_packet_empty	structs.h	/^static inline int sctp_packet_empty(struct sctp_packet *packet)$/;"	f
sctp_packet_free	output.c	/^void sctp_packet_free(struct sctp_packet *packet)$/;"	f
sctp_packet_init	output.c	/^struct sctp_packet *sctp_packet_init(struct sctp_packet *packet,$/;"	f
sctp_packet_phandler_t	structs.h	/^typedef struct sctp_chunk *(sctp_packet_phandler_t)(struct sctp_association *);$/;"	t	typeref:struct:sctp_packet_phandler_t
sctp_packet_release_owner	output.c	/^static void sctp_packet_release_owner(struct sk_buff *skb)$/;"	f	file:
sctp_packet_reset	output.c	/^static void sctp_packet_reset(struct sctp_packet *packet)$/;"	f	file:
sctp_packet_set_owner_w	output.c	/^static void sctp_packet_set_owner_w(struct sk_buff *skb, struct sock *sk)$/;"	f	file:
sctp_packet_transmit	output.c	/^int sctp_packet_transmit(struct sctp_packet *packet)$/;"	f
sctp_packet_transmit_chunk	output.c	/^sctp_xmit_t sctp_packet_transmit_chunk(struct sctp_packet *packet,$/;"	f
sctp_packet_will_fit	output.c	/^static sctp_xmit_t sctp_packet_will_fit(struct sctp_packet *packet,$/;"	f	file:
sctp_paddr_change	user.h	/^struct sctp_paddr_change {$/;"	s
sctp_paddrinfo	user.h	/^struct sctp_paddrinfo {$/;"	s
sctp_paddrparams	user.h	/^struct sctp_paddrparams {$/;"	s
sctp_paddrthlds	user.h	/^struct sctp_paddrthlds {$/;"	s
sctp_params	structs.h	/^union sctp_params {$/;"	u
sctp_partial_delivery_event	socket.c	/^	__u8 sctp_partial_delivery_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_partial_delivery_event	user.h	/^	__u8 sctp_partial_delivery_event;$/;"	m	struct:sctp_event_subscribe
sctp_path	sysctl.c	/^static struct ctl_path sctp_path[] = {$/;"	v	typeref:struct:ctl_path	file:
sctp_pdapi_event	user.h	/^struct sctp_pdapi_event {$/;"	s
sctp_peeloff_arg_t	user.h	/^} sctp_peeloff_arg_t;$/;"	t	typeref:struct:__anon48
sctp_peer_error_event	socket.c	/^	__u8 sctp_peer_error_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_peer_error_event	user.h	/^	__u8 sctp_peer_error_event;$/;"	m	struct:sctp_event_subscribe
sctp_peer_needs_update	associola.c	/^static inline int sctp_peer_needs_update(struct sctp_association *asoc)$/;"	f	file:
sctp_pf	structs.h	/^struct sctp_pf {$/;"	s
sctp_pf_inet	protocol.c	/^static struct sctp_pf sctp_pf_inet = {$/;"	v	typeref:struct:sctp_pf	file:
sctp_pf_inet6	ipv6.c	/^static struct sctp_pf sctp_pf_inet6 = {$/;"	v	typeref:struct:sctp_pf	file:
sctp_pf_inet6_specific	protocol.c	/^static struct sctp_pf *sctp_pf_inet6_specific;$/;"	v	typeref:struct:sctp_pf	file:
sctp_pf_inet_specific	protocol.c	/^static struct sctp_pf *sctp_pf_inet_specific;$/;"	v	typeref:struct:sctp_pf	file:
sctp_pf_retrans	structs.h	259;"	d
sctp_phashfn	sctp.h	/^static inline int sctp_phashfn(struct net *net, __u16 lport)$/;"	f
sctp_pname	debug.c	/^const char *sctp_pname(const sctp_subtype_t id)$/;"	f
sctp_poll	socket.c	/^unsigned int sctp_poll(struct file *file, struct socket *sock, poll_table *wait)$/;"	f
sctp_port_alloc_lock	structs.h	272;"	d
sctp_port_hashsize	structs.h	270;"	d
sctp_port_hashtable	structs.h	273;"	d
sctp_port_rover	structs.h	271;"	d
sctp_prim	user.h	/^struct sctp_prim {$/;"	s
sctp_primitive_tbl	debug.c	/^static const char *const sctp_primitive_tbl[SCTP_NUM_PRIMITIVE_TYPES] = {$/;"	v	file:
sctp_proc_exit	protocol.c	/^static void sctp_proc_exit(void)$/;"	f	file:
sctp_proc_init	protocol.c	/^static __init int sctp_proc_init(void)$/;"	f	file:
sctp_process_asconf	sm_make_chunk.c	/^struct sctp_chunk *sctp_process_asconf(struct sctp_association *asoc,$/;"	f
sctp_process_asconf_ack	sm_make_chunk.c	/^int sctp_process_asconf_ack(struct sctp_association *asoc,$/;"	f
sctp_process_asconf_param	sm_make_chunk.c	/^static __be16 sctp_process_asconf_param(struct sctp_association *asoc,$/;"	f	file:
sctp_process_ext_param	sm_make_chunk.c	/^static void sctp_process_ext_param(struct sctp_association *asoc,$/;"	f	file:
sctp_process_hn_param	sm_make_chunk.c	/^static int sctp_process_hn_param(const struct sctp_association *asoc,$/;"	f	file:
sctp_process_init	sm_make_chunk.c	/^int sctp_process_init(struct sctp_association *asoc, struct sctp_chunk *chunk,$/;"	f
sctp_process_inv_mandatory	sm_make_chunk.c	/^static int sctp_process_inv_mandatory(const struct sctp_association *asoc,$/;"	f	file:
sctp_process_inv_paramlength	sm_make_chunk.c	/^static int sctp_process_inv_paramlength(const struct sctp_association *asoc,$/;"	f	file:
sctp_process_missing_param	sm_make_chunk.c	/^static int sctp_process_missing_param(const struct sctp_association *asoc,$/;"	f	file:
sctp_process_param	sm_make_chunk.c	/^static int sctp_process_param(struct sctp_association *asoc,$/;"	f	file:
sctp_process_unk_param	sm_make_chunk.c	/^static sctp_ierror_t sctp_process_unk_param(const struct sctp_association *asoc,$/;"	f	file:
sctp_prot	socket.c	/^struct proto sctp_prot = {$/;"	v	typeref:struct:proto
sctp_protocol	protocol.c	/^static const struct net_protocol sctp_protocol = {$/;"	v	typeref:struct:net_protocol	file:
sctp_prsctp_enable	structs.h	279;"	d
sctp_put_port	socket.c	/^void sctp_put_port(struct sock *sk)$/;"	f
sctp_queue_purge_ulpevents	ulpevent.c	/^unsigned int sctp_queue_purge_ulpevents(struct sk_buff_head *list)$/;"	f
sctp_raw_to_bind_addrs	bind_addr.c	/^int sctp_raw_to_bind_addrs(struct sctp_bind_addr *bp, __u8 *raw_addr_list,$/;"	f
sctp_rcv	input.c	/^int sctp_rcv(struct sk_buff *skb)$/;"	f
sctp_rcv_checksum	input.c	/^static inline int sctp_rcv_checksum(struct sk_buff *skb)$/;"	f	file:
sctp_rcv_ootb	input.c	/^static int sctp_rcv_ootb(struct sk_buff *skb)$/;"	f	file:
sctp_rcvbuf_policy	structs.h	257;"	d
sctp_read_lock	sctp.h	217;"	d
sctp_read_unlock	sctp.h	218;"	d
sctp_recv_probe	probe.c	/^static struct jprobe sctp_recv_probe = {$/;"	v	typeref:struct:jprobe	file:
sctp_recvmsg	socket.c	/^SCTP_STATIC int sctp_recvmsg(struct kiocb *iocb, struct sock *sk,$/;"	f
sctp_register_af	protocol.c	/^int sctp_register_af(struct sctp_af *af)$/;"	f
sctp_register_pf	protocol.c	/^int sctp_register_pf(struct sctp_pf *pf, sa_family_t family)$/;"	f
sctp_release_sock	sctp.h	222;"	d
sctp_remaddr_ops	proc.c	/^static const struct seq_operations sctp_remaddr_ops = {$/;"	v	typeref:struct:seq_operations	file:
sctp_remaddr_proc_exit	proc.c	/^void sctp_remaddr_proc_exit(void)$/;"	f
sctp_remaddr_proc_init	proc.c	/^int __init sctp_remaddr_proc_init(void)$/;"	f
sctp_remaddr_seq_fops	proc.c	/^static const struct file_operations sctp_remaddr_seq_fops = {$/;"	v	typeref:struct:file_operations	file:
sctp_remaddr_seq_next	proc.c	/^static void *sctp_remaddr_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
sctp_remaddr_seq_open	proc.c	/^static int sctp_remaddr_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
sctp_remaddr_seq_show	proc.c	/^static int sctp_remaddr_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
sctp_remaddr_seq_start	proc.c	/^static void *sctp_remaddr_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
sctp_remaddr_seq_stop	proc.c	/^static void sctp_remaddr_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
sctp_remote_error	user.h	/^struct sctp_remote_error {$/;"	s
sctp_retransmit	outqueue.c	/^void sctp_retransmit(struct sctp_outq *q, struct sctp_transport *transport,$/;"	f
sctp_retransmit_mark	outqueue.c	/^void sctp_retransmit_mark(struct sctp_outq *q,$/;"	f
sctp_retransmit_reason_t	constants.h	/^} sctp_retransmit_reason_t;$/;"	t	typeref:enum:__anon25
sctp_rto_alpha	structs.h	250;"	d
sctp_rto_beta	structs.h	251;"	d
sctp_rto_initial	structs.h	247;"	d
sctp_rto_max	structs.h	249;"	d
sctp_rto_min	structs.h	248;"	d
sctp_rtoinfo	user.h	/^struct sctp_rtoinfo {$/;"	s
sctp_rwnd_upd_shift	structs.h	282;"	d
sctp_sac_state	user.h	/^enum sctp_sac_state {$/;"	g
sctp_sack_info	user.h	/^struct sctp_sack_info {$/;"	s
sctp_sack_timeout	structs.h	261;"	d
sctp_sack_update_unack_data	outqueue.c	/^static void sctp_sack_update_unack_data(struct sctp_association *assoc,$/;"	f	file:
sctp_sanity_check	sctp.h	/^static inline int sctp_sanity_check(void)$/;"	f
sctp_scope	bind_addr.c	/^sctp_scope_t sctp_scope(const union sctp_addr *addr)$/;"	f
sctp_scope_policy	structs.h	276;"	d
sctp_scope_policy_t	constants.h	/^} sctp_scope_policy_t;$/;"	t	typeref:enum:__anon24
sctp_scope_t	constants.h	/^} sctp_scope_t;$/;"	t	typeref:enum:__anon23
sctp_send_asconf	socket.c	/^static int sctp_send_asconf(struct sctp_association *asoc,$/;"	f	file:
sctp_send_asconf_add_ip	socket.c	/^static int sctp_send_asconf_add_ip(struct sock		*sk,$/;"	f	file:
sctp_send_asconf_del_ip	socket.c	/^static int sctp_send_asconf_del_ip(struct sock		*sk,$/;"	f	file:
sctp_send_failed	user.h	/^struct sctp_send_failed {$/;"	s
sctp_send_failure_event	socket.c	/^	__u8 sctp_send_failure_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_send_failure_event	user.h	/^	__u8 sctp_send_failure_event;$/;"	m	struct:sctp_event_subscribe
sctp_send_stale_cookie_err	sm_statefuns.c	/^static void sctp_send_stale_cookie_err(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sender_dry_event	user.h	/^	__u8 sctp_sender_dry_event;$/;"	m	struct:sctp_event_subscribe
sctp_sender_dry_event	user.h	/^struct sctp_sender_dry_event {$/;"	s
sctp_sender_hb_info	structs.h	/^typedef struct sctp_sender_hb_info {$/;"	s
sctp_sender_hb_info_t	structs.h	/^} __attribute__((packed)) sctp_sender_hb_info_t;$/;"	t	typeref:struct:sctp_sender_hb_info
sctp_sendmsg	socket.c	/^SCTP_STATIC int sctp_sendmsg(struct kiocb *iocb, struct sock *sk,$/;"	f
sctp_seq_dump_local_addrs	proc.c	/^static void sctp_seq_dump_local_addrs(struct seq_file *seq, struct sctp_ep_common *epb)$/;"	f	file:
sctp_seq_dump_remote_addrs	proc.c	/^static void sctp_seq_dump_remote_addrs(struct seq_file *seq, struct sctp_association *assoc)$/;"	f	file:
sctp_seqpacket_protosw	protocol.c	/^static struct inet_protosw sctp_seqpacket_protosw = {$/;"	v	typeref:struct:inet_protosw	file:
sctp_set_owner_w	socket.c	/^static inline void sctp_set_owner_w(struct sctp_chunk *chunk)$/;"	f	file:
sctp_setadaptation	user.h	/^struct sctp_setadaptation {$/;"	s
sctp_setpeerprim	user.h	/^struct sctp_setpeerprim {$/;"	s
sctp_setsockopt	socket.c	/^SCTP_STATIC int sctp_setsockopt(struct sock *sk, int level, int optname,$/;"	f
sctp_setsockopt_active_key	socket.c	/^static int sctp_setsockopt_active_key(struct sock *sk,$/;"	f	file:
sctp_setsockopt_adaptation_layer	socket.c	/^static int sctp_setsockopt_adaptation_layer(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_associnfo	socket.c	/^static int sctp_setsockopt_associnfo(struct sock *sk, char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_setsockopt_auth_chunk	socket.c	/^static int sctp_setsockopt_auth_chunk(struct sock *sk,$/;"	f	file:
sctp_setsockopt_auth_key	socket.c	/^static int sctp_setsockopt_auth_key(struct sock *sk,$/;"	f	file:
sctp_setsockopt_autoclose	socket.c	/^static int sctp_setsockopt_autoclose(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_bindx	socket.c	/^SCTP_STATIC int sctp_setsockopt_bindx(struct sock* sk,$/;"	f
sctp_setsockopt_connectx	socket.c	/^SCTP_STATIC int sctp_setsockopt_connectx(struct sock* sk,$/;"	f
sctp_setsockopt_connectx_old	socket.c	/^SCTP_STATIC int sctp_setsockopt_connectx_old(struct sock* sk,$/;"	f
sctp_setsockopt_context	socket.c	/^static int sctp_setsockopt_context(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_default_send_param	socket.c	/^static int sctp_setsockopt_default_send_param(struct sock *sk,$/;"	f	file:
sctp_setsockopt_del_key	socket.c	/^static int sctp_setsockopt_del_key(struct sock *sk,$/;"	f	file:
sctp_setsockopt_delayed_ack	socket.c	/^static int sctp_setsockopt_delayed_ack(struct sock *sk,$/;"	f	file:
sctp_setsockopt_disable_fragments	socket.c	/^static int sctp_setsockopt_disable_fragments(struct sock *sk,$/;"	f	file:
sctp_setsockopt_events	socket.c	/^static int sctp_setsockopt_events(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_fragment_interleave	socket.c	/^static int sctp_setsockopt_fragment_interleave(struct sock *sk,$/;"	f	file:
sctp_setsockopt_hmac_ident	socket.c	/^static int sctp_setsockopt_hmac_ident(struct sock *sk,$/;"	f	file:
sctp_setsockopt_initmsg	socket.c	/^static int sctp_setsockopt_initmsg(struct sock *sk, char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_setsockopt_mappedv4	socket.c	/^static int sctp_setsockopt_mappedv4(struct sock *sk, char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_setsockopt_maxburst	socket.c	/^static int sctp_setsockopt_maxburst(struct sock *sk,$/;"	f	file:
sctp_setsockopt_maxseg	socket.c	/^static int sctp_setsockopt_maxseg(struct sock *sk, char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_setsockopt_nodelay	socket.c	/^static int sctp_setsockopt_nodelay(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_paddr_thresholds	socket.c	/^static int sctp_setsockopt_paddr_thresholds(struct sock *sk,$/;"	f	file:
sctp_setsockopt_partial_delivery_point	socket.c	/^static int sctp_setsockopt_partial_delivery_point(struct sock *sk,$/;"	f	file:
sctp_setsockopt_peer_addr_params	socket.c	/^static int sctp_setsockopt_peer_addr_params(struct sock *sk,$/;"	f	file:
sctp_setsockopt_peer_primary_addr	socket.c	/^static int sctp_setsockopt_peer_primary_addr(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_primary_addr	socket.c	/^static int sctp_setsockopt_primary_addr(struct sock *sk, char __user *optval,$/;"	f	file:
sctp_setsockopt_rtoinfo	socket.c	/^static int sctp_setsockopt_rtoinfo(struct sock *sk, char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_setsockopt_set_assoc	socket.c	/^static int sctp_setsockopt_set_assoc(struct sock *sk,char __user *optval, unsigned int optlen)$/;"	f	file:
sctp_sf_abort_violation	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_abort_violation($/;"	f	file:
sctp_sf_authenticate	sm_statefuns.c	/^static sctp_ierror_t sctp_sf_authenticate(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_autoclose_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_autoclose_timer_expire;$/;"	v
sctp_sf_autoclose_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_autoclose_timer_expire($/;"	f
sctp_sf_backbeat_8_3	sm.h	/^sctp_state_fn_t sctp_sf_backbeat_8_3;$/;"	v
sctp_sf_backbeat_8_3	sm_statefuns.c	/^sctp_disposition_t sctp_sf_backbeat_8_3(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_beat_8_3	sm.h	/^sctp_state_fn_t sctp_sf_beat_8_3;$/;"	v
sctp_sf_beat_8_3	sm_statefuns.c	/^sctp_disposition_t sctp_sf_beat_8_3(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_bug	sm.h	/^sctp_state_fn_t sctp_sf_bug;$/;"	v
sctp_sf_bug	sm_statefuns.c	/^sctp_disposition_t sctp_sf_bug(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_check_restart_addrs	sm_statefuns.c	/^static int sctp_sf_check_restart_addrs(const struct sctp_association *new_asoc,$/;"	f	file:
sctp_sf_cookie_echoed_abort	sm.h	/^sctp_state_fn_t sctp_sf_cookie_echoed_abort;$/;"	v
sctp_sf_cookie_echoed_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_echoed_abort(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_cookie_echoed_err	sm.h	/^sctp_state_fn_t sctp_sf_cookie_echoed_err;$/;"	v
sctp_sf_cookie_echoed_err	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_echoed_err(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_cookie_echoed_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_cookie_echoed_prm_abort;$/;"	v
sctp_sf_cookie_echoed_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_echoed_prm_abort($/;"	f
sctp_sf_cookie_echoed_prm_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_cookie_echoed_prm_shutdown;$/;"	v
sctp_sf_cookie_echoed_prm_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_echoed_prm_shutdown($/;"	f
sctp_sf_cookie_wait_abort	sm.h	/^sctp_state_fn_t sctp_sf_cookie_wait_abort;$/;"	v
sctp_sf_cookie_wait_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_wait_abort(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_cookie_wait_icmp_abort	sm.h	/^sctp_state_fn_t sctp_sf_cookie_wait_icmp_abort;$/;"	v
sctp_sf_cookie_wait_icmp_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_wait_icmp_abort(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_cookie_wait_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_cookie_wait_prm_abort;$/;"	v
sctp_sf_cookie_wait_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_wait_prm_abort($/;"	f
sctp_sf_cookie_wait_prm_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_cookie_wait_prm_shutdown;$/;"	v
sctp_sf_cookie_wait_prm_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_cookie_wait_prm_shutdown($/;"	f
sctp_sf_discard_chunk	sm.h	/^sctp_state_fn_t sctp_sf_discard_chunk;$/;"	v
sctp_sf_discard_chunk	sm_statefuns.c	/^sctp_disposition_t sctp_sf_discard_chunk(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_4_C	sm.h	/^sctp_state_fn_t sctp_sf_do_4_C;$/;"	v
sctp_sf_do_4_C	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_4_C(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_1B_init	sm.h	/^sctp_state_fn_t sctp_sf_do_5_1B_init;$/;"	v
sctp_sf_do_5_1B_init	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_1B_init(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_1C_ack	sm.h	/^sctp_state_fn_t sctp_sf_do_5_1C_ack;$/;"	v
sctp_sf_do_5_1C_ack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_1C_ack(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_1D_ce	sm.h	/^sctp_state_fn_t sctp_sf_do_5_1D_ce;$/;"	v
sctp_sf_do_5_1D_ce	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_1D_ce(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_1E_ca	sm.h	/^sctp_state_fn_t sctp_sf_do_5_1E_ca;$/;"	v
sctp_sf_do_5_1E_ca	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_1E_ca(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_2_1_siminit	sm.h	/^sctp_state_fn_t sctp_sf_do_5_2_1_siminit;$/;"	v
sctp_sf_do_5_2_1_siminit	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_2_1_siminit(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_2_2_dupinit	sm.h	/^sctp_state_fn_t sctp_sf_do_5_2_2_dupinit;$/;"	v
sctp_sf_do_5_2_2_dupinit	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_2_2_dupinit(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_2_3_initack	sm.h	/^sctp_state_fn_t sctp_sf_do_5_2_3_initack;$/;"	v
sctp_sf_do_5_2_3_initack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_2_3_initack(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_2_4_dupcook	sm.h	/^sctp_state_fn_t sctp_sf_do_5_2_4_dupcook;$/;"	v
sctp_sf_do_5_2_4_dupcook	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_5_2_4_dupcook(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_5_2_6_stale	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_5_2_6_stale(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_do_6_2_sack	sm.h	/^sctp_state_fn_t sctp_sf_do_6_2_sack;$/;"	v
sctp_sf_do_6_2_sack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_6_2_sack(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_6_3_3_rtx	sm.h	/^sctp_state_fn_t sctp_sf_do_6_3_3_rtx;$/;"	v
sctp_sf_do_6_3_3_rtx	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_6_3_3_rtx(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_8_5_1_E_sa	sm.h	/^sctp_state_fn_t sctp_sf_do_8_5_1_E_sa;$/;"	v
sctp_sf_do_8_5_1_E_sa	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_8_5_1_E_sa(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_1_abort	sm.h	/^sctp_state_fn_t sctp_sf_do_9_1_abort;$/;"	v
sctp_sf_do_9_1_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_1_abort(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_1_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_do_9_1_prm_abort;$/;"	v
sctp_sf_do_9_1_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_1_prm_abort($/;"	f
sctp_sf_do_9_2_final	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_final;$/;"	v
sctp_sf_do_9_2_final	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_final(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_2_prm_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_prm_shutdown;$/;"	v
sctp_sf_do_9_2_prm_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_prm_shutdown($/;"	f
sctp_sf_do_9_2_reshutack	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_reshutack;$/;"	v
sctp_sf_do_9_2_reshutack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_reshutack(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_2_shut_ctsn	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_shut_ctsn;$/;"	v
sctp_sf_do_9_2_shut_ctsn	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_shut_ctsn(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_2_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_shutdown;$/;"	v
sctp_sf_do_9_2_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_shutdown(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_9_2_shutdown_ack	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_shutdown_ack;$/;"	v
sctp_sf_do_9_2_shutdown_ack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_shutdown_ack($/;"	f
sctp_sf_do_9_2_start_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_do_9_2_start_shutdown;$/;"	v
sctp_sf_do_9_2_start_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_9_2_start_shutdown($/;"	f
sctp_sf_do_asconf	sm.h	/^sctp_state_fn_t sctp_sf_do_asconf;$/;"	v
sctp_sf_do_asconf	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_asconf(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_asconf_ack	sm.h	/^sctp_state_fn_t sctp_sf_do_asconf_ack;$/;"	v
sctp_sf_do_asconf_ack	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_asconf_ack(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_dupcook_a	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_dupcook_a(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_do_dupcook_b	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_dupcook_b(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_do_dupcook_c	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_dupcook_c(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_do_dupcook_d	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_dupcook_d(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_do_ecn_cwr	sm.h	/^sctp_state_fn_t sctp_sf_do_ecn_cwr;$/;"	v
sctp_sf_do_ecn_cwr	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_ecn_cwr(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_ecne	sm.h	/^sctp_state_fn_t sctp_sf_do_ecne;$/;"	v
sctp_sf_do_ecne	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_ecne(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_no_pending_tsn	sm.h	/^sctp_state_fn_t sctp_sf_do_no_pending_tsn;$/;"	v
sctp_sf_do_no_pending_tsn	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_no_pending_tsn($/;"	f
sctp_sf_do_prm_asconf	sm.h	/^sctp_state_fn_t sctp_sf_do_prm_asconf;$/;"	v
sctp_sf_do_prm_asconf	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_prm_asconf(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_prm_asoc	sm.h	/^sctp_state_fn_t sctp_sf_do_prm_asoc;$/;"	v
sctp_sf_do_prm_asoc	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_prm_asoc(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_prm_requestheartbeat	sm.h	/^sctp_state_fn_t sctp_sf_do_prm_requestheartbeat;$/;"	v
sctp_sf_do_prm_requestheartbeat	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_prm_requestheartbeat($/;"	f
sctp_sf_do_prm_send	sm.h	/^sctp_state_fn_t sctp_sf_do_prm_send;$/;"	v
sctp_sf_do_prm_send	sm_statefuns.c	/^sctp_disposition_t sctp_sf_do_prm_send(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_do_unexpected_init	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_do_unexpected_init($/;"	f	file:
sctp_sf_eat_auth	sm.h	/^sctp_state_fn_t sctp_sf_eat_auth;$/;"	v
sctp_sf_eat_auth	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_auth(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_eat_data_6_2	sm.h	/^sctp_state_fn_t sctp_sf_eat_data_6_2;$/;"	v
sctp_sf_eat_data_6_2	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_data_6_2(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_eat_data_fast_4_4	sm.h	/^sctp_state_fn_t sctp_sf_eat_data_fast_4_4;$/;"	v
sctp_sf_eat_data_fast_4_4	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_data_fast_4_4(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_eat_fwd_tsn	sm.h	/^sctp_state_fn_t sctp_sf_eat_fwd_tsn;$/;"	v
sctp_sf_eat_fwd_tsn	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_fwd_tsn(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_eat_fwd_tsn_fast	sm.h	/^sctp_state_fn_t sctp_sf_eat_fwd_tsn_fast;$/;"	v
sctp_sf_eat_fwd_tsn_fast	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_fwd_tsn_fast($/;"	f
sctp_sf_eat_sack_6_2	sm.h	/^sctp_state_fn_t sctp_sf_eat_sack_6_2;$/;"	v
sctp_sf_eat_sack_6_2	sm_statefuns.c	/^sctp_disposition_t sctp_sf_eat_sack_6_2(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_error_closed	sm.h	/^sctp_state_fn_t sctp_sf_error_closed;$/;"	v
sctp_sf_error_closed	sm_statefuns.c	/^sctp_disposition_t sctp_sf_error_closed(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_error_shutdown	sm.h	/^sctp_state_fn_t sctp_sf_error_shutdown;$/;"	v
sctp_sf_error_shutdown	sm_statefuns.c	/^sctp_disposition_t sctp_sf_error_shutdown(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_heartbeat	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_heartbeat(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_ignore_other	sm.h	/^sctp_state_fn_t sctp_sf_ignore_other;$/;"	v
sctp_sf_ignore_other	sm_statefuns.c	/^sctp_disposition_t sctp_sf_ignore_other(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_ignore_primitive	sm.h	/^sctp_state_fn_t sctp_sf_ignore_primitive;$/;"	v
sctp_sf_ignore_primitive	sm_statefuns.c	/^sctp_disposition_t sctp_sf_ignore_primitive($/;"	f
sctp_sf_not_impl	sm.h	/^sctp_state_fn_t sctp_sf_not_impl;$/;"	v
sctp_sf_not_impl	sm_statefuns.c	/^sctp_disposition_t sctp_sf_not_impl(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_ootb	sm.h	/^sctp_state_fn_t sctp_sf_ootb;$/;"	v
sctp_sf_ootb	sm_statefuns.c	/^sctp_disposition_t sctp_sf_ootb(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_operr_notify	sm.h	/^sctp_state_fn_t sctp_sf_operr_notify;$/;"	v
sctp_sf_operr_notify	sm_statefuns.c	/^sctp_disposition_t sctp_sf_operr_notify(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_pdiscard	sm.h	/^sctp_state_fn_t sctp_sf_pdiscard;$/;"	v
sctp_sf_pdiscard	sm_statefuns.c	/^sctp_disposition_t sctp_sf_pdiscard(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_send_restart_abort	sm_statefuns.c	/^static int sctp_sf_send_restart_abort(union sctp_addr *ssa,$/;"	f	file:
sctp_sf_sendbeat_8_3	sm.h	/^sctp_state_fn_t sctp_sf_sendbeat_8_3;$/;"	v
sctp_sf_sendbeat_8_3	sm_statefuns.c	/^sctp_disposition_t sctp_sf_sendbeat_8_3(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_shut_8_4_5	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_shut_8_4_5(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_shutdown_ack_sent_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_ack_sent_abort;$/;"	v
sctp_sf_shutdown_ack_sent_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_ack_sent_abort($/;"	f
sctp_sf_shutdown_ack_sent_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_ack_sent_prm_abort;$/;"	v
sctp_sf_shutdown_ack_sent_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_ack_sent_prm_abort($/;"	f
sctp_sf_shutdown_pending_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_pending_abort;$/;"	v
sctp_sf_shutdown_pending_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_pending_abort($/;"	f
sctp_sf_shutdown_pending_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_pending_prm_abort;$/;"	v
sctp_sf_shutdown_pending_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_pending_prm_abort($/;"	f
sctp_sf_shutdown_sent_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_sent_abort;$/;"	v
sctp_sf_shutdown_sent_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_sent_abort(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_shutdown_sent_prm_abort	sm.h	/^sctp_state_fn_t sctp_sf_shutdown_sent_prm_abort;$/;"	v
sctp_sf_shutdown_sent_prm_abort	sm_statefuns.c	/^sctp_disposition_t sctp_sf_shutdown_sent_prm_abort($/;"	f
sctp_sf_t1_cookie_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_t1_cookie_timer_expire;$/;"	v
sctp_sf_t1_cookie_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_t1_cookie_timer_expire(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_t1_init_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_t1_init_timer_expire;$/;"	v
sctp_sf_t1_init_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_t1_init_timer_expire(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_t2_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_t2_timer_expire;$/;"	v
sctp_sf_t2_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_t2_timer_expire(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_t4_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_t4_timer_expire;$/;"	v
sctp_sf_t4_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_t4_timer_expire($/;"	f
sctp_sf_t5_timer_expire	sm.h	/^sctp_state_fn_t sctp_sf_t5_timer_expire;$/;"	v
sctp_sf_t5_timer_expire	sm_statefuns.c	/^sctp_disposition_t sctp_sf_t5_timer_expire(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_tabort_8_4_8	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_tabort_8_4_8(const struct sctp_endpoint *ep,$/;"	f	file:
sctp_sf_timer_ignore	sm.h	/^sctp_state_fn_t sctp_sf_timer_ignore;$/;"	v
sctp_sf_timer_ignore	sm_statefuns.c	/^sctp_disposition_t sctp_sf_timer_ignore(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_unk_chunk	sm.h	/^sctp_state_fn_t sctp_sf_unk_chunk;$/;"	v
sctp_sf_unk_chunk	sm_statefuns.c	/^sctp_disposition_t sctp_sf_unk_chunk(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_violation	sm.h	/^sctp_state_fn_t sctp_sf_violation;$/;"	v
sctp_sf_violation	sm_statefuns.c	/^sctp_disposition_t sctp_sf_violation(const struct sctp_endpoint *ep,$/;"	f
sctp_sf_violation_chunk	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_violation_chunk($/;"	f	file:
sctp_sf_violation_chunklen	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_violation_chunklen($/;"	f	file:
sctp_sf_violation_ctsn	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_violation_ctsn($/;"	f	file:
sctp_sf_violation_paramlen	sm_statefuns.c	/^static sctp_disposition_t sctp_sf_violation_paramlen($/;"	f	file:
sctp_shared_key	auth.h	/^struct sctp_shared_key {$/;"	s
sctp_shutdown	socket.c	/^SCTP_STATIC void sctp_shutdown(struct sock *sk, int how)$/;"	f
sctp_shutdown_event	socket.c	/^	__u8 sctp_shutdown_event;$/;"	m	struct:sctp_event_subscribe_rhel6_kabi	file:
sctp_shutdown_event	user.h	/^	__u8 sctp_shutdown_event;$/;"	m	struct:sctp_event_subscribe
sctp_shutdown_event	user.h	/^struct sctp_shutdown_event {$/;"	s
sctp_side_effects	sm_sideeffect.c	/^static int sctp_side_effects(sctp_event_t event_type, sctp_subtype_t subtype,$/;"	f	file:
sctp_signed_cookie	structs.h	/^struct sctp_signed_cookie {$/;"	s
sctp_sinfo_flags	user.h	/^enum sctp_sinfo_flags {$/;"	g
sctp_sk	structs.h	/^static inline struct sctp_sock *sctp_sk(const struct sock *sk)$/;"	f
sctp_skb2event	ulpevent.h	/^static inline struct sctp_ulpevent *sctp_skb2event(struct sk_buff *skb)$/;"	f
sctp_skb_for_each	sctp.h	438;"	d
sctp_skb_list_tail	sctp.h	/^static inline void sctp_skb_list_tail(struct sk_buff_head *list,$/;"	f
sctp_skb_pull	socket.c	/^static int sctp_skb_pull(struct sk_buff *skb, int len)$/;"	f	file:
sctp_skb_recv_datagram	socket.c	/^static struct sk_buff *sctp_skb_recv_datagram(struct sock *sk, int flags,$/;"	f	file:
sctp_skb_set_owner_r	sctp.h	/^static inline void sctp_skb_set_owner_r(struct sk_buff *skb, struct sock *sk)$/;"	f
sctp_skb_set_owner_r_frag	socket.c	/^static void sctp_skb_set_owner_r_frag(struct sk_buff *skb, struct sock *sk)$/;"	f	file:
sctp_sm_command_t	sm.h	/^} sctp_sm_command_t;$/;"	t	typeref:struct:__anon32
sctp_sm_lookup_event	sm_statetable.c	/^const sctp_sm_table_entry_t *sctp_sm_lookup_event(sctp_event_t event_type,$/;"	f
sctp_sm_pull_sack	sm_statefuns.c	/^static struct sctp_sackhdr *sctp_sm_pull_sack(struct sctp_chunk *chunk)$/;"	f	file:
sctp_sm_table_entry_t	sm.h	/^} sctp_sm_table_entry_t;$/;"	t	typeref:struct:__anon33
sctp_sn_error	user.h	/^typedef enum sctp_sn_error {$/;"	g
sctp_sn_error_t	user.h	/^} sctp_sn_error_t;$/;"	t	typeref:enum:sctp_sn_error
sctp_sn_type	user.h	/^enum sctp_sn_type {$/;"	g
sctp_sndbuf_policy	structs.h	256;"	d
sctp_sndrcvinfo	user.h	/^struct sctp_sndrcvinfo {$/;"	s
sctp_snmp_list	proc.c	/^static struct snmp_mib sctp_snmp_list[] = {$/;"	v	typeref:struct:snmp_mib	file:
sctp_snmp_proc_exit	proc.c	/^void sctp_snmp_proc_exit(void)$/;"	f
sctp_snmp_proc_init	proc.c	/^int __init sctp_snmp_proc_init(void)$/;"	f
sctp_snmp_seq_fops	proc.c	/^static const struct file_operations sctp_snmp_seq_fops = {$/;"	v	typeref:struct:file_operations	file:
sctp_snmp_seq_open	proc.c	/^static int sctp_snmp_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
sctp_snmp_seq_show	proc.c	/^static int sctp_snmp_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
sctp_sock	structs.h	/^struct sctp_sock {$/;"	s
sctp_sock_migrate	socket.c	/^static void sctp_sock_migrate(struct sock *oldsk, struct sock *newsk,$/;"	f	file:
sctp_sock_rfree	socket.c	/^void sctp_sock_rfree(struct sk_buff *skb)$/;"	f
sctp_sock_state_t	constants.h	/^} sctp_sock_state_t;$/;"	t	typeref:enum:__anon15
sctp_sockaddr_af	socket.c	/^static struct sctp_af *sctp_sockaddr_af(struct sctp_sock *opt,$/;"	f	file:
sctp_sockaddr_entry	structs.h	/^struct sctp_sockaddr_entry {$/;"	s
sctp_socket_type_t	structs.h	/^} sctp_socket_type_t;$/;"	t	typeref:enum:__anon37
sctp_sockets_allocated	socket.c	/^struct percpu_counter sctp_sockets_allocated;$/;"	v	typeref:struct:percpu_counter
sctp_source	sm_make_chunk.c	/^const union sctp_addr *sctp_source(const struct sctp_chunk *chunk)$/;"	f
sctp_spc_state	user.h	/^enum sctp_spc_state {$/;"	g
sctp_spin_lock	sctp.h	213;"	d
sctp_spin_lock_irqsave	sctp.h	208;"	d
sctp_spin_unlock	sctp.h	214;"	d
sctp_spin_unlock_irqrestore	sctp.h	209;"	d
sctp_spinfo_state	user.h	/^enum sctp_spinfo_state {$/;"	g
sctp_spp_flags	user.h	/^enum  sctp_spp_flags {$/;"	g
sctp_ssf_flags	user.h	/^enum sctp_ssf_flags {$/;"	g
sctp_ssn_next	structs.h	/^static inline __u16 sctp_ssn_next(struct sctp_stream *stream, __u16 id)$/;"	f
sctp_ssn_peek	structs.h	/^static inline __u16 sctp_ssn_peek(struct sctp_stream *stream, __u16 id)$/;"	f
sctp_ssn_skip	structs.h	/^static inline void sctp_ssn_skip(struct sctp_stream *stream, __u16 id, $/;"	f
sctp_ssnmap	structs.h	/^struct sctp_ssnmap {$/;"	s
sctp_ssnmap_clear	ssnmap.c	/^void sctp_ssnmap_clear(struct sctp_ssnmap *map)$/;"	f
sctp_ssnmap_free	ssnmap.c	/^void sctp_ssnmap_free(struct sctp_ssnmap *map)$/;"	f
sctp_ssnmap_init	ssnmap.c	/^static struct sctp_ssnmap *sctp_ssnmap_init(struct sctp_ssnmap *map, __u16 in,$/;"	f	file:
sctp_ssnmap_new	ssnmap.c	/^struct sctp_ssnmap *sctp_ssnmap_new(__u16 in, __u16 out,$/;"	f
sctp_ssnmap_size	ssnmap.c	/^static inline size_t sctp_ssnmap_size(__u16 in, __u16 out)$/;"	f	file:
sctp_sstate	sctp.h	700;"	d
sctp_start_cksum	checksum.h	/^static inline __u32 sctp_start_cksum(__u8 *buffer, __u16 length)$/;"	f
sctp_state	sctp.h	692;"	d
sctp_state_fn_t	sm.h	/^typedef sctp_disposition_t (sctp_state_fn_t) (struct net *,$/;"	t
sctp_state_t	constants.h	/^} sctp_state_t;$/;"	t	typeref:enum:__anon14
sctp_state_tbl	debug.c	/^const char *const sctp_state_tbl[SCTP_STATE_NUM_STATES] = {$/;"	v
sctp_status	user.h	/^struct sctp_status {$/;"	s
sctp_status_tbl	debug.c	/^const char *const sctp_status_tbl[] = {$/;"	v
sctp_stop_t1_and_abort	sm_statefuns.c	/^static sctp_disposition_t sctp_stop_t1_and_abort(sctp_cmd_seq_t *commands,$/;"	f	file:
sctp_stream	structs.h	/^struct sctp_stream {$/;"	s
sctp_stream_protosw	protocol.c	/^static struct inet_protosw sctp_stream_protosw = {$/;"	v	typeref:struct:inet_protosw	file:
sctp_style	sctp.h	685;"	d
sctp_subtype_t	constants.h	/^} sctp_subtype_t;$/;"	t	typeref:union:__anon12
sctp_sysctl_header	sysctl.c	/^static struct ctl_table_header * sctp_sysctl_header;$/;"	v	typeref:struct:ctl_table_header	file:
sctp_sysctl_net_register	sctp.h	/^static inline int sctp_sysctl_net_register(struct net *net) { return 0; }$/;"	f
sctp_sysctl_net_unregister	sctp.h	/^static inline void sctp_sysctl_net_unregister(struct net *net) { return; }$/;"	f
sctp_sysctl_register	sctp.h	/^static inline void sctp_sysctl_register(void) { return; }$/;"	f
sctp_sysctl_register	sysctl.c	/^void sctp_sysctl_register(void)$/;"	f
sctp_sysctl_unregister	sctp.h	/^static inline void sctp_sysctl_unregister(void) { return; }$/;"	f
sctp_sysctl_unregister	sysctl.c	/^void sctp_sysctl_unregister(void)$/;"	f
sctp_table	sysctl.c	/^static ctl_table sctp_table[] = {$/;"	v	file:
sctp_tietags_compare	sm_statefuns.c	/^static char sctp_tietags_compare(struct sctp_association *new_asoc,$/;"	f	file:
sctp_tietags_populate	sm_statefuns.c	/^static void sctp_tietags_populate(struct sctp_association *new_asoc,$/;"	f	file:
sctp_timer_event_t	sm.h	/^typedef void (sctp_timer_event_t) (unsigned long);$/;"	t
sctp_timer_events	sm_sideeffect.c	/^sctp_timer_event_t *sctp_timer_events[SCTP_NUM_TIMEOUT_TYPES] = {$/;"	v
sctp_timer_tbl	debug.c	/^static const char *const sctp_timer_tbl[] = {$/;"	v	file:
sctp_tname	debug.c	/^const char *sctp_tname(const sctp_subtype_t id)$/;"	f
sctp_transport	structs.h	/^struct sctp_transport {$/;"	s
sctp_transport_burst_limited	transport.c	/^void sctp_transport_burst_limited(struct sctp_transport *t)$/;"	f
sctp_transport_burst_reset	transport.c	/^void sctp_transport_burst_reset(struct sctp_transport *t)$/;"	f
sctp_transport_cmd_t	constants.h	/^} sctp_transport_cmd_t;$/;"	t	typeref:enum:__anon22
sctp_transport_destroy	transport.c	/^static void sctp_transport_destroy(struct sctp_transport *transport)$/;"	f	file:
sctp_transport_destroy_rcu	transport.c	/^static void sctp_transport_destroy_rcu(struct rcu_head *head)$/;"	f	file:
sctp_transport_dst_check	sctp.h	/^static inline struct dst_entry *sctp_transport_dst_check(struct sctp_transport *t)$/;"	f
sctp_transport_dst_check	transport.c	/^static struct dst_entry *sctp_transport_dst_check(struct sctp_transport *t)$/;"	f	file:
sctp_transport_free	transport.c	/^void sctp_transport_free(struct sctp_transport *transport)$/;"	f
sctp_transport_hold	transport.c	/^void sctp_transport_hold(struct sctp_transport *transport)$/;"	f
sctp_transport_init	transport.c	/^static struct sctp_transport *sctp_transport_init(struct sctp_transport *peer,$/;"	f	file:
sctp_transport_lower_cwnd	transport.c	/^void sctp_transport_lower_cwnd(struct sctp_transport *transport,$/;"	f
sctp_transport_new	transport.c	/^struct sctp_transport *sctp_transport_new(const union sctp_addr *addr,$/;"	f
sctp_transport_pmtu	transport.c	/^void sctp_transport_pmtu(struct sctp_transport *transport, struct sock *sk)$/;"	f
sctp_transport_put	transport.c	/^void sctp_transport_put(struct sctp_transport *transport)$/;"	f
sctp_transport_raise_cwnd	transport.c	/^void sctp_transport_raise_cwnd(struct sctp_transport *transport,$/;"	f
sctp_transport_reset	transport.c	/^void sctp_transport_reset(struct sctp_transport *t)$/;"	f
sctp_transport_reset_timers	transport.c	/^void sctp_transport_reset_timers(struct sctp_transport *transport)$/;"	f
sctp_transport_route	transport.c	/^void sctp_transport_route(struct sctp_transport *transport,$/;"	f
sctp_transport_set_owner	transport.c	/^void sctp_transport_set_owner(struct sctp_transport *transport,$/;"	f
sctp_transport_timeout	transport.c	/^unsigned long sctp_transport_timeout(struct sctp_transport *t)$/;"	f
sctp_transport_update_pmtu	transport.c	/^void sctp_transport_update_pmtu(struct sctp_transport *t, u32 pmtu)$/;"	f
sctp_transport_update_rto	transport.c	/^void sctp_transport_update_rto(struct sctp_transport *tp, __u32 rtt)$/;"	f
sctp_tsnmap	tsnmap.h	/^struct sctp_tsnmap {$/;"	s
sctp_tsnmap_check	tsnmap.c	/^int sctp_tsnmap_check(const struct sctp_tsnmap *map, __u32 tsn)$/;"	f
sctp_tsnmap_find_gap_ack	tsnmap.c	/^static void sctp_tsnmap_find_gap_ack(unsigned long *map, __u16 off,$/;"	f	file:
sctp_tsnmap_free	tsnmap.c	/^void sctp_tsnmap_free(struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_get_ctsn	tsnmap.h	/^static inline __u32 sctp_tsnmap_get_ctsn(const struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_get_dups	tsnmap.h	/^static inline __be32 *sctp_tsnmap_get_dups(struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_get_max_tsn_seen	tsnmap.h	/^static inline __u32 sctp_tsnmap_get_max_tsn_seen(const struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_grow	tsnmap.c	/^static int sctp_tsnmap_grow(struct sctp_tsnmap *map, u16 gap)$/;"	f	file:
sctp_tsnmap_has_gap	tsnmap.h	/^static inline int sctp_tsnmap_has_gap(const struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_init	tsnmap.c	/^struct sctp_tsnmap *sctp_tsnmap_init(struct sctp_tsnmap *map, __u16 len,$/;"	f
sctp_tsnmap_iter	tsnmap.h	/^struct sctp_tsnmap_iter {$/;"	s
sctp_tsnmap_iter_init	tsnmap.c	/^SCTP_STATIC void sctp_tsnmap_iter_init(const struct sctp_tsnmap *map,$/;"	f
sctp_tsnmap_mark	tsnmap.c	/^int sctp_tsnmap_mark(struct sctp_tsnmap *map, __u32 tsn,$/;"	f
sctp_tsnmap_mark_dup	tsnmap.h	/^static inline void sctp_tsnmap_mark_dup(struct sctp_tsnmap *map, __u32 tsn)$/;"	f
sctp_tsnmap_next_gap_ack	tsnmap.c	/^SCTP_STATIC int sctp_tsnmap_next_gap_ack(const struct sctp_tsnmap *map,$/;"	f
sctp_tsnmap_num_dups	tsnmap.h	/^static inline __u16 sctp_tsnmap_num_dups(struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_num_gabs	tsnmap.c	/^__u16 sctp_tsnmap_num_gabs(struct sctp_tsnmap *map,$/;"	f
sctp_tsnmap_pending	tsnmap.c	/^__u16 sctp_tsnmap_pending(struct sctp_tsnmap *map)$/;"	f
sctp_tsnmap_renege	tsnmap.c	/^void sctp_tsnmap_renege(struct sctp_tsnmap *map, __u32 tsn)$/;"	f
sctp_tsnmap_skip	tsnmap.c	/^void sctp_tsnmap_skip(struct sctp_tsnmap *map, __u32 tsn)$/;"	f
sctp_tsnmap_update	tsnmap.c	/^static void sctp_tsnmap_update(struct sctp_tsnmap *map)$/;"	f	file:
sctp_ulpevent	ulpevent.h	/^struct sctp_ulpevent {$/;"	s
sctp_ulpevent_free	ulpevent.c	/^void sctp_ulpevent_free(struct sctp_ulpevent *event)$/;"	f
sctp_ulpevent_get_notification_type	ulpevent.c	/^__u16 sctp_ulpevent_get_notification_type(const struct sctp_ulpevent *event)$/;"	f
sctp_ulpevent_init	ulpevent.c	/^SCTP_STATIC void sctp_ulpevent_init(struct sctp_ulpevent *event,$/;"	f
sctp_ulpevent_is_enabled	ulpevent.h	/^static inline int sctp_ulpevent_is_enabled(const struct sctp_ulpevent *event,$/;"	f
sctp_ulpevent_is_notification	ulpevent.c	/^int sctp_ulpevent_is_notification(const struct sctp_ulpevent *event)$/;"	f
sctp_ulpevent_make_adaptation_indication	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_adaptation_indication($/;"	f
sctp_ulpevent_make_assoc_change	ulpevent.c	/^struct sctp_ulpevent  *sctp_ulpevent_make_assoc_change($/;"	f
sctp_ulpevent_make_authkey	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_authkey($/;"	f
sctp_ulpevent_make_pdapi	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_pdapi($/;"	f
sctp_ulpevent_make_peer_addr_change	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_peer_addr_change($/;"	f
sctp_ulpevent_make_rcvmsg	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_rcvmsg(struct sctp_association *asoc,$/;"	f
sctp_ulpevent_make_remote_error	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_remote_error($/;"	f
sctp_ulpevent_make_send_failed	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_send_failed($/;"	f
sctp_ulpevent_make_sender_dry_event	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_sender_dry_event($/;"	f
sctp_ulpevent_make_shutdown_event	ulpevent.c	/^struct sctp_ulpevent *sctp_ulpevent_make_shutdown_event($/;"	f
sctp_ulpevent_new	ulpevent.c	/^SCTP_STATIC struct sctp_ulpevent *sctp_ulpevent_new(int size, int msg_flags,$/;"	f
sctp_ulpevent_read_sndrcvinfo	ulpevent.c	/^void sctp_ulpevent_read_sndrcvinfo(const struct sctp_ulpevent *event,$/;"	f
sctp_ulpevent_receive_data	ulpevent.c	/^static void sctp_ulpevent_receive_data(struct sctp_ulpevent *event,$/;"	f	file:
sctp_ulpevent_release_data	ulpevent.c	/^static void sctp_ulpevent_release_data(struct sctp_ulpevent *event)$/;"	f	file:
sctp_ulpevent_release_frag_data	ulpevent.c	/^static void sctp_ulpevent_release_frag_data(struct sctp_ulpevent *event)$/;"	f	file:
sctp_ulpevent_release_owner	ulpevent.c	/^static inline void sctp_ulpevent_release_owner(struct sctp_ulpevent *event)$/;"	f	file:
sctp_ulpevent_set_owner	ulpevent.c	/^static inline void sctp_ulpevent_set_owner(struct sctp_ulpevent *event,$/;"	f	file:
sctp_ulpevent_type_enabled	ulpevent.h	/^static inline int sctp_ulpevent_type_enabled(__u16 sn_type,$/;"	f
sctp_ulpq	ulpqueue.h	/^struct sctp_ulpq {$/;"	s
sctp_ulpq_abort_pd	ulpqueue.c	/^void sctp_ulpq_abort_pd(struct sctp_ulpq *ulpq, gfp_t gfp)$/;"	f
sctp_ulpq_clear_pd	ulpqueue.c	/^static int sctp_ulpq_clear_pd(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_flush	ulpqueue.c	/^void sctp_ulpq_flush(struct sctp_ulpq *ulpq)$/;"	f
sctp_ulpq_free	ulpqueue.c	/^void sctp_ulpq_free(struct sctp_ulpq *ulpq)$/;"	f
sctp_ulpq_init	ulpqueue.c	/^struct sctp_ulpq *sctp_ulpq_init(struct sctp_ulpq *ulpq,$/;"	f
sctp_ulpq_order	ulpqueue.c	/^static struct sctp_ulpevent *sctp_ulpq_order(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_partial_delivery	ulpqueue.c	/^void sctp_ulpq_partial_delivery(struct sctp_ulpq *ulpq,$/;"	f
sctp_ulpq_reap_ordered	ulpqueue.c	/^static void sctp_ulpq_reap_ordered(struct sctp_ulpq *ulpq, __u16 sid)$/;"	f	file:
sctp_ulpq_reasm	ulpqueue.c	/^static struct sctp_ulpevent *sctp_ulpq_reasm(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_reasm_drain	ulpqueue.c	/^static void sctp_ulpq_reasm_drain(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_reasm_flushtsn	ulpqueue.c	/^void sctp_ulpq_reasm_flushtsn(struct sctp_ulpq *ulpq, __u32 fwd_tsn)$/;"	f
sctp_ulpq_renege	ulpqueue.c	/^void sctp_ulpq_renege(struct sctp_ulpq *ulpq, struct sctp_chunk *chunk,$/;"	f
sctp_ulpq_renege_frags	ulpqueue.c	/^static __u16 sctp_ulpq_renege_frags(struct sctp_ulpq *ulpq, __u16 needed)$/;"	f	file:
sctp_ulpq_renege_list	ulpqueue.c	/^static __u16 sctp_ulpq_renege_list(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_renege_order	ulpqueue.c	/^static __u16 sctp_ulpq_renege_order(struct sctp_ulpq *ulpq, __u16 needed)$/;"	f	file:
sctp_ulpq_retrieve_first	ulpqueue.c	/^static struct sctp_ulpevent *sctp_ulpq_retrieve_first(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_retrieve_ordered	ulpqueue.c	/^static void sctp_ulpq_retrieve_ordered(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_retrieve_partial	ulpqueue.c	/^static struct sctp_ulpevent *sctp_ulpq_retrieve_partial(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_retrieve_reassembled	ulpqueue.c	/^static struct sctp_ulpevent *sctp_ulpq_retrieve_reassembled(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_set_pd	ulpqueue.c	/^static void sctp_ulpq_set_pd(struct sctp_ulpq *ulpq)$/;"	f	file:
sctp_ulpq_skip	ulpqueue.c	/^void sctp_ulpq_skip(struct sctp_ulpq *ulpq, __u16 sid, __u16 ssn)$/;"	f
sctp_ulpq_store_ordered	ulpqueue.c	/^static void sctp_ulpq_store_ordered(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_store_reasm	ulpqueue.c	/^static void sctp_ulpq_store_reasm(struct sctp_ulpq *ulpq,$/;"	f	file:
sctp_ulpq_tail_data	ulpqueue.c	/^int sctp_ulpq_tail_data(struct sctp_ulpq *ulpq, struct sctp_chunk *chunk,$/;"	f
sctp_ulpq_tail_event	ulpqueue.c	/^int sctp_ulpq_tail_event(struct sctp_ulpq *ulpq, struct sctp_ulpevent *event)$/;"	f
sctp_unhash	socket.c	/^static void sctp_unhash(struct sock *sk)$/;"	f	file:
sctp_unhash_endpoint	input.c	/^void sctp_unhash_endpoint(struct sctp_endpoint *ep)$/;"	f
sctp_unhash_established	input.c	/^void sctp_unhash_established(struct sctp_association *asoc)$/;"	f
sctp_unpack_cookie	sm_make_chunk.c	/^struct sctp_association *sctp_unpack_cookie($/;"	f
sctp_update_cksum	checksum.h	/^static inline __u32 sctp_update_cksum(__u8 *buffer, __u16 length, __u32 crc32)$/;"	f
sctp_user_addto_chunk	sm_make_chunk.c	/^int sctp_user_addto_chunk(struct sctp_chunk *chunk, int off, int len,$/;"	f
sctp_v4_add_protocol	protocol.c	/^static int sctp_v4_add_protocol(void)$/;"	f	file:
sctp_v4_addr_v4map	protocol.c	/^static void sctp_v4_addr_v4map(struct sctp_sock *sp, union sctp_addr *addr)$/;"	f	file:
sctp_v4_addr_valid	protocol.c	/^static int sctp_v4_addr_valid(union sctp_addr *addr,$/;"	f	file:
sctp_v4_available	protocol.c	/^static int sctp_v4_available(union sctp_addr *addr, struct sctp_sock *sp)$/;"	f	file:
sctp_v4_cmp_addr	protocol.c	/^static int sctp_v4_cmp_addr(const union sctp_addr *addr1,$/;"	f	file:
sctp_v4_copy_addrlist	protocol.c	/^static void sctp_v4_copy_addrlist(struct list_head *addrlist,$/;"	f	file:
sctp_v4_create_accept_sk	protocol.c	/^static struct sock *sctp_v4_create_accept_sk(struct sock *sk,$/;"	f	file:
sctp_v4_del_protocol	protocol.c	/^static void sctp_v4_del_protocol(void)$/;"	f	file:
sctp_v4_dst_saddr	protocol.c	/^static void sctp_v4_dst_saddr(union sctp_addr *saddr, struct dst_entry *dst,$/;"	f	file:
sctp_v4_ecn_capable	protocol.c	/^static void sctp_v4_ecn_capable(struct sock *sk)$/;"	f	file:
sctp_v4_err	input.c	/^void sctp_v4_err(struct sk_buff *skb, __u32 info)$/;"	f
sctp_v4_from_addr_param	protocol.c	/^static void sctp_v4_from_addr_param(union sctp_addr *addr,$/;"	f	file:
sctp_v4_from_sk	protocol.c	/^static void sctp_v4_from_sk(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v4_from_skb	protocol.c	/^static void sctp_v4_from_skb(union sctp_addr *addr, struct sk_buff *skb,$/;"	f	file:
sctp_v4_get_dst	protocol.c	/^static struct dst_entry *sctp_v4_get_dst(struct sctp_association *asoc,$/;"	f	file:
sctp_v4_get_saddr	protocol.c	/^static void sctp_v4_get_saddr(struct sctp_sock *sk,$/;"	f	file:
sctp_v4_inaddr_any	protocol.c	/^static void sctp_v4_inaddr_any(union sctp_addr *addr, __be16 port)$/;"	f	file:
sctp_v4_is_any	protocol.c	/^static int sctp_v4_is_any(const union sctp_addr *addr)$/;"	f	file:
sctp_v4_is_ce	protocol.c	/^static int sctp_v4_is_ce(const struct sk_buff *skb)$/;"	f	file:
sctp_v4_map_v6	sctp.h	/^static inline void sctp_v4_map_v6(union sctp_addr *addr)$/;"	f
sctp_v4_pf_exit	protocol.c	/^static void sctp_v4_pf_exit(void)$/;"	f	file:
sctp_v4_pf_init	protocol.c	/^static void sctp_v4_pf_init(void)$/;"	f	file:
sctp_v4_protosw_exit	protocol.c	/^static void sctp_v4_protosw_exit(void)$/;"	f	file:
sctp_v4_protosw_init	protocol.c	/^static int sctp_v4_protosw_init(void)$/;"	f	file:
sctp_v4_scope	protocol.c	/^static sctp_scope_t sctp_v4_scope(union sctp_addr *addr)$/;"	f	file:
sctp_v4_seq_dump_addr	protocol.c	/^static void sctp_v4_seq_dump_addr(struct seq_file *seq, union sctp_addr *addr)$/;"	f	file:
sctp_v4_skb_iif	protocol.c	/^static int sctp_v4_skb_iif(const struct sk_buff *skb)$/;"	f	file:
sctp_v4_to_addr_param	protocol.c	/^static int sctp_v4_to_addr_param(const union sctp_addr *addr,$/;"	f	file:
sctp_v4_to_sk_daddr	protocol.c	/^static void sctp_v4_to_sk_daddr(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v4_to_sk_saddr	protocol.c	/^static void sctp_v4_to_sk_saddr(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v4_xmit	protocol.c	/^static inline int sctp_v4_xmit(struct sk_buff *skb,$/;"	f	file:
sctp_v6_add_protocol	ipv6.c	/^int sctp_v6_add_protocol(void)$/;"	f
sctp_v6_add_protocol	sctp.h	/^static inline int sctp_v6_add_protocol(void) { return 0; }$/;"	f
sctp_v6_addr_match_len	ipv6.c	/^static inline int sctp_v6_addr_match_len(union sctp_addr *s1,$/;"	f	file:
sctp_v6_addr_v4map	ipv6.c	/^static void sctp_v6_addr_v4map(struct sctp_sock *sp, union sctp_addr *addr)$/;"	f	file:
sctp_v6_addr_valid	ipv6.c	/^static int sctp_v6_addr_valid(union sctp_addr *addr,$/;"	f	file:
sctp_v6_available	ipv6.c	/^static int sctp_v6_available(union sctp_addr *addr, struct sctp_sock *sp)$/;"	f	file:
sctp_v6_cmp_addr	ipv6.c	/^static int sctp_v6_cmp_addr(const union sctp_addr *addr1,$/;"	f	file:
sctp_v6_copy_addrlist	ipv6.c	/^static void sctp_v6_copy_addrlist(struct list_head *addrlist,$/;"	f	file:
sctp_v6_create_accept_sk	ipv6.c	/^static struct sock *sctp_v6_create_accept_sk(struct sock *sk,$/;"	f	file:
sctp_v6_del_protocol	ipv6.c	/^void sctp_v6_del_protocol(void)$/;"	f
sctp_v6_del_protocol	sctp.h	/^static inline void sctp_v6_del_protocol(void) { return; }$/;"	f
sctp_v6_ecn_capable	ipv6.c	/^static void sctp_v6_ecn_capable(struct sock *sk)$/;"	f	file:
sctp_v6_err	ipv6.c	/^SCTP_STATIC void sctp_v6_err(struct sk_buff *skb, struct inet6_skb_parm *opt,$/;"	f
sctp_v6_from_addr_param	ipv6.c	/^static void sctp_v6_from_addr_param(union sctp_addr *addr,$/;"	f	file:
sctp_v6_from_sk	ipv6.c	/^static void sctp_v6_from_sk(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v6_from_skb	ipv6.c	/^static void sctp_v6_from_skb(union sctp_addr *addr,struct sk_buff *skb,$/;"	f	file:
sctp_v6_get_dst	ipv6.c	/^static struct dst_entry *sctp_v6_get_dst(struct sctp_association *asoc,$/;"	f	file:
sctp_v6_get_saddr	ipv6.c	/^static void sctp_v6_get_saddr(struct sctp_sock *sk,$/;"	f	file:
sctp_v6_inaddr_any	ipv6.c	/^static void sctp_v6_inaddr_any(union sctp_addr *addr, __be16 port)$/;"	f	file:
sctp_v6_is_any	ipv6.c	/^static int sctp_v6_is_any(const union sctp_addr *addr)$/;"	f	file:
sctp_v6_is_ce	ipv6.c	/^static int sctp_v6_is_ce(const struct sk_buff *skb)$/;"	f	file:
sctp_v6_map_v4	sctp.h	/^static inline void sctp_v6_map_v4(union sctp_addr *addr)$/;"	f
sctp_v6_pf_exit	ipv6.c	/^void sctp_v6_pf_exit(void)$/;"	f
sctp_v6_pf_exit	sctp.h	/^static inline void sctp_v6_pf_exit(void) { return; }$/;"	f
sctp_v6_pf_init	ipv6.c	/^void sctp_v6_pf_init(void)$/;"	f
sctp_v6_pf_init	sctp.h	/^static inline void sctp_v6_pf_init(void) { return; }$/;"	f
sctp_v6_protosw_exit	ipv6.c	/^void sctp_v6_protosw_exit(void)$/;"	f
sctp_v6_protosw_exit	sctp.h	/^static inline void sctp_v6_protosw_exit(void) { return; }$/;"	f
sctp_v6_protosw_init	ipv6.c	/^int sctp_v6_protosw_init(void)$/;"	f
sctp_v6_protosw_init	sctp.h	/^static inline int sctp_v6_protosw_init(void) { return 0; }$/;"	f
sctp_v6_scope	ipv6.c	/^static sctp_scope_t sctp_v6_scope(union sctp_addr *addr)$/;"	f	file:
sctp_v6_seq_dump_addr	ipv6.c	/^static void sctp_v6_seq_dump_addr(struct seq_file *seq, union sctp_addr *addr)$/;"	f	file:
sctp_v6_skb_iif	ipv6.c	/^static int sctp_v6_skb_iif(const struct sk_buff *skb)$/;"	f	file:
sctp_v6_to_addr	ipv6.c	/^static void sctp_v6_to_addr(union sctp_addr *addr, struct in6_addr *saddr,$/;"	f	file:
sctp_v6_to_addr_param	ipv6.c	/^static int sctp_v6_to_addr_param(const union sctp_addr *addr,$/;"	f	file:
sctp_v6_to_sk_daddr	ipv6.c	/^static void sctp_v6_to_sk_daddr(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v6_to_sk_saddr	ipv6.c	/^static void sctp_v6_to_sk_saddr(union sctp_addr *addr, struct sock *sk)$/;"	f	file:
sctp_v6_xmit	ipv6.c	/^static int sctp_v6_xmit(struct sk_buff *skb, struct sctp_transport *transport)$/;"	f	file:
sctp_valid_cookie_life	structs.h	253;"	d
sctp_verb_t	command.h	/^} sctp_verb_t;$/;"	t	typeref:enum:__anon1
sctp_verify_addr	socket.c	/^static inline int sctp_verify_addr(struct sock *sk, union sctp_addr *addr,$/;"	f	file:
sctp_verify_asconf	sm_make_chunk.c	/^int sctp_verify_asconf(const struct sctp_association *asoc,$/;"	f
sctp_verify_ext_param	sm_make_chunk.c	/^static int sctp_verify_ext_param(union sctp_params param)$/;"	f	file:
sctp_verify_init	sm_make_chunk.c	/^int sctp_verify_init(const struct sctp_association *asoc,$/;"	f
sctp_verify_param	sm_make_chunk.c	/^static sctp_ierror_t sctp_verify_param(const struct sctp_association *asoc,$/;"	f	file:
sctp_vtag_hashfn	sctp.h	/^static inline int sctp_vtag_hashfn(__u16 lport, __u16 rport, __u32 vtag)$/;"	f
sctp_vtag_verify	sm.h	/^sctp_vtag_verify(const struct sctp_chunk *chunk,$/;"	f
sctp_vtag_verify_either	sm.h	/^sctp_vtag_verify_either(const struct sctp_chunk *chunk,$/;"	f
sctp_wait_for_accept	socket.c	/^static int sctp_wait_for_accept(struct sock *sk, long timeo)$/;"	f	file:
sctp_wait_for_close	socket.c	/^static void sctp_wait_for_close(struct sock *sk, long timeout)$/;"	f	file:
sctp_wait_for_connect	socket.c	/^static int sctp_wait_for_connect(struct sctp_association *asoc, long *timeo_p)$/;"	f	file:
sctp_wait_for_packet	socket.c	/^static int sctp_wait_for_packet(struct sock * sk, int *err, long *timeo_p)$/;"	f	file:
sctp_wait_for_sndbuf	socket.c	/^static int sctp_wait_for_sndbuf(struct sctp_association *asoc, long *timeo_p,$/;"	f	file:
sctp_walk_errors	sctp.h	560;"	d
sctp_walk_fwdtsn	sctp.h	570;"	d
sctp_walk_params	sctp.h	551;"	d
sctp_wfree	socket.c	/^static void sctp_wfree(struct sk_buff *skb)$/;"	f	file:
sctp_write_lock	sctp.h	215;"	d
sctp_write_space	socket.c	/^void sctp_write_space(struct sock *sk)$/;"	f
sctp_write_unlock	sctp.h	216;"	d
sctp_writeable	socket.c	/^static int sctp_writeable(struct sock *sk)$/;"	f	file:
sctp_wspace	socket.c	/^static inline int sctp_wspace(struct sctp_association *asoc)$/;"	f	file:
sctp_xmit	structs.h	/^	int		(*sctp_xmit)	(struct sk_buff *skb,$/;"	m	struct:sctp_af
sctp_xmit_t	constants.h	/^} sctp_xmit_t;$/;"	t	typeref:enum:__anon21
sctpprobe_exit	probe.c	/^module_exit(sctpprobe_exit);$/;"	v
sctpprobe_exit	probe.c	/^static __exit void sctpprobe_exit(void)$/;"	f	file:
sctpprobe_fops	probe.c	/^static const struct file_operations sctpprobe_fops = {$/;"	v	typeref:struct:file_operations	file:
sctpprobe_init	probe.c	/^module_init(sctpprobe_init);$/;"	v
sctpprobe_init	probe.c	/^static __init int sctpprobe_init(void)$/;"	f	file:
sctpprobe_open	probe.c	/^static int sctpprobe_open(struct inode *inode, struct file *file)$/;"	f	file:
sctpprobe_read	probe.c	/^static ssize_t sctpprobe_read(struct file *file, char __user *buf,$/;"	f	file:
sctpv6_prot	socket.c	/^struct proto sctpv6_prot = {$/;"	v	typeref:struct:proto
sctpv6_protocol	ipv6.c	/^static const struct inet6_protocol sctpv6_protocol = {$/;"	v	typeref:struct:inet6_protocol	file:
sctpv6_seqpacket_protosw	ipv6.c	/^static struct inet_protosw sctpv6_seqpacket_protosw = {$/;"	v	typeref:struct:inet_protosw	file:
sctpv6_stream_protosw	ipv6.c	/^static struct inet_protosw sctpv6_stream_protosw = {$/;"	v	typeref:struct:inet_protosw	file:
sctpw	probe.c	/^} sctpw;$/;"	v	typeref:struct:__anon29	file:
sd	user.h	/^	int sd;$/;"	m	struct:__anon48
secret_key	socket.c	/^	__u8 secret_key[SCTP_HOW_MANY_SECRETS][SCTP_SECRET_SIZE];$/;"	m	struct:__sctp_act	file:
secret_key	structs.h	/^	__u8 secret_key[SCTP_HOW_MANY_SECRETS][SCTP_SECRET_SIZE];$/;"	m	struct:sctp_endpoint
send_error	structs.h	/^	int send_error;$/;"	m	struct:sctp_datamsg
send_failed	structs.h	/^	u8 send_failed:1,$/;"	m	struct:sctp_datamsg
send_ready	structs.h	/^	struct list_head send_ready;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::list_head
send_verify	structs.h	/^	int  (*send_verify) (struct sctp_sock *, union sctp_addr *);$/;"	m	struct:sctp_pf
sender_dry_assoc_id	user.h	/^	sctp_assoc_t sender_dry_assoc_id;$/;"	m	struct:sctp_sender_dry_event
sender_dry_flags	user.h	/^	__u16 sender_dry_flags;$/;"	m	struct:sctp_sender_dry_event
sender_dry_length	user.h	/^	__u32 sender_dry_length;$/;"	m	struct:sctp_sender_dry_event
sender_dry_type	user.h	/^	__u16 sender_dry_type;$/;"	m	struct:sctp_sender_dry_event
sent_at	structs.h	/^	unsigned long sent_at;$/;"	m	struct:sctp_chunk
sent_at	structs.h	/^	unsigned long sent_at;$/;"	m	struct:sctp_sender_hb_info
seq_dump_addr	structs.h	/^	void		(*seq_dump_addr)(struct seq_file *seq,$/;"	m	struct:sctp_af
setAssoc	socket.c	/^struct sctp_association *setAssoc(struct sock *sk, tAsoc *act, sctp_assoc_t asocId, char client)$/;"	f
setsockopt	structs.h	/^	int		(*setsockopt)	(struct sock *sk,$/;"	m	struct:sctp_af
shmac_idents	user.h	/^	__u16		shmac_idents[];$/;"	m	struct:sctp_hmacalgo
shmac_num_idents	user.h	/^	__u32		shmac_num_idents;$/;"	m	struct:sctp_hmacalgo
shutdown_hdr	structs.h	/^		struct sctp_shutdownhdr *shutdown_hdr;$/;"	m	union:sctp_chunk::__anon38	typeref:struct:sctp_chunk::__anon38::sctp_shutdownhdr
shutdown_last_sent_to	structs.h	/^	struct sctp_transport *shutdown_last_sent_to;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_transport
shutdown_retries	structs.h	/^	int shutdown_retries;$/;"	m	struct:sctp_association
signature	structs.h	/^	__u8 signature[SCTP_SECRET_SIZE];$/;"	m	struct:sctp_signed_cookie
sinfo	structs.h	/^	struct sctp_sndrcvinfo sinfo;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_sndrcvinfo
sinfo_assoc_id	user.h	/^	sctp_assoc_t sinfo_assoc_id;$/;"	m	struct:sctp_sndrcvinfo
sinfo_context	user.h	/^	__u32 sinfo_context;$/;"	m	struct:sctp_sndrcvinfo
sinfo_cumtsn	user.h	/^	__u32 sinfo_cumtsn;$/;"	m	struct:sctp_sndrcvinfo
sinfo_flags	user.h	/^	__u16 sinfo_flags;$/;"	m	struct:sctp_sndrcvinfo
sinfo_ppid	user.h	/^	__u32 sinfo_ppid;$/;"	m	struct:sctp_sndrcvinfo
sinfo_ssn	user.h	/^	__u16 sinfo_ssn;$/;"	m	struct:sctp_sndrcvinfo
sinfo_stream	user.h	/^	__u16 sinfo_stream;$/;"	m	struct:sctp_sndrcvinfo
sinfo_timetolive	user.h	/^	__u32 sinfo_timetolive;$/;"	m	struct:sctp_sndrcvinfo
sinfo_tsn	user.h	/^	__u32 sinfo_tsn;$/;"	m	struct:sctp_sndrcvinfo
singleton	structs.h	/^		singleton:1,		\/* Only chunk in the packet? *\/$/;"	m	struct:sctp_chunk
sinit_max_attempts	user.h	/^	__u16 sinit_max_attempts;$/;"	m	struct:sctp_initmsg
sinit_max_init_timeo	user.h	/^	__u16 sinit_max_init_timeo;$/;"	m	struct:sctp_initmsg
sinit_max_instreams	structs.h	/^	__u16 sinit_max_instreams;$/;"	m	struct:sctp_cookie
sinit_max_instreams	user.h	/^	__u16 sinit_max_instreams;$/;"	m	struct:sctp_initmsg
sinit_num_ostreams	structs.h	/^	__u16 sinit_num_ostreams;$/;"	m	struct:sctp_cookie
sinit_num_ostreams	user.h	/^	__u16 sinit_num_ostreams;$/;"	m	struct:sctp_initmsg
size	net_namespace.h	/^	size_t size;$/;"	m	struct:pernet_operations
size	structs.h	/^	size_t size;$/;"	m	struct:sctp_packet
sk	structs.h	/^	struct sock *sk;$/;"	m	struct:sctp_ep_common	typeref:struct:sctp_ep_common::sock
skb	structs.h	/^	struct sk_buff *skb;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sk_buff
skb_iif	structs.h	/^	int		(*skb_iif)	(const struct sk_buff *sk);$/;"	m	struct:sctp_af
skb_msgname	structs.h	/^	void (*skb_msgname)  (struct sk_buff *, char *, int *);$/;"	m	struct:sctp_pf
sn_adaptation_event	user.h	/^	struct sctp_adaptation_event sn_adaptation_event;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_adaptation_event
sn_assoc_change	user.h	/^	struct sctp_assoc_change sn_assoc_change;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_assoc_change
sn_authkey_event	user.h	/^	struct sctp_authkey_event sn_authkey_event;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_authkey_event
sn_flags	user.h	/^		__u16 sn_flags;$/;"	m	struct:sctp_notification::__anon47
sn_header	user.h	/^	} sn_header;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::__anon47
sn_length	user.h	/^		__u32 sn_length;$/;"	m	struct:sctp_notification::__anon47
sn_paddr_change	user.h	/^	struct sctp_paddr_change sn_paddr_change;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_paddr_change
sn_pdapi_event	user.h	/^	struct sctp_pdapi_event sn_pdapi_event;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_pdapi_event
sn_remote_error	user.h	/^	struct sctp_remote_error sn_remote_error;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_remote_error
sn_send_failed	user.h	/^	struct sctp_send_failed sn_send_failed;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_send_failed
sn_sender_dry_event	user.h	/^	struct sctp_sender_dry_event sn_sender_dry_event;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_sender_dry_event
sn_shutdown_event	user.h	/^	struct sctp_shutdown_event sn_shutdown_event;$/;"	m	union:sctp_notification	typeref:struct:sctp_notification::sctp_shutdown_event
sn_type	user.h	/^		__u16 sn_type;             \/* Notification type. *\/$/;"	m	struct:sctp_notification::__anon47
sndbuf_policy	structs.h	/^	__u32 sndbuf_policy;$/;"	m	struct:sctp_endpoint
sndbuf_policy	structs.h	/^	int sndbuf_policy;$/;"	m	struct:sctp_globals
sndbuf_used	structs.h	/^	int sndbuf_used;$/;"	m	struct:sctp_association
sock	objcnt.c	/^SCTP_DBG_OBJCNT(sock);$/;"	v
sockaddr_len	structs.h	/^	int		sockaddr_len;$/;"	m	struct:sctp_af
source	structs.h	/^	union sctp_addr source;$/;"	m	struct:sctp_chunk	typeref:union:sctp_chunk::sctp_addr
source_port	structs.h	/^	__u16 source_port;$/;"	m	struct:sctp_packet
spc_aaddr	user.h	/^	struct sockaddr_storage spc_aaddr;$/;"	m	struct:sctp_paddr_change	typeref:struct:sctp_paddr_change::sockaddr_storage
spc_assoc_id	user.h	/^	sctp_assoc_t spc_assoc_id;$/;"	m	struct:sctp_paddr_change
spc_error	user.h	/^	int spc_error;$/;"	m	struct:sctp_paddr_change
spc_flags	user.h	/^	__u16 spc_flags;$/;"	m	struct:sctp_paddr_change
spc_length	user.h	/^	__u32 spc_length;$/;"	m	struct:sctp_paddr_change
spc_state	user.h	/^	int spc_state;$/;"	m	struct:sctp_paddr_change
spc_type	user.h	/^	__u16 spc_type;$/;"	m	struct:sctp_paddr_change
spinfo_address	user.h	/^	struct sockaddr_storage	spinfo_address;$/;"	m	struct:sctp_paddrinfo	typeref:struct:sctp_paddrinfo::sockaddr_storage
spinfo_assoc_id	user.h	/^	sctp_assoc_t		spinfo_assoc_id;$/;"	m	struct:sctp_paddrinfo
spinfo_cwnd	user.h	/^	__u32			spinfo_cwnd;$/;"	m	struct:sctp_paddrinfo
spinfo_mtu	user.h	/^	__u32			spinfo_mtu;$/;"	m	struct:sctp_paddrinfo
spinfo_rto	user.h	/^	__u32			spinfo_rto;$/;"	m	struct:sctp_paddrinfo
spinfo_srtt	user.h	/^	__u32			spinfo_srtt;$/;"	m	struct:sctp_paddrinfo
spinfo_state	user.h	/^	__s32			spinfo_state;$/;"	m	struct:sctp_paddrinfo
spp_address	user.h	/^	struct sockaddr_storage	spp_address;$/;"	m	struct:sctp_paddrparams	typeref:struct:sctp_paddrparams::sockaddr_storage
spp_assoc_id	user.h	/^	sctp_assoc_t		spp_assoc_id;$/;"	m	struct:sctp_paddrparams
spp_flags	user.h	/^	__u32			spp_flags;$/;"	m	struct:sctp_paddrparams
spp_hbinterval	user.h	/^	__u32			spp_hbinterval;$/;"	m	struct:sctp_paddrparams
spp_pathmaxrxt	user.h	/^	__u16			spp_pathmaxrxt;$/;"	m	struct:sctp_paddrparams
spp_pathmtu	user.h	/^	__u32			spp_pathmtu;$/;"	m	struct:sctp_paddrparams
spp_sackdelay	user.h	/^	__u32			spp_sackdelay;$/;"	m	struct:sctp_paddrparams
spt_address	user.h	/^	struct sockaddr_storage spt_address;$/;"	m	struct:sctp_paddrthlds	typeref:struct:sctp_paddrthlds::sockaddr_storage
spt_assoc_id	user.h	/^	sctp_assoc_t spt_assoc_id;$/;"	m	struct:sctp_paddrthlds
spt_pathmaxrxt	user.h	/^	__u16 spt_pathmaxrxt;$/;"	m	struct:sctp_paddrthlds
spt_pathpfthld	user.h	/^	__u16 spt_pathpfthld;$/;"	m	struct:sctp_paddrthlds
sre_assoc_id	user.h	/^	sctp_assoc_t sre_assoc_id;$/;"	m	struct:sctp_remote_error
sre_data	user.h	/^	__u8 sre_data[0];$/;"	m	struct:sctp_remote_error
sre_error	user.h	/^	__u16 sre_error;$/;"	m	struct:sctp_remote_error
sre_flags	user.h	/^	__u16 sre_flags;$/;"	m	struct:sctp_remote_error
sre_length	user.h	/^	__u32 sre_length;$/;"	m	struct:sctp_remote_error
sre_type	user.h	/^	__u16 sre_type;$/;"	m	struct:sctp_remote_error
srto_assoc_id	user.h	/^	sctp_assoc_t	srto_assoc_id;$/;"	m	struct:sctp_rtoinfo
srto_initial	user.h	/^	__u32		srto_initial;$/;"	m	struct:sctp_rtoinfo
srto_max	user.h	/^	__u32		srto_max;$/;"	m	struct:sctp_rtoinfo
srto_min	user.h	/^	__u32		srto_min;$/;"	m	struct:sctp_rtoinfo
srtt	structs.h	/^	__u32 srtt;$/;"	m	struct:sctp_transport
ssb_adaptation_ind	user.h	/^	__u32	ssb_adaptation_ind;$/;"	m	struct:sctp_setadaptation
sse_assoc_id	user.h	/^	sctp_assoc_t sse_assoc_id;$/;"	m	struct:sctp_shutdown_event
sse_flags	user.h	/^	__u16 sse_flags;$/;"	m	struct:sctp_shutdown_event
sse_length	user.h	/^	__u32 sse_length;$/;"	m	struct:sctp_shutdown_event
sse_type	user.h	/^	__u16 sse_type;$/;"	m	struct:sctp_shutdown_event
ssf_assoc_id	user.h	/^	sctp_assoc_t ssf_assoc_id;$/;"	m	struct:sctp_send_failed
ssf_data	user.h	/^	__u8 ssf_data[0];$/;"	m	struct:sctp_send_failed
ssf_error	user.h	/^	__u32 ssf_error;$/;"	m	struct:sctp_send_failed
ssf_flags	user.h	/^	__u16 ssf_flags;$/;"	m	struct:sctp_send_failed
ssf_info	user.h	/^	struct sctp_sndrcvinfo ssf_info;$/;"	m	struct:sctp_send_failed	typeref:struct:sctp_send_failed::sctp_sndrcvinfo
ssf_length	user.h	/^	__u32 ssf_length;$/;"	m	struct:sctp_send_failed
ssf_type	user.h	/^	__u16 ssf_type;$/;"	m	struct:sctp_send_failed
ssn	structs.h	/^	__u16 *ssn;$/;"	m	struct:sctp_stream
ssn	ulpevent.h	/^	__u16 ssn;$/;"	m	struct:sctp_ulpevent
ssnmap	objcnt.c	/^SCTP_DBG_OBJCNT(ssnmap);$/;"	v
ssnmap	socket.c	/^	__u16 ssnmap[];$/;"	m	struct:_updateEnb	file:
ssnmap	structs.h	/^	struct sctp_ssnmap *ssnmap;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_ssnmap
ssp_addr	user.h	/^	struct sockaddr_storage ssp_addr;$/;"	m	struct:sctp_prim	typeref:struct:sctp_prim::sockaddr_storage
ssp_assoc_id	user.h	/^	sctp_assoc_t            ssp_assoc_id;$/;"	m	struct:sctp_prim
sspp_addr	user.h	/^	struct sockaddr_storage sspp_addr;$/;"	m	struct:sctp_setpeerprim	typeref:struct:sctp_setpeerprim::sockaddr_storage
sspp_assoc_id	user.h	/^	sctp_assoc_t            sspp_assoc_id;$/;"	m	struct:sctp_setpeerprim
sstat_assoc_id	user.h	/^	sctp_assoc_t		sstat_assoc_id;$/;"	m	struct:sctp_status
sstat_fragmentation_point	user.h	/^	__u32			sstat_fragmentation_point;$/;"	m	struct:sctp_status
sstat_instrms	user.h	/^	__u16			sstat_instrms;$/;"	m	struct:sctp_status
sstat_outstrms	user.h	/^	__u16			sstat_outstrms;$/;"	m	struct:sctp_status
sstat_penddata	user.h	/^	__u16			sstat_penddata;$/;"	m	struct:sctp_status
sstat_primary	user.h	/^	struct sctp_paddrinfo	sstat_primary;$/;"	m	struct:sctp_status	typeref:struct:sctp_status::sctp_paddrinfo
sstat_rwnd	user.h	/^	__u32			sstat_rwnd;$/;"	m	struct:sctp_status
sstat_state	user.h	/^	__s32			sstat_state;$/;"	m	struct:sctp_status
sstat_unackdata	user.h	/^	__u16			sstat_unackdata;$/;"	m	struct:sctp_status
ssthresh	structs.h	/^	__u32 ssthresh;$/;"	m	struct:sctp_transport
start	tsnmap.h	/^	__u32 start;$/;"	m	struct:sctp_tsnmap_iter
state	command.h	/^	sctp_state_t state;$/;"	m	union:__anon2
state	socket.c	/^	sctp_state_t state;$/;"	m	struct:_updateEnb	file:
state	structs.h	/^	__u8 state;$/;"	m	struct:sctp_sockaddr_entry
state	structs.h	/^	int state;$/;"	m	struct:sctp_transport
state	structs.h	/^	sctp_state_t state;$/;"	m	struct:sctp_association
stream	ulpevent.h	/^	__u16 stream;$/;"	m	struct:sctp_ulpevent
subh	structs.h	/^	} subh;$/;"	m	struct:sctp_chunk	typeref:union:sctp_chunk::__anon38
subscribe	structs.h	/^	struct sctp_event_subscribe subscribe;$/;"	m	struct:sctp_sock	typeref:struct:sctp_sock::sctp_event_subscribe
supported_addrs	structs.h	/^	int  (*supported_addrs)(const struct sctp_sock *, __be16 *);$/;"	m	struct:sctp_pf
sysctl_sctp_mem	protocol.c	/^int sysctl_sctp_mem[3];$/;"	v
sysctl_sctp_rmem	protocol.c	/^int sysctl_sctp_rmem[3];$/;"	v
sysctl_sctp_wmem	protocol.c	/^int sysctl_sctp_wmem[3];$/;"	v
sysctls	net_namespace.h	/^	struct ctl_table_set	sysctls;$/;"	m	struct:net	typeref:struct:net::ctl_table_set
tAsoc	socket.c	/^} tAsoc;$/;"	t	typeref:struct:__sctp_act	file:
tSockMsg	socket.c	/^}tSockMsg;$/;"	t	typeref:struct:_sockMsg	file:
tSockPL	socket.c	/^}tSockPL;$/;"	t	typeref:union:_sockPL	file:
tUpdate	socket.c	/^} tUpdate;$/;"	t	typeref:struct:_updateEnb	file:
t_new	sctp.h	582;"	d
temp	structs.h	/^	     temp:1,		\/* Is it a temporary association? *\/$/;"	m	struct:sctp_association
timeout	constants.h	/^	sctp_event_timeout_t timeout;$/;"	m	union:__anon12
timeout_event_table	sm_statetable.c	/^static const sctp_sm_table_entry_t timeout_event_table[SCTP_NUM_TIMEOUT_TYPES][SCTP_STATE_NUM_STATES] = {$/;"	v	file:
timeout_event_table	sm_statetable.c	/^timeout_event_table[SCTP_NUM_TIMEOUT_TYPES][SCTP_STATE_NUM_STATES];$/;"	v	file:
timeouts	structs.h	/^	unsigned long timeouts[SCTP_NUM_TIMEOUT_TYPES];$/;"	m	struct:sctp_association
timer_max	sysctl.c	/^static int timer_max = 86400000; \/* ms in one day *\/$/;"	v	file:
timers	structs.h	/^	struct timer_list timers[SCTP_NUM_TIMEOUT_TYPES];$/;"	m	struct:sctp_association	typeref:struct:sctp_association::timer_list
to	command.h	/^	sctp_event_timeout_t to;$/;"	m	union:__anon2
to_addr_param	structs.h	/^	int		(*to_addr_param) (const union sctp_addr *,$/;"	m	struct:sctp_af
to_sk_daddr	structs.h	/^	void		(*to_sk_daddr)	(union sctp_addr *,$/;"	m	struct:sctp_af
to_sk_saddr	structs.h	/^	void		(*to_sk_saddr)	(union sctp_addr *,$/;"	m	struct:sctp_af
transmitted	structs.h	/^	struct list_head transmitted;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::list_head
transmitted_list	structs.h	/^	struct list_head transmitted_list;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::list_head
transport	command.h	/^	struct sctp_transport *transport;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_transport
transport	objcnt.c	/^SCTP_DBG_OBJCNT(transport);$/;"	v
transport	structs.h	/^	struct sctp_transport *transport;$/;"	m	struct:sctp_chunk	typeref:struct:sctp_chunk::sctp_transport
transport	structs.h	/^	struct sctp_transport *transport;$/;"	m	struct:sctp_packet	typeref:struct:sctp_packet::sctp_transport
transport_addr_list	structs.h	/^		struct list_head transport_addr_list;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::list_head
transport_count	structs.h	/^		__u16 transport_count;$/;"	m	struct:sctp_association::__anon42
transports	structs.h	/^	struct list_head transports;$/;"	m	struct:sctp_transport	typeref:struct:sctp_transport::list_head
tsn	ulpevent.h	/^	__u32 tsn;$/;"	m	struct:sctp_ulpevent
tsn_gap_acked	structs.h	/^		tsn_gap_acked:1,	\/* Is this chunk acked by a GAP ACK? *\/$/;"	m	struct:sctp_chunk
tsn_map	structs.h	/^		struct sctp_tsnmap tsn_map;$/;"	m	struct:sctp_association::__anon42	typeref:struct:sctp_association::__anon42::sctp_tsnmap
tsn_map	tsnmap.h	/^	unsigned long *tsn_map;$/;"	m	struct:sctp_tsnmap
tsn_missing_report	structs.h	/^		tsn_missing_report:2,	\/* Data chunk missing counter. *\/$/;"	m	struct:sctp_chunk
tstart	probe.c	/^	struct timespec	  tstart;$/;"	m	struct:__anon29	typeref:struct:__anon29::timespec	file:
tv_lt	sctp.h	585;"	d
type	sm_make_chunk.c	/^	__be16 type;$/;"	m	struct:__sctp_missing	file:
type	socket.c	/^	int type;$/;"	m	struct:_sockMsg	file:
type	structs.h	/^	sctp_endpoint_type_t type;$/;"	m	struct:sctp_ep_common
type	structs.h	/^	sctp_socket_type_t type;$/;"	m	struct:sctp_sock
u	socket.c	/^	tUpdate u;$/;"	m	union:_sockPL	file:
u16	command.h	/^	__u16 u16;$/;"	m	union:__anon2
u32	command.h	/^	__u32 u32;$/;"	m	union:__anon2
u8	command.h	/^	__u8 u8;$/;"	m	union:__anon2
ulpevent	command.h	/^	struct sctp_ulpevent *ulpevent;$/;"	m	union:__anon2	typeref:struct:__anon2::sctp_ulpevent
ulpq	structs.h	/^	struct sctp_ulpq ulpq;$/;"	m	struct:sctp_association	typeref:struct:sctp_association::sctp_ulpq
unack_data	structs.h	/^	__u16 unack_data;$/;"	m	struct:sctp_association
unregister_net_sysctl_table	net_namespace.h	/^static inline void unregister_net_sysctl_table(struct ctl_table_header *header)$/;"	f
unx	net_namespace.h	/^	struct netns_unix	unx;$/;"	m	struct:net	typeref:struct:net::netns_unix
use_count	net_namespace.h	/^	atomic_t		use_count;	\/* To track references we$/;"	m	struct:net
user_frag	structs.h	/^	__u32 user_frag;$/;"	m	struct:sctp_association
user_frag	structs.h	/^	int user_frag;$/;"	m	struct:sctp_sock
user_ns	net_namespace.h	/^	struct user_namespace   *user_ns;	\/* Owning user namespace *\/$/;"	m	struct:net	typeref:struct:net::user_namespace
v	structs.h	/^		__u8 *v;$/;"	m	union:sctp_chunk::__anon38
v	structs.h	/^	void *v;$/;"	m	union:sctp_params
v4	structs.h	/^	struct sctp_ipv4addr_param *v4;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_ipv4addr_param
v4	structs.h	/^	struct sctp_ipv4addr_param v4;$/;"	m	union:sctp_addr_param	typeref:struct:sctp_addr_param::sctp_ipv4addr_param
v4	structs.h	/^	struct sockaddr_in v4;$/;"	m	union:sctp_addr	typeref:struct:sctp_addr::sockaddr_in
v4mapped	structs.h	/^	__u8 v4mapped;$/;"	m	struct:sctp_sock
v6	structs.h	/^	struct sctp_ipv6addr_param *v6;$/;"	m	union:sctp_params	typeref:struct:sctp_params::sctp_ipv6addr_param
v6	structs.h	/^	struct sctp_ipv6addr_param v6;$/;"	m	union:sctp_addr_param	typeref:struct:sctp_addr_param::sctp_ipv6addr_param
v6	structs.h	/^	struct sockaddr_in6 v6;$/;"	m	union:sctp_addr	typeref:struct:sctp_addr::sockaddr_in6
valid	structs.h	/^	__u8 valid;$/;"	m	struct:sctp_sockaddr_entry
valid_cookie_life	structs.h	/^	unsigned int valid_cookie_life;$/;"	m	struct:sctp_globals
verb	command.h	/^	sctp_verb_t verb;$/;"	m	struct:__anon3
vtag	structs.h	/^	__u32 vtag;$/;"	m	struct:sctp_packet
wait	probe.c	/^	wait_queue_head_t wait;$/;"	m	struct:__anon29	file:
wait	structs.h	/^	wait_queue_head_t	wait;$/;"	m	struct:sctp_association
wext_nlevents	net_namespace.h	/^	struct sk_buff_head	wext_nlevents;$/;"	m	struct:net	typeref:struct:net::sk_buff_head
write_pnet	net_namespace.h	/^static inline void write_pnet(struct net **pnet, struct net *net)$/;"	f
write_pnet	net_namespace.h	255;"	d
xfrm	net_namespace.h	/^	struct netns_xfrm	xfrm;$/;"	m	struct:net	typeref:struct:net::netns_xfrm
xt	net_namespace.h	/^	struct netns_xt		xt;$/;"	m	struct:net	typeref:struct:net::netns_xt
zero	sysctl.c	/^static int zero = 0;$/;"	v	file:
